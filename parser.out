Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    ALTER
    ALTERB
    ARROBA
    CASE
    COMMENT
    DIFFERENT
    DIV
    ELSE
    EQUAL
    ISTRUE
    MAQ
    MAQEQUAL
    MASTER
    MEQ
    MEQEQUAL
    MUL
    REPEAT
    SIGNAL
    SUB
    THEN
    UNTIL
    VIEWSIGNAL
    WHEN
    WHILE

Grammar

Rule 0     S' -> procedure_list
Rule 1     procedure_list -> procedure
Rule 2     procedure_list -> procedure_list procedure
Rule 3     procedure -> PROC ID LPARENT sentences RPARENT SEMICOLON
Rule 4     sentences -> sentence
Rule 5     sentences -> sentences sentence
Rule 6     sentence -> sentence1
Rule 7     sentence -> sentence2
Rule 8     sentence -> sentence3
Rule 9     sentence -> sentence4
Rule 10    sentence1 -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 11    sentence1 -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 12    sentence2 -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 13    sentence2 -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
Rule 14    sentence3 -> CALL LPARENT ID RPARENT SEMICOLON
Rule 15    sentence4 -> PRINTVALUES RPARENT STRING RPARENT
Rule 16    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 
ALTER                : 
ALTERB               : 
ARROBA               : 
BOOL                 : 11 13
CALL                 : 14
CASE                 : 
COMA                 : 10 10 11 11 12 13
COMMENT              : 
DIFFERENT            : 
DIV                  : 
ELSE                 : 
EQUAL                : 
ID                   : 3 10 11 12 13 14
INTEGER              : 10 12
ISTRUE               : 
LPARENT              : 3 10 11 12 13 14
MAQ                  : 
MAQEQUAL             : 
MASTER               : 
MEQ                  : 
MEQEQUAL             : 
MUL                  : 
NEW                  : 10 11
PRINTVALUES          : 15
PROC                 : 3
REPEAT               : 
RPARENT              : 3 10 11 12 13 14 15 15
SEMICOLON            : 3 10 11 12 13 14
SIGNAL               : 
STRING               : 15
SUB                  : 
THEN                 : 
TYPE                 : 10 11
UNTIL                : 
VALUES               : 12 13
VIEWSIGNAL           : 
WHEN                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

empty                : 
procedure            : 1 2
procedure_list       : 2 0
sentence             : 4 5
sentence1            : 6
sentence2            : 7
sentence3            : 8
sentence4            : 9
sentences            : 3 5

Parsing method: LALR

state 0

    (0) S' -> . procedure_list
    (1) procedure_list -> . procedure
    (2) procedure_list -> . procedure_list procedure
    (3) procedure -> . PROC ID LPARENT sentences RPARENT SEMICOLON

    PROC            shift and go to state 3

    procedure_list                 shift and go to state 1
    procedure                      shift and go to state 2

state 1

    (0) S' -> procedure_list .
    (2) procedure_list -> procedure_list . procedure
    (3) procedure -> . PROC ID LPARENT sentences RPARENT SEMICOLON

    PROC            shift and go to state 3

    procedure                      shift and go to state 4

state 2

    (1) procedure_list -> procedure .

    PROC            reduce using rule 1 (procedure_list -> procedure .)
    $end            reduce using rule 1 (procedure_list -> procedure .)


state 3

    (3) procedure -> PROC . ID LPARENT sentences RPARENT SEMICOLON

    ID              shift and go to state 5


state 4

    (2) procedure_list -> procedure_list procedure .

    PROC            reduce using rule 2 (procedure_list -> procedure_list procedure .)
    $end            reduce using rule 2 (procedure_list -> procedure_list procedure .)


state 5

    (3) procedure -> PROC ID . LPARENT sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 6


state 6

    (3) procedure -> PROC ID LPARENT . sentences RPARENT SEMICOLON
    (4) sentences -> . sentence
    (5) sentences -> . sentences sentence
    (6) sentence -> . sentence1
    (7) sentence -> . sentence2
    (8) sentence -> . sentence3
    (9) sentence -> . sentence4
    (10) sentence1 -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (11) sentence1 -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (12) sentence2 -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (13) sentence2 -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (14) sentence3 -> . CALL LPARENT ID RPARENT SEMICOLON
    (15) sentence4 -> . PRINTVALUES RPARENT STRING RPARENT

    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    CALL            shift and go to state 15
    PRINTVALUES     shift and go to state 16

    sentences                      shift and go to state 7
    sentence                       shift and go to state 8
    sentence1                      shift and go to state 9
    sentence2                      shift and go to state 10
    sentence3                      shift and go to state 11
    sentence4                      shift and go to state 12

state 7

    (3) procedure -> PROC ID LPARENT sentences . RPARENT SEMICOLON
    (5) sentences -> sentences . sentence
    (6) sentence -> . sentence1
    (7) sentence -> . sentence2
    (8) sentence -> . sentence3
    (9) sentence -> . sentence4
    (10) sentence1 -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (11) sentence1 -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (12) sentence2 -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (13) sentence2 -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (14) sentence3 -> . CALL LPARENT ID RPARENT SEMICOLON
    (15) sentence4 -> . PRINTVALUES RPARENT STRING RPARENT

    RPARENT         shift and go to state 17
    NEW             shift and go to state 13
    VALUES          shift and go to state 14
    CALL            shift and go to state 15
    PRINTVALUES     shift and go to state 16

    sentence                       shift and go to state 18
    sentence1                      shift and go to state 9
    sentence2                      shift and go to state 10
    sentence3                      shift and go to state 11
    sentence4                      shift and go to state 12

state 8

    (4) sentences -> sentence .

    RPARENT         reduce using rule 4 (sentences -> sentence .)
    NEW             reduce using rule 4 (sentences -> sentence .)
    VALUES          reduce using rule 4 (sentences -> sentence .)
    CALL            reduce using rule 4 (sentences -> sentence .)
    PRINTVALUES     reduce using rule 4 (sentences -> sentence .)


state 9

    (6) sentence -> sentence1 .

    RPARENT         reduce using rule 6 (sentence -> sentence1 .)
    NEW             reduce using rule 6 (sentence -> sentence1 .)
    VALUES          reduce using rule 6 (sentence -> sentence1 .)
    CALL            reduce using rule 6 (sentence -> sentence1 .)
    PRINTVALUES     reduce using rule 6 (sentence -> sentence1 .)


state 10

    (7) sentence -> sentence2 .

    RPARENT         reduce using rule 7 (sentence -> sentence2 .)
    NEW             reduce using rule 7 (sentence -> sentence2 .)
    VALUES          reduce using rule 7 (sentence -> sentence2 .)
    CALL            reduce using rule 7 (sentence -> sentence2 .)
    PRINTVALUES     reduce using rule 7 (sentence -> sentence2 .)


state 11

    (8) sentence -> sentence3 .

    RPARENT         reduce using rule 8 (sentence -> sentence3 .)
    NEW             reduce using rule 8 (sentence -> sentence3 .)
    VALUES          reduce using rule 8 (sentence -> sentence3 .)
    CALL            reduce using rule 8 (sentence -> sentence3 .)
    PRINTVALUES     reduce using rule 8 (sentence -> sentence3 .)


state 12

    (9) sentence -> sentence4 .

    RPARENT         reduce using rule 9 (sentence -> sentence4 .)
    NEW             reduce using rule 9 (sentence -> sentence4 .)
    VALUES          reduce using rule 9 (sentence -> sentence4 .)
    CALL            reduce using rule 9 (sentence -> sentence4 .)
    PRINTVALUES     reduce using rule 9 (sentence -> sentence4 .)


state 13

    (10) sentence1 -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (11) sentence1 -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 19


state 14

    (12) sentence2 -> VALUES . LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (13) sentence2 -> VALUES . LPARENT ID COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 20


state 15

    (14) sentence3 -> CALL . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 21


state 16

    (15) sentence4 -> PRINTVALUES . RPARENT STRING RPARENT

    RPARENT         shift and go to state 22


state 17

    (3) procedure -> PROC ID LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 23


state 18

    (5) sentences -> sentences sentence .

    RPARENT         reduce using rule 5 (sentences -> sentences sentence .)
    NEW             reduce using rule 5 (sentences -> sentences sentence .)
    VALUES          reduce using rule 5 (sentences -> sentences sentence .)
    CALL            reduce using rule 5 (sentences -> sentences sentence .)
    PRINTVALUES     reduce using rule 5 (sentences -> sentences sentence .)


state 19

    (10) sentence1 -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (11) sentence1 -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 24


state 20

    (12) sentence2 -> VALUES LPARENT . ID COMA INTEGER RPARENT SEMICOLON
    (13) sentence2 -> VALUES LPARENT . ID COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 25


state 21

    (14) sentence3 -> CALL LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 26


state 22

    (15) sentence4 -> PRINTVALUES RPARENT . STRING RPARENT

    STRING          shift and go to state 27


state 23

    (3) procedure -> PROC ID LPARENT sentences RPARENT SEMICOLON .

    PROC            reduce using rule 3 (procedure -> PROC ID LPARENT sentences RPARENT SEMICOLON .)
    $end            reduce using rule 3 (procedure -> PROC ID LPARENT sentences RPARENT SEMICOLON .)


state 24

    (10) sentence1 -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (11) sentence1 -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 28


state 25

    (12) sentence2 -> VALUES LPARENT ID . COMA INTEGER RPARENT SEMICOLON
    (13) sentence2 -> VALUES LPARENT ID . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 29


state 26

    (14) sentence3 -> CALL LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 30


state 27

    (15) sentence4 -> PRINTVALUES RPARENT STRING . RPARENT

    RPARENT         shift and go to state 31


state 28

    (10) sentence1 -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (11) sentence1 -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON

    TYPE            shift and go to state 32


state 29

    (12) sentence2 -> VALUES LPARENT ID COMA . INTEGER RPARENT SEMICOLON
    (13) sentence2 -> VALUES LPARENT ID COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 33
    BOOL            shift and go to state 34


state 30

    (14) sentence3 -> CALL LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 35


state 31

    (15) sentence4 -> PRINTVALUES RPARENT STRING RPARENT .

    RPARENT         reduce using rule 15 (sentence4 -> PRINTVALUES RPARENT STRING RPARENT .)
    NEW             reduce using rule 15 (sentence4 -> PRINTVALUES RPARENT STRING RPARENT .)
    VALUES          reduce using rule 15 (sentence4 -> PRINTVALUES RPARENT STRING RPARENT .)
    CALL            reduce using rule 15 (sentence4 -> PRINTVALUES RPARENT STRING RPARENT .)
    PRINTVALUES     reduce using rule 15 (sentence4 -> PRINTVALUES RPARENT STRING RPARENT .)


state 32

    (10) sentence1 -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (11) sentence1 -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 36


state 33

    (12) sentence2 -> VALUES LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 37


state 34

    (13) sentence2 -> VALUES LPARENT ID COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 38


state 35

    (14) sentence3 -> CALL LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 14 (sentence3 -> CALL LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 14 (sentence3 -> CALL LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 14 (sentence3 -> CALL LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 14 (sentence3 -> CALL LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 14 (sentence3 -> CALL LPARENT ID RPARENT SEMICOLON .)


state 36

    (10) sentence1 -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (11) sentence1 -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 39
    BOOL            shift and go to state 40


state 37

    (12) sentence2 -> VALUES LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 41


state 38

    (13) sentence2 -> VALUES LPARENT ID COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 42


state 39

    (10) sentence1 -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 43


state 40

    (11) sentence1 -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 44


state 41

    (12) sentence2 -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 12 (sentence2 -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 12 (sentence2 -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 12 (sentence2 -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 12 (sentence2 -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 12 (sentence2 -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 42

    (13) sentence2 -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 13 (sentence2 -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 13 (sentence2 -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 13 (sentence2 -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 13 (sentence2 -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 13 (sentence2 -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)


state 43

    (10) sentence1 -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 45


state 44

    (11) sentence1 -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 46


state 45

    (10) sentence1 -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 10 (sentence1 -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 10 (sentence1 -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 10 (sentence1 -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 10 (sentence1 -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 10 (sentence1 -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 46

    (11) sentence1 -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 11 (sentence1 -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 11 (sentence1 -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 11 (sentence1 -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 11 (sentence1 -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 11 (sentence1 -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)

