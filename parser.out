Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROBA
    BREAK
    COMMENT
    ELSE
    PLUS
    REPEAT
    UNTIL

Grammar

Rule 0     S' -> start
Rule 1     start -> master
Rule 2     start -> master procedures
Rule 3     start -> master master_vars procedures
Rule 4     start -> master_vars master
Rule 5     start -> master_vars master master_vars
Rule 6     start -> master_vars master master_vars procedures
Rule 7     start -> master_vars master master_vars procedures master_vars
Rule 8     start -> master_vars master procedures
Rule 9     start -> master_vars master procedures master_vars
Rule 10    declare_procedure -> PROC ID
Rule 11    procedures -> procedure
Rule 12    procedures -> procedures procedure
Rule 13    procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON
Rule 14    master -> MASTER LPARENT master_sentences RPARENT SEMICOLON
Rule 15    master_sentences -> master_sentence
Rule 16    master_sentences -> master_sentences master_sentence
Rule 17    master_sentence -> master_var
Rule 18    master_sentence -> values
Rule 19    master_sentence -> call
Rule 20    master_sentence -> print_values
Rule 21    master_sentence -> alter
Rule 22    master_sentence -> alterB
Rule 23    master_sentence -> comparisson_maq
Rule 24    master_sentence -> comparisson_meq
Rule 25    master_sentence -> comparisson_equal
Rule 26    master_sentence -> comparisson_dif
Rule 27    master_sentence -> comparisson_meqequal
Rule 28    master_sentence -> comparisson_maqequal
Rule 29    master_sentence -> isTrue
Rule 30    master_sentence -> signal
Rule 31    master_sentence -> viewsignal
Rule 32    master_sentence -> cut
Rule 33    master_sentence -> recut
Rule 34    master_sentence -> case
Rule 35    master_sentence -> while
Rule 36    master_sentence -> empty
Rule 37    master_vars -> master_var
Rule 38    master_vars -> master_vars master_var
Rule 39    master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 40    master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 41    master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
Rule 42    sentences -> sentence
Rule 43    sentences -> sentences sentence
Rule 44    sentence -> local_variable
Rule 45    sentence -> values
Rule 46    sentence -> call
Rule 47    sentence -> print_values
Rule 48    sentence -> alter
Rule 49    sentence -> alterB
Rule 50    sentence -> comparisson_maq
Rule 51    sentence -> comparisson_meq
Rule 52    sentence -> comparisson_equal
Rule 53    sentence -> comparisson_dif
Rule 54    sentence -> comparisson_meqequal
Rule 55    sentence -> comparisson_maqequal
Rule 56    sentence -> isTrue
Rule 57    sentence -> signal
Rule 58    sentence -> viewsignal
Rule 59    sentence -> cut
Rule 60    sentence -> recut
Rule 61    sentence -> case
Rule 62    sentence -> while
Rule 63    sentence -> empty
Rule 64    return_statement -> isTrue
Rule 65    return_statement -> comparisson_maqequal
Rule 66    return_statement -> comparisson_meqequal
Rule 67    return_statement -> comparisson_dif
Rule 68    return_statement -> comparisson_equal
Rule 69    return_statement -> comparisson_meq
Rule 70    return_statement -> comparisson_maq
Rule 71    return_statement -> alterB
Rule 72    return_statement -> alter
Rule 73    local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 74    local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 75    local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
Rule 76    values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 77    values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
Rule 78    values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
Rule 79    call -> CALL LPARENT ID RPARENT SEMICOLON
Rule 80    print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
Rule 81    printable_sentences -> printable_sentence_var
Rule 82    printable_sentences -> printable_sentence_string
Rule 83    printable_sentences -> printable_sentence_var COMA printable_sentence_var
Rule 84    printable_sentences -> printable_sentence_string COMA printable_sentence_string
Rule 85    printable_sentences -> printable_sentence_var COMA printable_sentence_string
Rule 86    printable_sentences -> printable_sentence_string COMA printable_sentence_var
Rule 87    printable_sentences -> printable_sentences COMA printable_sentence_var
Rule 88    printable_sentences -> printable_sentences COMA printable_sentence_string
Rule 89    printable_sentences -> COMA printable_sentences COMA printable_sentence_var
Rule 90    printable_sentences -> COMA printable_sentences COMA printable_sentence_string
Rule 91    printable_sentence_var -> ID
Rule 92    printable_sentence_string -> STRING
Rule 93    alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
Rule 94    alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
Rule 95    alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
Rule 96    alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
Rule 97    alterB -> ALTERB LPARENT ID RPARENT SEMICOLON
Rule 98    comparisson_maq -> ID MAQ INTEGER
Rule 99    comparisson_meq -> ID MEQ INTEGER
Rule 100   comparisson_equal -> ID EQUAL INTEGER
Rule 101   comparisson_dif -> ID DIFFERENT INTEGER
Rule 102   comparisson_meqequal -> ID MEQEQUAL INTEGER
Rule 103   comparisson_maqequal -> ID MAQEQUAL INTEGER
Rule 104   isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON
Rule 105   signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
Rule 106   signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 107   viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
Rule 108   while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON
Rule 109   case -> CASE expression recursive_conditions SEMICOLON
Rule 110   else_condition -> LPARENT sentences RPARENT
Rule 111   recursive_conditions -> recursive_condition
Rule 112   recursive_conditions -> recursive_conditions recursive_condition
Rule 113   recursive_condition -> condition LPARENT sentences RPARENT
Rule 114   expression -> ID
Rule 115   condition -> WHEN INTEGER THEN
Rule 116   condition -> WHEN STRING THEN
Rule 117   cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON
Rule 118   cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON
Rule 119   recut -> RECUT LPARENT ID RPARENT SEMICOLON
Rule 120   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 93
ALTER                : 93 94 95 96
ALTERB               : 97
ARROBA               : 
BOOL                 : 40 74 77
BREAK                : 
CALL                 : 79
CASE                 : 109
COMA                 : 39 39 40 40 41 41 73 73 74 74 75 75 76 77 78 83 84 85 86 87 88 89 89 90 90 93 93 94 94 95 95 96 96 105 106 117 118
COMMENT              : 
CUT                  : 117 118
DIFFERENT            : 101
DIV                  : 96
ELSE                 : 
EQUAL                : 100
ID                   : 10 39 40 41 73 74 75 76 77 78 79 91 93 94 95 96 97 98 99 100 101 102 103 104 106 114 117 118 118 119
INTEGER              : 39 73 76 93 94 95 96 98 99 100 101 102 103 105 105 106 107 115
ISTRUE               : 104
LPARENT              : 13 14 39 40 41 73 74 75 76 77 78 79 80 93 94 95 96 97 104 105 106 107 108 110 113 117 118 119
MAQ                  : 98
MAQEQUAL             : 103
MASTER               : 14
MEQ                  : 99
MEQEQUAL             : 102
MUL                  : 95
NEW                  : 39 40 41 73 74 75
PLUS                 : 
PRINTVALUES          : 80
PROC                 : 10
RECUT                : 119
REPEAT               : 
RPARENT              : 13 14 39 40 41 73 74 75 76 77 78 79 80 93 94 95 96 97 104 105 106 107 108 110 113 117 118 119
SEMICOLON            : 13 14 39 40 41 73 74 75 76 77 78 79 80 93 94 95 96 97 104 105 106 107 108 109 117 118 119
SIGNAL               : 105 106
STRING               : 41 75 92 116 117
SUB                  : 94
THEN                 : 115 116
TYPE                 : 39 40 41 73 74 75
UNTIL                : 
VALUES               : 76 77 78
VIEWSIGNAL           : 107
WHEN                 : 115 116
WHILE                : 108
error                : 

Nonterminals, with rules where they appear

alter                : 21 48 72
alterB               : 22 49 71
call                 : 19 46
case                 : 34 61
comparisson_dif      : 26 53 67
comparisson_equal    : 25 52 68
comparisson_maq      : 23 50 70
comparisson_maqequal : 28 55 65
comparisson_meq      : 24 51 69
comparisson_meqequal : 27 54 66
condition            : 113
cut                  : 32 59
declare_procedure    : 13
else_condition       : 
empty                : 36 63
expression           : 109
isTrue               : 29 56 64
local_variable       : 44
master               : 1 2 3 4 5 6 7 8 9
master_sentence      : 15 16
master_sentences     : 14 16
master_var           : 17 37 38
master_vars          : 3 4 5 5 6 6 7 7 7 8 9 9 38
print_values         : 20 47
printable_sentence_string : 82 84 84 85 86 88 90
printable_sentence_var : 81 83 83 85 86 87 89
printable_sentences  : 80 87 88 89 90
procedure            : 11 12
procedures           : 2 3 6 7 8 9 12
recursive_condition  : 111 112
recursive_conditions : 109 112
recut                : 33 60
return_statement     : 78
sentence             : 42 43
sentences            : 13 43 108 108 110 113
signal               : 30 57
start                : 0
values               : 18 45
viewsignal           : 31 58
while                : 35 62

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . master
    (2) start -> . master procedures
    (3) start -> . master master_vars procedures
    (4) start -> . master_vars master
    (5) start -> . master_vars master master_vars
    (6) start -> . master_vars master master_vars procedures
    (7) start -> . master_vars master master_vars procedures master_vars
    (8) start -> . master_vars master procedures
    (9) start -> . master_vars master procedures master_vars
    (14) master -> . MASTER LPARENT master_sentences RPARENT SEMICOLON
    (37) master_vars -> . master_var
    (38) master_vars -> . master_vars master_var
    (39) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    MASTER          shift and go to state 4
    NEW             shift and go to state 6

    start                          shift and go to state 1
    master                         shift and go to state 2
    master_vars                    shift and go to state 3
    master_var                     shift and go to state 5

state 1

    (0) S' -> start .



state 2

    (1) start -> master .
    (2) start -> master . procedures
    (3) start -> master . master_vars procedures
    (11) procedures -> . procedure
    (12) procedures -> . procedures procedure
    (37) master_vars -> . master_var
    (38) master_vars -> . master_vars master_var
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (39) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 1 (start -> master .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    procedures                     shift and go to state 7
    master_vars                    shift and go to state 8
    procedure                      shift and go to state 9
    master_var                     shift and go to state 5
    declare_procedure              shift and go to state 10

state 3

    (4) start -> master_vars . master
    (5) start -> master_vars . master master_vars
    (6) start -> master_vars . master master_vars procedures
    (7) start -> master_vars . master master_vars procedures master_vars
    (8) start -> master_vars . master procedures
    (9) start -> master_vars . master procedures master_vars
    (38) master_vars -> master_vars . master_var
    (14) master -> . MASTER LPARENT master_sentences RPARENT SEMICOLON
    (39) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    MASTER          shift and go to state 4
    NEW             shift and go to state 6

    master                         shift and go to state 12
    master_var                     shift and go to state 13

state 4

    (14) master -> MASTER . LPARENT master_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 14


state 5

    (37) master_vars -> master_var .

    MASTER          reduce using rule 37 (master_vars -> master_var .)
    NEW             reduce using rule 37 (master_vars -> master_var .)
    PROC            reduce using rule 37 (master_vars -> master_var .)
    $end            reduce using rule 37 (master_vars -> master_var .)


state 6

    (39) master_var -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> NEW . ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    ID              shift and go to state 15


state 7

    (2) start -> master procedures .
    (12) procedures -> procedures . procedure
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 2 (start -> master procedures .)
    PROC            shift and go to state 11

    procedure                      shift and go to state 16
    declare_procedure              shift and go to state 10

state 8

    (3) start -> master master_vars . procedures
    (38) master_vars -> master_vars . master_var
    (11) procedures -> . procedure
    (12) procedures -> . procedures procedure
    (39) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    NEW             shift and go to state 6
    PROC            shift and go to state 11

    procedures                     shift and go to state 17
    master_var                     shift and go to state 13
    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 10

state 9

    (11) procedures -> procedure .

    PROC            reduce using rule 11 (procedures -> procedure .)
    $end            reduce using rule 11 (procedures -> procedure .)
    NEW             reduce using rule 11 (procedures -> procedure .)


state 10

    (13) procedure -> declare_procedure . LPARENT sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 18


state 11

    (10) declare_procedure -> PROC . ID

    ID              shift and go to state 19


state 12

    (4) start -> master_vars master .
    (5) start -> master_vars master . master_vars
    (6) start -> master_vars master . master_vars procedures
    (7) start -> master_vars master . master_vars procedures master_vars
    (8) start -> master_vars master . procedures
    (9) start -> master_vars master . procedures master_vars
    (37) master_vars -> . master_var
    (38) master_vars -> . master_vars master_var
    (11) procedures -> . procedure
    (12) procedures -> . procedures procedure
    (39) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 4 (start -> master_vars master .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    master_vars                    shift and go to state 20
    procedures                     shift and go to state 21
    master_var                     shift and go to state 5
    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 10

state 13

    (38) master_vars -> master_vars master_var .

    MASTER          reduce using rule 38 (master_vars -> master_vars master_var .)
    NEW             reduce using rule 38 (master_vars -> master_vars master_var .)
    PROC            reduce using rule 38 (master_vars -> master_vars master_var .)
    $end            reduce using rule 38 (master_vars -> master_vars master_var .)


state 14

    (14) master -> MASTER LPARENT . master_sentences RPARENT SEMICOLON
    (15) master_sentences -> . master_sentence
    (16) master_sentences -> . master_sentences master_sentence
    (17) master_sentence -> . master_var
    (18) master_sentence -> . values
    (19) master_sentence -> . call
    (20) master_sentence -> . print_values
    (21) master_sentence -> . alter
    (22) master_sentence -> . alterB
    (23) master_sentence -> . comparisson_maq
    (24) master_sentence -> . comparisson_meq
    (25) master_sentence -> . comparisson_equal
    (26) master_sentence -> . comparisson_dif
    (27) master_sentence -> . comparisson_meqequal
    (28) master_sentence -> . comparisson_maqequal
    (29) master_sentence -> . isTrue
    (30) master_sentence -> . signal
    (31) master_sentence -> . viewsignal
    (32) master_sentence -> . cut
    (33) master_sentence -> . recut
    (34) master_sentence -> . case
    (35) master_sentence -> . while
    (36) master_sentence -> . empty
    (39) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (76) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (77) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (78) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (79) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (80) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (93) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (97) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (98) comparisson_maq -> . ID MAQ INTEGER
    (99) comparisson_meq -> . ID MEQ INTEGER
    (100) comparisson_equal -> . ID EQUAL INTEGER
    (101) comparisson_dif -> . ID DIFFERENT INTEGER
    (102) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (103) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (104) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (106) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (107) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (117) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (118) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (119) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (109) case -> . CASE expression recursive_conditions SEMICOLON
    (108) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (120) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    NEW             shift and go to state 6
    VALUES          shift and go to state 45
    CALL            shift and go to state 46
    PRINTVALUES     shift and go to state 47
    ALTER           shift and go to state 48
    ALTERB          shift and go to state 49
    ID              shift and go to state 44
    ISTRUE          shift and go to state 50
    SIGNAL          shift and go to state 51
    VIEWSIGNAL      shift and go to state 52
    CUT             shift and go to state 53
    RECUT           shift and go to state 54
    CASE            shift and go to state 55
    WHILE           shift and go to state 56
    RPARENT         reduce using rule 120 (empty -> .)

  ! NEW             [ reduce using rule 120 (empty -> .) ]
  ! VALUES          [ reduce using rule 120 (empty -> .) ]
  ! CALL            [ reduce using rule 120 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 120 (empty -> .) ]
  ! ALTER           [ reduce using rule 120 (empty -> .) ]
  ! ALTERB          [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 120 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 120 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 120 (empty -> .) ]
  ! CUT             [ reduce using rule 120 (empty -> .) ]
  ! RECUT           [ reduce using rule 120 (empty -> .) ]
  ! CASE            [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]

    master_sentences               shift and go to state 22
    master_sentence                shift and go to state 23
    master_var                     shift and go to state 24
    values                         shift and go to state 25
    call                           shift and go to state 26
    print_values                   shift and go to state 27
    alter                          shift and go to state 28
    alterB                         shift and go to state 29
    comparisson_maq                shift and go to state 30
    comparisson_meq                shift and go to state 31
    comparisson_equal              shift and go to state 32
    comparisson_dif                shift and go to state 33
    comparisson_meqequal           shift and go to state 34
    comparisson_maqequal           shift and go to state 35
    isTrue                         shift and go to state 36
    signal                         shift and go to state 37
    viewsignal                     shift and go to state 38
    cut                            shift and go to state 39
    recut                          shift and go to state 40
    case                           shift and go to state 41
    while                          shift and go to state 42
    empty                          shift and go to state 43

state 15

    (39) master_var -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> NEW ID . COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    COMA            shift and go to state 57


state 16

    (12) procedures -> procedures procedure .

    PROC            reduce using rule 12 (procedures -> procedures procedure .)
    $end            reduce using rule 12 (procedures -> procedures procedure .)
    NEW             reduce using rule 12 (procedures -> procedures procedure .)


state 17

    (3) start -> master master_vars procedures .
    (12) procedures -> procedures . procedure
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 3 (start -> master master_vars procedures .)
    PROC            shift and go to state 11

    procedure                      shift and go to state 16
    declare_procedure              shift and go to state 10

state 18

    (13) procedure -> declare_procedure LPARENT . sentences RPARENT SEMICOLON
    (42) sentences -> . sentence
    (43) sentences -> . sentences sentence
    (44) sentence -> . local_variable
    (45) sentence -> . values
    (46) sentence -> . call
    (47) sentence -> . print_values
    (48) sentence -> . alter
    (49) sentence -> . alterB
    (50) sentence -> . comparisson_maq
    (51) sentence -> . comparisson_meq
    (52) sentence -> . comparisson_equal
    (53) sentence -> . comparisson_dif
    (54) sentence -> . comparisson_meqequal
    (55) sentence -> . comparisson_maqequal
    (56) sentence -> . isTrue
    (57) sentence -> . signal
    (58) sentence -> . viewsignal
    (59) sentence -> . cut
    (60) sentence -> . recut
    (61) sentence -> . case
    (62) sentence -> . while
    (63) sentence -> . empty
    (73) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (76) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (77) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (78) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (79) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (80) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (93) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (97) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (98) comparisson_maq -> . ID MAQ INTEGER
    (99) comparisson_meq -> . ID MEQ INTEGER
    (100) comparisson_equal -> . ID EQUAL INTEGER
    (101) comparisson_dif -> . ID DIFFERENT INTEGER
    (102) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (103) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (104) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (106) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (107) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (117) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (118) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (119) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (109) case -> . CASE expression recursive_conditions SEMICOLON
    (108) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (120) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    NEW             shift and go to state 80
    VALUES          shift and go to state 45
    CALL            shift and go to state 46
    PRINTVALUES     shift and go to state 47
    ALTER           shift and go to state 48
    ALTERB          shift and go to state 49
    ID              shift and go to state 44
    ISTRUE          shift and go to state 50
    SIGNAL          shift and go to state 51
    VIEWSIGNAL      shift and go to state 52
    CUT             shift and go to state 53
    RECUT           shift and go to state 54
    CASE            shift and go to state 55
    WHILE           shift and go to state 56
    RPARENT         reduce using rule 120 (empty -> .)

  ! NEW             [ reduce using rule 120 (empty -> .) ]
  ! VALUES          [ reduce using rule 120 (empty -> .) ]
  ! CALL            [ reduce using rule 120 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 120 (empty -> .) ]
  ! ALTER           [ reduce using rule 120 (empty -> .) ]
  ! ALTERB          [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 120 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 120 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 120 (empty -> .) ]
  ! CUT             [ reduce using rule 120 (empty -> .) ]
  ! RECUT           [ reduce using rule 120 (empty -> .) ]
  ! CASE            [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]

    sentences                      shift and go to state 58
    sentence                       shift and go to state 59
    local_variable                 shift and go to state 60
    values                         shift and go to state 61
    call                           shift and go to state 62
    print_values                   shift and go to state 63
    alter                          shift and go to state 64
    alterB                         shift and go to state 65
    comparisson_maq                shift and go to state 66
    comparisson_meq                shift and go to state 67
    comparisson_equal              shift and go to state 68
    comparisson_dif                shift and go to state 69
    comparisson_meqequal           shift and go to state 70
    comparisson_maqequal           shift and go to state 71
    isTrue                         shift and go to state 72
    signal                         shift and go to state 73
    viewsignal                     shift and go to state 74
    cut                            shift and go to state 75
    recut                          shift and go to state 76
    case                           shift and go to state 77
    while                          shift and go to state 78
    empty                          shift and go to state 79

state 19

    (10) declare_procedure -> PROC ID .

    LPARENT         reduce using rule 10 (declare_procedure -> PROC ID .)


state 20

    (5) start -> master_vars master master_vars .
    (6) start -> master_vars master master_vars . procedures
    (7) start -> master_vars master master_vars . procedures master_vars
    (38) master_vars -> master_vars . master_var
    (11) procedures -> . procedure
    (12) procedures -> . procedures procedure
    (39) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 5 (start -> master_vars master master_vars .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    procedures                     shift and go to state 81
    master_var                     shift and go to state 13
    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 10

state 21

    (8) start -> master_vars master procedures .
    (9) start -> master_vars master procedures . master_vars
    (12) procedures -> procedures . procedure
    (37) master_vars -> . master_var
    (38) master_vars -> . master_vars master_var
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (39) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 8 (start -> master_vars master procedures .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    master_vars                    shift and go to state 82
    procedure                      shift and go to state 16
    master_var                     shift and go to state 5
    declare_procedure              shift and go to state 10

state 22

    (14) master -> MASTER LPARENT master_sentences . RPARENT SEMICOLON
    (16) master_sentences -> master_sentences . master_sentence
    (17) master_sentence -> . master_var
    (18) master_sentence -> . values
    (19) master_sentence -> . call
    (20) master_sentence -> . print_values
    (21) master_sentence -> . alter
    (22) master_sentence -> . alterB
    (23) master_sentence -> . comparisson_maq
    (24) master_sentence -> . comparisson_meq
    (25) master_sentence -> . comparisson_equal
    (26) master_sentence -> . comparisson_dif
    (27) master_sentence -> . comparisson_meqequal
    (28) master_sentence -> . comparisson_maqequal
    (29) master_sentence -> . isTrue
    (30) master_sentence -> . signal
    (31) master_sentence -> . viewsignal
    (32) master_sentence -> . cut
    (33) master_sentence -> . recut
    (34) master_sentence -> . case
    (35) master_sentence -> . while
    (36) master_sentence -> . empty
    (39) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (76) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (77) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (78) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (79) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (80) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (93) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (97) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (98) comparisson_maq -> . ID MAQ INTEGER
    (99) comparisson_meq -> . ID MEQ INTEGER
    (100) comparisson_equal -> . ID EQUAL INTEGER
    (101) comparisson_dif -> . ID DIFFERENT INTEGER
    (102) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (103) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (104) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (106) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (107) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (117) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (118) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (119) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (109) case -> . CASE expression recursive_conditions SEMICOLON
    (108) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (120) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RPARENT         shift and go to state 83
    NEW             shift and go to state 6
    VALUES          shift and go to state 45
    CALL            shift and go to state 46
    PRINTVALUES     shift and go to state 47
    ALTER           shift and go to state 48
    ALTERB          shift and go to state 49
    ID              shift and go to state 44
    ISTRUE          shift and go to state 50
    SIGNAL          shift and go to state 51
    VIEWSIGNAL      shift and go to state 52
    CUT             shift and go to state 53
    RECUT           shift and go to state 54
    CASE            shift and go to state 55
    WHILE           shift and go to state 56

  ! RPARENT         [ reduce using rule 120 (empty -> .) ]
  ! NEW             [ reduce using rule 120 (empty -> .) ]
  ! VALUES          [ reduce using rule 120 (empty -> .) ]
  ! CALL            [ reduce using rule 120 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 120 (empty -> .) ]
  ! ALTER           [ reduce using rule 120 (empty -> .) ]
  ! ALTERB          [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 120 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 120 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 120 (empty -> .) ]
  ! CUT             [ reduce using rule 120 (empty -> .) ]
  ! RECUT           [ reduce using rule 120 (empty -> .) ]
  ! CASE            [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]

    master_sentence                shift and go to state 84
    master_var                     shift and go to state 24
    values                         shift and go to state 25
    call                           shift and go to state 26
    print_values                   shift and go to state 27
    alter                          shift and go to state 28
    alterB                         shift and go to state 29
    comparisson_maq                shift and go to state 30
    comparisson_meq                shift and go to state 31
    comparisson_equal              shift and go to state 32
    comparisson_dif                shift and go to state 33
    comparisson_meqequal           shift and go to state 34
    comparisson_maqequal           shift and go to state 35
    isTrue                         shift and go to state 36
    signal                         shift and go to state 37
    viewsignal                     shift and go to state 38
    cut                            shift and go to state 39
    recut                          shift and go to state 40
    case                           shift and go to state 41
    while                          shift and go to state 42
    empty                          shift and go to state 43

state 23

    (15) master_sentences -> master_sentence .

    RPARENT         reduce using rule 15 (master_sentences -> master_sentence .)
    NEW             reduce using rule 15 (master_sentences -> master_sentence .)
    VALUES          reduce using rule 15 (master_sentences -> master_sentence .)
    CALL            reduce using rule 15 (master_sentences -> master_sentence .)
    PRINTVALUES     reduce using rule 15 (master_sentences -> master_sentence .)
    ALTER           reduce using rule 15 (master_sentences -> master_sentence .)
    ALTERB          reduce using rule 15 (master_sentences -> master_sentence .)
    ID              reduce using rule 15 (master_sentences -> master_sentence .)
    ISTRUE          reduce using rule 15 (master_sentences -> master_sentence .)
    SIGNAL          reduce using rule 15 (master_sentences -> master_sentence .)
    VIEWSIGNAL      reduce using rule 15 (master_sentences -> master_sentence .)
    CUT             reduce using rule 15 (master_sentences -> master_sentence .)
    RECUT           reduce using rule 15 (master_sentences -> master_sentence .)
    CASE            reduce using rule 15 (master_sentences -> master_sentence .)
    WHILE           reduce using rule 15 (master_sentences -> master_sentence .)


state 24

    (17) master_sentence -> master_var .

    RPARENT         reduce using rule 17 (master_sentence -> master_var .)
    NEW             reduce using rule 17 (master_sentence -> master_var .)
    VALUES          reduce using rule 17 (master_sentence -> master_var .)
    CALL            reduce using rule 17 (master_sentence -> master_var .)
    PRINTVALUES     reduce using rule 17 (master_sentence -> master_var .)
    ALTER           reduce using rule 17 (master_sentence -> master_var .)
    ALTERB          reduce using rule 17 (master_sentence -> master_var .)
    ID              reduce using rule 17 (master_sentence -> master_var .)
    ISTRUE          reduce using rule 17 (master_sentence -> master_var .)
    SIGNAL          reduce using rule 17 (master_sentence -> master_var .)
    VIEWSIGNAL      reduce using rule 17 (master_sentence -> master_var .)
    CUT             reduce using rule 17 (master_sentence -> master_var .)
    RECUT           reduce using rule 17 (master_sentence -> master_var .)
    CASE            reduce using rule 17 (master_sentence -> master_var .)
    WHILE           reduce using rule 17 (master_sentence -> master_var .)


state 25

    (18) master_sentence -> values .

    RPARENT         reduce using rule 18 (master_sentence -> values .)
    NEW             reduce using rule 18 (master_sentence -> values .)
    VALUES          reduce using rule 18 (master_sentence -> values .)
    CALL            reduce using rule 18 (master_sentence -> values .)
    PRINTVALUES     reduce using rule 18 (master_sentence -> values .)
    ALTER           reduce using rule 18 (master_sentence -> values .)
    ALTERB          reduce using rule 18 (master_sentence -> values .)
    ID              reduce using rule 18 (master_sentence -> values .)
    ISTRUE          reduce using rule 18 (master_sentence -> values .)
    SIGNAL          reduce using rule 18 (master_sentence -> values .)
    VIEWSIGNAL      reduce using rule 18 (master_sentence -> values .)
    CUT             reduce using rule 18 (master_sentence -> values .)
    RECUT           reduce using rule 18 (master_sentence -> values .)
    CASE            reduce using rule 18 (master_sentence -> values .)
    WHILE           reduce using rule 18 (master_sentence -> values .)


state 26

    (19) master_sentence -> call .

    RPARENT         reduce using rule 19 (master_sentence -> call .)
    NEW             reduce using rule 19 (master_sentence -> call .)
    VALUES          reduce using rule 19 (master_sentence -> call .)
    CALL            reduce using rule 19 (master_sentence -> call .)
    PRINTVALUES     reduce using rule 19 (master_sentence -> call .)
    ALTER           reduce using rule 19 (master_sentence -> call .)
    ALTERB          reduce using rule 19 (master_sentence -> call .)
    ID              reduce using rule 19 (master_sentence -> call .)
    ISTRUE          reduce using rule 19 (master_sentence -> call .)
    SIGNAL          reduce using rule 19 (master_sentence -> call .)
    VIEWSIGNAL      reduce using rule 19 (master_sentence -> call .)
    CUT             reduce using rule 19 (master_sentence -> call .)
    RECUT           reduce using rule 19 (master_sentence -> call .)
    CASE            reduce using rule 19 (master_sentence -> call .)
    WHILE           reduce using rule 19 (master_sentence -> call .)


state 27

    (20) master_sentence -> print_values .

    RPARENT         reduce using rule 20 (master_sentence -> print_values .)
    NEW             reduce using rule 20 (master_sentence -> print_values .)
    VALUES          reduce using rule 20 (master_sentence -> print_values .)
    CALL            reduce using rule 20 (master_sentence -> print_values .)
    PRINTVALUES     reduce using rule 20 (master_sentence -> print_values .)
    ALTER           reduce using rule 20 (master_sentence -> print_values .)
    ALTERB          reduce using rule 20 (master_sentence -> print_values .)
    ID              reduce using rule 20 (master_sentence -> print_values .)
    ISTRUE          reduce using rule 20 (master_sentence -> print_values .)
    SIGNAL          reduce using rule 20 (master_sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 20 (master_sentence -> print_values .)
    CUT             reduce using rule 20 (master_sentence -> print_values .)
    RECUT           reduce using rule 20 (master_sentence -> print_values .)
    CASE            reduce using rule 20 (master_sentence -> print_values .)
    WHILE           reduce using rule 20 (master_sentence -> print_values .)


state 28

    (21) master_sentence -> alter .

    RPARENT         reduce using rule 21 (master_sentence -> alter .)
    NEW             reduce using rule 21 (master_sentence -> alter .)
    VALUES          reduce using rule 21 (master_sentence -> alter .)
    CALL            reduce using rule 21 (master_sentence -> alter .)
    PRINTVALUES     reduce using rule 21 (master_sentence -> alter .)
    ALTER           reduce using rule 21 (master_sentence -> alter .)
    ALTERB          reduce using rule 21 (master_sentence -> alter .)
    ID              reduce using rule 21 (master_sentence -> alter .)
    ISTRUE          reduce using rule 21 (master_sentence -> alter .)
    SIGNAL          reduce using rule 21 (master_sentence -> alter .)
    VIEWSIGNAL      reduce using rule 21 (master_sentence -> alter .)
    CUT             reduce using rule 21 (master_sentence -> alter .)
    RECUT           reduce using rule 21 (master_sentence -> alter .)
    CASE            reduce using rule 21 (master_sentence -> alter .)
    WHILE           reduce using rule 21 (master_sentence -> alter .)


state 29

    (22) master_sentence -> alterB .

    RPARENT         reduce using rule 22 (master_sentence -> alterB .)
    NEW             reduce using rule 22 (master_sentence -> alterB .)
    VALUES          reduce using rule 22 (master_sentence -> alterB .)
    CALL            reduce using rule 22 (master_sentence -> alterB .)
    PRINTVALUES     reduce using rule 22 (master_sentence -> alterB .)
    ALTER           reduce using rule 22 (master_sentence -> alterB .)
    ALTERB          reduce using rule 22 (master_sentence -> alterB .)
    ID              reduce using rule 22 (master_sentence -> alterB .)
    ISTRUE          reduce using rule 22 (master_sentence -> alterB .)
    SIGNAL          reduce using rule 22 (master_sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 22 (master_sentence -> alterB .)
    CUT             reduce using rule 22 (master_sentence -> alterB .)
    RECUT           reduce using rule 22 (master_sentence -> alterB .)
    CASE            reduce using rule 22 (master_sentence -> alterB .)
    WHILE           reduce using rule 22 (master_sentence -> alterB .)


state 30

    (23) master_sentence -> comparisson_maq .

    RPARENT         reduce using rule 23 (master_sentence -> comparisson_maq .)
    NEW             reduce using rule 23 (master_sentence -> comparisson_maq .)
    VALUES          reduce using rule 23 (master_sentence -> comparisson_maq .)
    CALL            reduce using rule 23 (master_sentence -> comparisson_maq .)
    PRINTVALUES     reduce using rule 23 (master_sentence -> comparisson_maq .)
    ALTER           reduce using rule 23 (master_sentence -> comparisson_maq .)
    ALTERB          reduce using rule 23 (master_sentence -> comparisson_maq .)
    ID              reduce using rule 23 (master_sentence -> comparisson_maq .)
    ISTRUE          reduce using rule 23 (master_sentence -> comparisson_maq .)
    SIGNAL          reduce using rule 23 (master_sentence -> comparisson_maq .)
    VIEWSIGNAL      reduce using rule 23 (master_sentence -> comparisson_maq .)
    CUT             reduce using rule 23 (master_sentence -> comparisson_maq .)
    RECUT           reduce using rule 23 (master_sentence -> comparisson_maq .)
    CASE            reduce using rule 23 (master_sentence -> comparisson_maq .)
    WHILE           reduce using rule 23 (master_sentence -> comparisson_maq .)


state 31

    (24) master_sentence -> comparisson_meq .

    RPARENT         reduce using rule 24 (master_sentence -> comparisson_meq .)
    NEW             reduce using rule 24 (master_sentence -> comparisson_meq .)
    VALUES          reduce using rule 24 (master_sentence -> comparisson_meq .)
    CALL            reduce using rule 24 (master_sentence -> comparisson_meq .)
    PRINTVALUES     reduce using rule 24 (master_sentence -> comparisson_meq .)
    ALTER           reduce using rule 24 (master_sentence -> comparisson_meq .)
    ALTERB          reduce using rule 24 (master_sentence -> comparisson_meq .)
    ID              reduce using rule 24 (master_sentence -> comparisson_meq .)
    ISTRUE          reduce using rule 24 (master_sentence -> comparisson_meq .)
    SIGNAL          reduce using rule 24 (master_sentence -> comparisson_meq .)
    VIEWSIGNAL      reduce using rule 24 (master_sentence -> comparisson_meq .)
    CUT             reduce using rule 24 (master_sentence -> comparisson_meq .)
    RECUT           reduce using rule 24 (master_sentence -> comparisson_meq .)
    CASE            reduce using rule 24 (master_sentence -> comparisson_meq .)
    WHILE           reduce using rule 24 (master_sentence -> comparisson_meq .)


state 32

    (25) master_sentence -> comparisson_equal .

    RPARENT         reduce using rule 25 (master_sentence -> comparisson_equal .)
    NEW             reduce using rule 25 (master_sentence -> comparisson_equal .)
    VALUES          reduce using rule 25 (master_sentence -> comparisson_equal .)
    CALL            reduce using rule 25 (master_sentence -> comparisson_equal .)
    PRINTVALUES     reduce using rule 25 (master_sentence -> comparisson_equal .)
    ALTER           reduce using rule 25 (master_sentence -> comparisson_equal .)
    ALTERB          reduce using rule 25 (master_sentence -> comparisson_equal .)
    ID              reduce using rule 25 (master_sentence -> comparisson_equal .)
    ISTRUE          reduce using rule 25 (master_sentence -> comparisson_equal .)
    SIGNAL          reduce using rule 25 (master_sentence -> comparisson_equal .)
    VIEWSIGNAL      reduce using rule 25 (master_sentence -> comparisson_equal .)
    CUT             reduce using rule 25 (master_sentence -> comparisson_equal .)
    RECUT           reduce using rule 25 (master_sentence -> comparisson_equal .)
    CASE            reduce using rule 25 (master_sentence -> comparisson_equal .)
    WHILE           reduce using rule 25 (master_sentence -> comparisson_equal .)


state 33

    (26) master_sentence -> comparisson_dif .

    RPARENT         reduce using rule 26 (master_sentence -> comparisson_dif .)
    NEW             reduce using rule 26 (master_sentence -> comparisson_dif .)
    VALUES          reduce using rule 26 (master_sentence -> comparisson_dif .)
    CALL            reduce using rule 26 (master_sentence -> comparisson_dif .)
    PRINTVALUES     reduce using rule 26 (master_sentence -> comparisson_dif .)
    ALTER           reduce using rule 26 (master_sentence -> comparisson_dif .)
    ALTERB          reduce using rule 26 (master_sentence -> comparisson_dif .)
    ID              reduce using rule 26 (master_sentence -> comparisson_dif .)
    ISTRUE          reduce using rule 26 (master_sentence -> comparisson_dif .)
    SIGNAL          reduce using rule 26 (master_sentence -> comparisson_dif .)
    VIEWSIGNAL      reduce using rule 26 (master_sentence -> comparisson_dif .)
    CUT             reduce using rule 26 (master_sentence -> comparisson_dif .)
    RECUT           reduce using rule 26 (master_sentence -> comparisson_dif .)
    CASE            reduce using rule 26 (master_sentence -> comparisson_dif .)
    WHILE           reduce using rule 26 (master_sentence -> comparisson_dif .)


state 34

    (27) master_sentence -> comparisson_meqequal .

    RPARENT         reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    NEW             reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    VALUES          reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    CALL            reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    PRINTVALUES     reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    ALTER           reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    ALTERB          reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    ID              reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    ISTRUE          reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    SIGNAL          reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    VIEWSIGNAL      reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    CUT             reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    RECUT           reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    CASE            reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    WHILE           reduce using rule 27 (master_sentence -> comparisson_meqequal .)


state 35

    (28) master_sentence -> comparisson_maqequal .

    RPARENT         reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    NEW             reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    VALUES          reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    CALL            reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    PRINTVALUES     reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    ALTER           reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    ALTERB          reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    ID              reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    ISTRUE          reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    SIGNAL          reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    VIEWSIGNAL      reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    CUT             reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    RECUT           reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    CASE            reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    WHILE           reduce using rule 28 (master_sentence -> comparisson_maqequal .)


state 36

    (29) master_sentence -> isTrue .

    RPARENT         reduce using rule 29 (master_sentence -> isTrue .)
    NEW             reduce using rule 29 (master_sentence -> isTrue .)
    VALUES          reduce using rule 29 (master_sentence -> isTrue .)
    CALL            reduce using rule 29 (master_sentence -> isTrue .)
    PRINTVALUES     reduce using rule 29 (master_sentence -> isTrue .)
    ALTER           reduce using rule 29 (master_sentence -> isTrue .)
    ALTERB          reduce using rule 29 (master_sentence -> isTrue .)
    ID              reduce using rule 29 (master_sentence -> isTrue .)
    ISTRUE          reduce using rule 29 (master_sentence -> isTrue .)
    SIGNAL          reduce using rule 29 (master_sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 29 (master_sentence -> isTrue .)
    CUT             reduce using rule 29 (master_sentence -> isTrue .)
    RECUT           reduce using rule 29 (master_sentence -> isTrue .)
    CASE            reduce using rule 29 (master_sentence -> isTrue .)
    WHILE           reduce using rule 29 (master_sentence -> isTrue .)


state 37

    (30) master_sentence -> signal .

    RPARENT         reduce using rule 30 (master_sentence -> signal .)
    NEW             reduce using rule 30 (master_sentence -> signal .)
    VALUES          reduce using rule 30 (master_sentence -> signal .)
    CALL            reduce using rule 30 (master_sentence -> signal .)
    PRINTVALUES     reduce using rule 30 (master_sentence -> signal .)
    ALTER           reduce using rule 30 (master_sentence -> signal .)
    ALTERB          reduce using rule 30 (master_sentence -> signal .)
    ID              reduce using rule 30 (master_sentence -> signal .)
    ISTRUE          reduce using rule 30 (master_sentence -> signal .)
    SIGNAL          reduce using rule 30 (master_sentence -> signal .)
    VIEWSIGNAL      reduce using rule 30 (master_sentence -> signal .)
    CUT             reduce using rule 30 (master_sentence -> signal .)
    RECUT           reduce using rule 30 (master_sentence -> signal .)
    CASE            reduce using rule 30 (master_sentence -> signal .)
    WHILE           reduce using rule 30 (master_sentence -> signal .)


state 38

    (31) master_sentence -> viewsignal .

    RPARENT         reduce using rule 31 (master_sentence -> viewsignal .)
    NEW             reduce using rule 31 (master_sentence -> viewsignal .)
    VALUES          reduce using rule 31 (master_sentence -> viewsignal .)
    CALL            reduce using rule 31 (master_sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 31 (master_sentence -> viewsignal .)
    ALTER           reduce using rule 31 (master_sentence -> viewsignal .)
    ALTERB          reduce using rule 31 (master_sentence -> viewsignal .)
    ID              reduce using rule 31 (master_sentence -> viewsignal .)
    ISTRUE          reduce using rule 31 (master_sentence -> viewsignal .)
    SIGNAL          reduce using rule 31 (master_sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 31 (master_sentence -> viewsignal .)
    CUT             reduce using rule 31 (master_sentence -> viewsignal .)
    RECUT           reduce using rule 31 (master_sentence -> viewsignal .)
    CASE            reduce using rule 31 (master_sentence -> viewsignal .)
    WHILE           reduce using rule 31 (master_sentence -> viewsignal .)


state 39

    (32) master_sentence -> cut .

    RPARENT         reduce using rule 32 (master_sentence -> cut .)
    NEW             reduce using rule 32 (master_sentence -> cut .)
    VALUES          reduce using rule 32 (master_sentence -> cut .)
    CALL            reduce using rule 32 (master_sentence -> cut .)
    PRINTVALUES     reduce using rule 32 (master_sentence -> cut .)
    ALTER           reduce using rule 32 (master_sentence -> cut .)
    ALTERB          reduce using rule 32 (master_sentence -> cut .)
    ID              reduce using rule 32 (master_sentence -> cut .)
    ISTRUE          reduce using rule 32 (master_sentence -> cut .)
    SIGNAL          reduce using rule 32 (master_sentence -> cut .)
    VIEWSIGNAL      reduce using rule 32 (master_sentence -> cut .)
    CUT             reduce using rule 32 (master_sentence -> cut .)
    RECUT           reduce using rule 32 (master_sentence -> cut .)
    CASE            reduce using rule 32 (master_sentence -> cut .)
    WHILE           reduce using rule 32 (master_sentence -> cut .)


state 40

    (33) master_sentence -> recut .

    RPARENT         reduce using rule 33 (master_sentence -> recut .)
    NEW             reduce using rule 33 (master_sentence -> recut .)
    VALUES          reduce using rule 33 (master_sentence -> recut .)
    CALL            reduce using rule 33 (master_sentence -> recut .)
    PRINTVALUES     reduce using rule 33 (master_sentence -> recut .)
    ALTER           reduce using rule 33 (master_sentence -> recut .)
    ALTERB          reduce using rule 33 (master_sentence -> recut .)
    ID              reduce using rule 33 (master_sentence -> recut .)
    ISTRUE          reduce using rule 33 (master_sentence -> recut .)
    SIGNAL          reduce using rule 33 (master_sentence -> recut .)
    VIEWSIGNAL      reduce using rule 33 (master_sentence -> recut .)
    CUT             reduce using rule 33 (master_sentence -> recut .)
    RECUT           reduce using rule 33 (master_sentence -> recut .)
    CASE            reduce using rule 33 (master_sentence -> recut .)
    WHILE           reduce using rule 33 (master_sentence -> recut .)


state 41

    (34) master_sentence -> case .

    RPARENT         reduce using rule 34 (master_sentence -> case .)
    NEW             reduce using rule 34 (master_sentence -> case .)
    VALUES          reduce using rule 34 (master_sentence -> case .)
    CALL            reduce using rule 34 (master_sentence -> case .)
    PRINTVALUES     reduce using rule 34 (master_sentence -> case .)
    ALTER           reduce using rule 34 (master_sentence -> case .)
    ALTERB          reduce using rule 34 (master_sentence -> case .)
    ID              reduce using rule 34 (master_sentence -> case .)
    ISTRUE          reduce using rule 34 (master_sentence -> case .)
    SIGNAL          reduce using rule 34 (master_sentence -> case .)
    VIEWSIGNAL      reduce using rule 34 (master_sentence -> case .)
    CUT             reduce using rule 34 (master_sentence -> case .)
    RECUT           reduce using rule 34 (master_sentence -> case .)
    CASE            reduce using rule 34 (master_sentence -> case .)
    WHILE           reduce using rule 34 (master_sentence -> case .)


state 42

    (35) master_sentence -> while .

    RPARENT         reduce using rule 35 (master_sentence -> while .)
    NEW             reduce using rule 35 (master_sentence -> while .)
    VALUES          reduce using rule 35 (master_sentence -> while .)
    CALL            reduce using rule 35 (master_sentence -> while .)
    PRINTVALUES     reduce using rule 35 (master_sentence -> while .)
    ALTER           reduce using rule 35 (master_sentence -> while .)
    ALTERB          reduce using rule 35 (master_sentence -> while .)
    ID              reduce using rule 35 (master_sentence -> while .)
    ISTRUE          reduce using rule 35 (master_sentence -> while .)
    SIGNAL          reduce using rule 35 (master_sentence -> while .)
    VIEWSIGNAL      reduce using rule 35 (master_sentence -> while .)
    CUT             reduce using rule 35 (master_sentence -> while .)
    RECUT           reduce using rule 35 (master_sentence -> while .)
    CASE            reduce using rule 35 (master_sentence -> while .)
    WHILE           reduce using rule 35 (master_sentence -> while .)


state 43

    (36) master_sentence -> empty .

    RPARENT         reduce using rule 36 (master_sentence -> empty .)
    NEW             reduce using rule 36 (master_sentence -> empty .)
    VALUES          reduce using rule 36 (master_sentence -> empty .)
    CALL            reduce using rule 36 (master_sentence -> empty .)
    PRINTVALUES     reduce using rule 36 (master_sentence -> empty .)
    ALTER           reduce using rule 36 (master_sentence -> empty .)
    ALTERB          reduce using rule 36 (master_sentence -> empty .)
    ID              reduce using rule 36 (master_sentence -> empty .)
    ISTRUE          reduce using rule 36 (master_sentence -> empty .)
    SIGNAL          reduce using rule 36 (master_sentence -> empty .)
    VIEWSIGNAL      reduce using rule 36 (master_sentence -> empty .)
    CUT             reduce using rule 36 (master_sentence -> empty .)
    RECUT           reduce using rule 36 (master_sentence -> empty .)
    CASE            reduce using rule 36 (master_sentence -> empty .)
    WHILE           reduce using rule 36 (master_sentence -> empty .)


state 44

    (98) comparisson_maq -> ID . MAQ INTEGER
    (99) comparisson_meq -> ID . MEQ INTEGER
    (100) comparisson_equal -> ID . EQUAL INTEGER
    (101) comparisson_dif -> ID . DIFFERENT INTEGER
    (102) comparisson_meqequal -> ID . MEQEQUAL INTEGER
    (103) comparisson_maqequal -> ID . MAQEQUAL INTEGER

    MAQ             shift and go to state 85
    MEQ             shift and go to state 86
    EQUAL           shift and go to state 87
    DIFFERENT       shift and go to state 88
    MEQEQUAL        shift and go to state 89
    MAQEQUAL        shift and go to state 90


state 45

    (76) values -> VALUES . LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (77) values -> VALUES . LPARENT ID COMA BOOL RPARENT SEMICOLON
    (78) values -> VALUES . LPARENT ID COMA return_statement RPARENT SEMICOLON

    LPARENT         shift and go to state 91


state 46

    (79) call -> CALL . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 92


state 47

    (80) print_values -> PRINTVALUES . LPARENT printable_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 93


state 48

    (93) alter -> ALTER . LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> ALTER . LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> ALTER . LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> ALTER . LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 94


state 49

    (97) alterB -> ALTERB . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 95


state 50

    (104) isTrue -> ISTRUE . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 96


state 51

    (105) signal -> SIGNAL . LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (106) signal -> SIGNAL . LPARENT ID COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 97


state 52

    (107) viewsignal -> VIEWSIGNAL . LPARENT INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 98


state 53

    (117) cut -> CUT . LPARENT ID COMA STRING RPARENT SEMICOLON
    (118) cut -> CUT . LPARENT ID COMA ID RPARENT SEMICOLON

    LPARENT         shift and go to state 99


state 54

    (119) recut -> RECUT . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 100


state 55

    (109) case -> CASE . expression recursive_conditions SEMICOLON
    (114) expression -> . ID

    ID              shift and go to state 102

    expression                     shift and go to state 101

state 56

    (108) while -> WHILE . sentences LPARENT sentences RPARENT SEMICOLON
    (42) sentences -> . sentence
    (43) sentences -> . sentences sentence
    (44) sentence -> . local_variable
    (45) sentence -> . values
    (46) sentence -> . call
    (47) sentence -> . print_values
    (48) sentence -> . alter
    (49) sentence -> . alterB
    (50) sentence -> . comparisson_maq
    (51) sentence -> . comparisson_meq
    (52) sentence -> . comparisson_equal
    (53) sentence -> . comparisson_dif
    (54) sentence -> . comparisson_meqequal
    (55) sentence -> . comparisson_maqequal
    (56) sentence -> . isTrue
    (57) sentence -> . signal
    (58) sentence -> . viewsignal
    (59) sentence -> . cut
    (60) sentence -> . recut
    (61) sentence -> . case
    (62) sentence -> . while
    (63) sentence -> . empty
    (73) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (76) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (77) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (78) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (79) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (80) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (93) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (97) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (98) comparisson_maq -> . ID MAQ INTEGER
    (99) comparisson_meq -> . ID MEQ INTEGER
    (100) comparisson_equal -> . ID EQUAL INTEGER
    (101) comparisson_dif -> . ID DIFFERENT INTEGER
    (102) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (103) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (104) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (106) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (107) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (117) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (118) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (119) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (109) case -> . CASE expression recursive_conditions SEMICOLON
    (108) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (120) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    NEW             shift and go to state 80
    VALUES          shift and go to state 45
    CALL            shift and go to state 46
    PRINTVALUES     shift and go to state 47
    ALTER           shift and go to state 48
    ALTERB          shift and go to state 49
    ID              shift and go to state 44
    ISTRUE          shift and go to state 50
    SIGNAL          shift and go to state 51
    VIEWSIGNAL      shift and go to state 52
    CUT             shift and go to state 53
    RECUT           shift and go to state 54
    CASE            shift and go to state 55
    WHILE           shift and go to state 56
    LPARENT         reduce using rule 120 (empty -> .)

  ! NEW             [ reduce using rule 120 (empty -> .) ]
  ! VALUES          [ reduce using rule 120 (empty -> .) ]
  ! CALL            [ reduce using rule 120 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 120 (empty -> .) ]
  ! ALTER           [ reduce using rule 120 (empty -> .) ]
  ! ALTERB          [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 120 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 120 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 120 (empty -> .) ]
  ! CUT             [ reduce using rule 120 (empty -> .) ]
  ! RECUT           [ reduce using rule 120 (empty -> .) ]
  ! CASE            [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]

    sentences                      shift and go to state 103
    sentence                       shift and go to state 59
    local_variable                 shift and go to state 60
    values                         shift and go to state 61
    call                           shift and go to state 62
    print_values                   shift and go to state 63
    alter                          shift and go to state 64
    alterB                         shift and go to state 65
    comparisson_maq                shift and go to state 66
    comparisson_meq                shift and go to state 67
    comparisson_equal              shift and go to state 68
    comparisson_dif                shift and go to state 69
    comparisson_meqequal           shift and go to state 70
    comparisson_maqequal           shift and go to state 71
    isTrue                         shift and go to state 72
    signal                         shift and go to state 73
    viewsignal                     shift and go to state 74
    cut                            shift and go to state 75
    recut                          shift and go to state 76
    case                           shift and go to state 77
    while                          shift and go to state 78
    empty                          shift and go to state 79

state 57

    (39) master_var -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> NEW ID COMA . LPARENT TYPE COMA STRING RPARENT SEMICOLON

    LPARENT         shift and go to state 104


state 58

    (13) procedure -> declare_procedure LPARENT sentences . RPARENT SEMICOLON
    (43) sentences -> sentences . sentence
    (44) sentence -> . local_variable
    (45) sentence -> . values
    (46) sentence -> . call
    (47) sentence -> . print_values
    (48) sentence -> . alter
    (49) sentence -> . alterB
    (50) sentence -> . comparisson_maq
    (51) sentence -> . comparisson_meq
    (52) sentence -> . comparisson_equal
    (53) sentence -> . comparisson_dif
    (54) sentence -> . comparisson_meqequal
    (55) sentence -> . comparisson_maqequal
    (56) sentence -> . isTrue
    (57) sentence -> . signal
    (58) sentence -> . viewsignal
    (59) sentence -> . cut
    (60) sentence -> . recut
    (61) sentence -> . case
    (62) sentence -> . while
    (63) sentence -> . empty
    (73) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (76) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (77) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (78) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (79) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (80) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (93) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (97) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (98) comparisson_maq -> . ID MAQ INTEGER
    (99) comparisson_meq -> . ID MEQ INTEGER
    (100) comparisson_equal -> . ID EQUAL INTEGER
    (101) comparisson_dif -> . ID DIFFERENT INTEGER
    (102) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (103) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (104) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (106) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (107) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (117) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (118) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (119) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (109) case -> . CASE expression recursive_conditions SEMICOLON
    (108) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (120) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RPARENT         shift and go to state 105
    NEW             shift and go to state 80
    VALUES          shift and go to state 45
    CALL            shift and go to state 46
    PRINTVALUES     shift and go to state 47
    ALTER           shift and go to state 48
    ALTERB          shift and go to state 49
    ID              shift and go to state 44
    ISTRUE          shift and go to state 50
    SIGNAL          shift and go to state 51
    VIEWSIGNAL      shift and go to state 52
    CUT             shift and go to state 53
    RECUT           shift and go to state 54
    CASE            shift and go to state 55
    WHILE           shift and go to state 56

  ! RPARENT         [ reduce using rule 120 (empty -> .) ]
  ! NEW             [ reduce using rule 120 (empty -> .) ]
  ! VALUES          [ reduce using rule 120 (empty -> .) ]
  ! CALL            [ reduce using rule 120 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 120 (empty -> .) ]
  ! ALTER           [ reduce using rule 120 (empty -> .) ]
  ! ALTERB          [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 120 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 120 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 120 (empty -> .) ]
  ! CUT             [ reduce using rule 120 (empty -> .) ]
  ! RECUT           [ reduce using rule 120 (empty -> .) ]
  ! CASE            [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]

    sentence                       shift and go to state 106
    local_variable                 shift and go to state 60
    values                         shift and go to state 61
    call                           shift and go to state 62
    print_values                   shift and go to state 63
    alter                          shift and go to state 64
    alterB                         shift and go to state 65
    comparisson_maq                shift and go to state 66
    comparisson_meq                shift and go to state 67
    comparisson_equal              shift and go to state 68
    comparisson_dif                shift and go to state 69
    comparisson_meqequal           shift and go to state 70
    comparisson_maqequal           shift and go to state 71
    isTrue                         shift and go to state 72
    signal                         shift and go to state 73
    viewsignal                     shift and go to state 74
    cut                            shift and go to state 75
    recut                          shift and go to state 76
    case                           shift and go to state 77
    while                          shift and go to state 78
    empty                          shift and go to state 79

state 59

    (42) sentences -> sentence .

    RPARENT         reduce using rule 42 (sentences -> sentence .)
    NEW             reduce using rule 42 (sentences -> sentence .)
    VALUES          reduce using rule 42 (sentences -> sentence .)
    CALL            reduce using rule 42 (sentences -> sentence .)
    PRINTVALUES     reduce using rule 42 (sentences -> sentence .)
    ALTER           reduce using rule 42 (sentences -> sentence .)
    ALTERB          reduce using rule 42 (sentences -> sentence .)
    ID              reduce using rule 42 (sentences -> sentence .)
    ISTRUE          reduce using rule 42 (sentences -> sentence .)
    SIGNAL          reduce using rule 42 (sentences -> sentence .)
    VIEWSIGNAL      reduce using rule 42 (sentences -> sentence .)
    CUT             reduce using rule 42 (sentences -> sentence .)
    RECUT           reduce using rule 42 (sentences -> sentence .)
    CASE            reduce using rule 42 (sentences -> sentence .)
    WHILE           reduce using rule 42 (sentences -> sentence .)
    LPARENT         reduce using rule 42 (sentences -> sentence .)


state 60

    (44) sentence -> local_variable .

    RPARENT         reduce using rule 44 (sentence -> local_variable .)
    NEW             reduce using rule 44 (sentence -> local_variable .)
    VALUES          reduce using rule 44 (sentence -> local_variable .)
    CALL            reduce using rule 44 (sentence -> local_variable .)
    PRINTVALUES     reduce using rule 44 (sentence -> local_variable .)
    ALTER           reduce using rule 44 (sentence -> local_variable .)
    ALTERB          reduce using rule 44 (sentence -> local_variable .)
    ID              reduce using rule 44 (sentence -> local_variable .)
    ISTRUE          reduce using rule 44 (sentence -> local_variable .)
    SIGNAL          reduce using rule 44 (sentence -> local_variable .)
    VIEWSIGNAL      reduce using rule 44 (sentence -> local_variable .)
    CUT             reduce using rule 44 (sentence -> local_variable .)
    RECUT           reduce using rule 44 (sentence -> local_variable .)
    CASE            reduce using rule 44 (sentence -> local_variable .)
    WHILE           reduce using rule 44 (sentence -> local_variable .)
    LPARENT         reduce using rule 44 (sentence -> local_variable .)


state 61

    (45) sentence -> values .

    RPARENT         reduce using rule 45 (sentence -> values .)
    NEW             reduce using rule 45 (sentence -> values .)
    VALUES          reduce using rule 45 (sentence -> values .)
    CALL            reduce using rule 45 (sentence -> values .)
    PRINTVALUES     reduce using rule 45 (sentence -> values .)
    ALTER           reduce using rule 45 (sentence -> values .)
    ALTERB          reduce using rule 45 (sentence -> values .)
    ID              reduce using rule 45 (sentence -> values .)
    ISTRUE          reduce using rule 45 (sentence -> values .)
    SIGNAL          reduce using rule 45 (sentence -> values .)
    VIEWSIGNAL      reduce using rule 45 (sentence -> values .)
    CUT             reduce using rule 45 (sentence -> values .)
    RECUT           reduce using rule 45 (sentence -> values .)
    CASE            reduce using rule 45 (sentence -> values .)
    WHILE           reduce using rule 45 (sentence -> values .)
    LPARENT         reduce using rule 45 (sentence -> values .)


state 62

    (46) sentence -> call .

    RPARENT         reduce using rule 46 (sentence -> call .)
    NEW             reduce using rule 46 (sentence -> call .)
    VALUES          reduce using rule 46 (sentence -> call .)
    CALL            reduce using rule 46 (sentence -> call .)
    PRINTVALUES     reduce using rule 46 (sentence -> call .)
    ALTER           reduce using rule 46 (sentence -> call .)
    ALTERB          reduce using rule 46 (sentence -> call .)
    ID              reduce using rule 46 (sentence -> call .)
    ISTRUE          reduce using rule 46 (sentence -> call .)
    SIGNAL          reduce using rule 46 (sentence -> call .)
    VIEWSIGNAL      reduce using rule 46 (sentence -> call .)
    CUT             reduce using rule 46 (sentence -> call .)
    RECUT           reduce using rule 46 (sentence -> call .)
    CASE            reduce using rule 46 (sentence -> call .)
    WHILE           reduce using rule 46 (sentence -> call .)
    LPARENT         reduce using rule 46 (sentence -> call .)


state 63

    (47) sentence -> print_values .

    RPARENT         reduce using rule 47 (sentence -> print_values .)
    NEW             reduce using rule 47 (sentence -> print_values .)
    VALUES          reduce using rule 47 (sentence -> print_values .)
    CALL            reduce using rule 47 (sentence -> print_values .)
    PRINTVALUES     reduce using rule 47 (sentence -> print_values .)
    ALTER           reduce using rule 47 (sentence -> print_values .)
    ALTERB          reduce using rule 47 (sentence -> print_values .)
    ID              reduce using rule 47 (sentence -> print_values .)
    ISTRUE          reduce using rule 47 (sentence -> print_values .)
    SIGNAL          reduce using rule 47 (sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 47 (sentence -> print_values .)
    CUT             reduce using rule 47 (sentence -> print_values .)
    RECUT           reduce using rule 47 (sentence -> print_values .)
    CASE            reduce using rule 47 (sentence -> print_values .)
    WHILE           reduce using rule 47 (sentence -> print_values .)
    LPARENT         reduce using rule 47 (sentence -> print_values .)


state 64

    (48) sentence -> alter .

    RPARENT         reduce using rule 48 (sentence -> alter .)
    NEW             reduce using rule 48 (sentence -> alter .)
    VALUES          reduce using rule 48 (sentence -> alter .)
    CALL            reduce using rule 48 (sentence -> alter .)
    PRINTVALUES     reduce using rule 48 (sentence -> alter .)
    ALTER           reduce using rule 48 (sentence -> alter .)
    ALTERB          reduce using rule 48 (sentence -> alter .)
    ID              reduce using rule 48 (sentence -> alter .)
    ISTRUE          reduce using rule 48 (sentence -> alter .)
    SIGNAL          reduce using rule 48 (sentence -> alter .)
    VIEWSIGNAL      reduce using rule 48 (sentence -> alter .)
    CUT             reduce using rule 48 (sentence -> alter .)
    RECUT           reduce using rule 48 (sentence -> alter .)
    CASE            reduce using rule 48 (sentence -> alter .)
    WHILE           reduce using rule 48 (sentence -> alter .)
    LPARENT         reduce using rule 48 (sentence -> alter .)


state 65

    (49) sentence -> alterB .

    RPARENT         reduce using rule 49 (sentence -> alterB .)
    NEW             reduce using rule 49 (sentence -> alterB .)
    VALUES          reduce using rule 49 (sentence -> alterB .)
    CALL            reduce using rule 49 (sentence -> alterB .)
    PRINTVALUES     reduce using rule 49 (sentence -> alterB .)
    ALTER           reduce using rule 49 (sentence -> alterB .)
    ALTERB          reduce using rule 49 (sentence -> alterB .)
    ID              reduce using rule 49 (sentence -> alterB .)
    ISTRUE          reduce using rule 49 (sentence -> alterB .)
    SIGNAL          reduce using rule 49 (sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 49 (sentence -> alterB .)
    CUT             reduce using rule 49 (sentence -> alterB .)
    RECUT           reduce using rule 49 (sentence -> alterB .)
    CASE            reduce using rule 49 (sentence -> alterB .)
    WHILE           reduce using rule 49 (sentence -> alterB .)
    LPARENT         reduce using rule 49 (sentence -> alterB .)


state 66

    (50) sentence -> comparisson_maq .

    RPARENT         reduce using rule 50 (sentence -> comparisson_maq .)
    NEW             reduce using rule 50 (sentence -> comparisson_maq .)
    VALUES          reduce using rule 50 (sentence -> comparisson_maq .)
    CALL            reduce using rule 50 (sentence -> comparisson_maq .)
    PRINTVALUES     reduce using rule 50 (sentence -> comparisson_maq .)
    ALTER           reduce using rule 50 (sentence -> comparisson_maq .)
    ALTERB          reduce using rule 50 (sentence -> comparisson_maq .)
    ID              reduce using rule 50 (sentence -> comparisson_maq .)
    ISTRUE          reduce using rule 50 (sentence -> comparisson_maq .)
    SIGNAL          reduce using rule 50 (sentence -> comparisson_maq .)
    VIEWSIGNAL      reduce using rule 50 (sentence -> comparisson_maq .)
    CUT             reduce using rule 50 (sentence -> comparisson_maq .)
    RECUT           reduce using rule 50 (sentence -> comparisson_maq .)
    CASE            reduce using rule 50 (sentence -> comparisson_maq .)
    WHILE           reduce using rule 50 (sentence -> comparisson_maq .)
    LPARENT         reduce using rule 50 (sentence -> comparisson_maq .)


state 67

    (51) sentence -> comparisson_meq .

    RPARENT         reduce using rule 51 (sentence -> comparisson_meq .)
    NEW             reduce using rule 51 (sentence -> comparisson_meq .)
    VALUES          reduce using rule 51 (sentence -> comparisson_meq .)
    CALL            reduce using rule 51 (sentence -> comparisson_meq .)
    PRINTVALUES     reduce using rule 51 (sentence -> comparisson_meq .)
    ALTER           reduce using rule 51 (sentence -> comparisson_meq .)
    ALTERB          reduce using rule 51 (sentence -> comparisson_meq .)
    ID              reduce using rule 51 (sentence -> comparisson_meq .)
    ISTRUE          reduce using rule 51 (sentence -> comparisson_meq .)
    SIGNAL          reduce using rule 51 (sentence -> comparisson_meq .)
    VIEWSIGNAL      reduce using rule 51 (sentence -> comparisson_meq .)
    CUT             reduce using rule 51 (sentence -> comparisson_meq .)
    RECUT           reduce using rule 51 (sentence -> comparisson_meq .)
    CASE            reduce using rule 51 (sentence -> comparisson_meq .)
    WHILE           reduce using rule 51 (sentence -> comparisson_meq .)
    LPARENT         reduce using rule 51 (sentence -> comparisson_meq .)


state 68

    (52) sentence -> comparisson_equal .

    RPARENT         reduce using rule 52 (sentence -> comparisson_equal .)
    NEW             reduce using rule 52 (sentence -> comparisson_equal .)
    VALUES          reduce using rule 52 (sentence -> comparisson_equal .)
    CALL            reduce using rule 52 (sentence -> comparisson_equal .)
    PRINTVALUES     reduce using rule 52 (sentence -> comparisson_equal .)
    ALTER           reduce using rule 52 (sentence -> comparisson_equal .)
    ALTERB          reduce using rule 52 (sentence -> comparisson_equal .)
    ID              reduce using rule 52 (sentence -> comparisson_equal .)
    ISTRUE          reduce using rule 52 (sentence -> comparisson_equal .)
    SIGNAL          reduce using rule 52 (sentence -> comparisson_equal .)
    VIEWSIGNAL      reduce using rule 52 (sentence -> comparisson_equal .)
    CUT             reduce using rule 52 (sentence -> comparisson_equal .)
    RECUT           reduce using rule 52 (sentence -> comparisson_equal .)
    CASE            reduce using rule 52 (sentence -> comparisson_equal .)
    WHILE           reduce using rule 52 (sentence -> comparisson_equal .)
    LPARENT         reduce using rule 52 (sentence -> comparisson_equal .)


state 69

    (53) sentence -> comparisson_dif .

    RPARENT         reduce using rule 53 (sentence -> comparisson_dif .)
    NEW             reduce using rule 53 (sentence -> comparisson_dif .)
    VALUES          reduce using rule 53 (sentence -> comparisson_dif .)
    CALL            reduce using rule 53 (sentence -> comparisson_dif .)
    PRINTVALUES     reduce using rule 53 (sentence -> comparisson_dif .)
    ALTER           reduce using rule 53 (sentence -> comparisson_dif .)
    ALTERB          reduce using rule 53 (sentence -> comparisson_dif .)
    ID              reduce using rule 53 (sentence -> comparisson_dif .)
    ISTRUE          reduce using rule 53 (sentence -> comparisson_dif .)
    SIGNAL          reduce using rule 53 (sentence -> comparisson_dif .)
    VIEWSIGNAL      reduce using rule 53 (sentence -> comparisson_dif .)
    CUT             reduce using rule 53 (sentence -> comparisson_dif .)
    RECUT           reduce using rule 53 (sentence -> comparisson_dif .)
    CASE            reduce using rule 53 (sentence -> comparisson_dif .)
    WHILE           reduce using rule 53 (sentence -> comparisson_dif .)
    LPARENT         reduce using rule 53 (sentence -> comparisson_dif .)


state 70

    (54) sentence -> comparisson_meqequal .

    RPARENT         reduce using rule 54 (sentence -> comparisson_meqequal .)
    NEW             reduce using rule 54 (sentence -> comparisson_meqequal .)
    VALUES          reduce using rule 54 (sentence -> comparisson_meqequal .)
    CALL            reduce using rule 54 (sentence -> comparisson_meqequal .)
    PRINTVALUES     reduce using rule 54 (sentence -> comparisson_meqequal .)
    ALTER           reduce using rule 54 (sentence -> comparisson_meqequal .)
    ALTERB          reduce using rule 54 (sentence -> comparisson_meqequal .)
    ID              reduce using rule 54 (sentence -> comparisson_meqequal .)
    ISTRUE          reduce using rule 54 (sentence -> comparisson_meqequal .)
    SIGNAL          reduce using rule 54 (sentence -> comparisson_meqequal .)
    VIEWSIGNAL      reduce using rule 54 (sentence -> comparisson_meqequal .)
    CUT             reduce using rule 54 (sentence -> comparisson_meqequal .)
    RECUT           reduce using rule 54 (sentence -> comparisson_meqequal .)
    CASE            reduce using rule 54 (sentence -> comparisson_meqequal .)
    WHILE           reduce using rule 54 (sentence -> comparisson_meqequal .)
    LPARENT         reduce using rule 54 (sentence -> comparisson_meqequal .)


state 71

    (55) sentence -> comparisson_maqequal .

    RPARENT         reduce using rule 55 (sentence -> comparisson_maqequal .)
    NEW             reduce using rule 55 (sentence -> comparisson_maqequal .)
    VALUES          reduce using rule 55 (sentence -> comparisson_maqequal .)
    CALL            reduce using rule 55 (sentence -> comparisson_maqequal .)
    PRINTVALUES     reduce using rule 55 (sentence -> comparisson_maqequal .)
    ALTER           reduce using rule 55 (sentence -> comparisson_maqequal .)
    ALTERB          reduce using rule 55 (sentence -> comparisson_maqequal .)
    ID              reduce using rule 55 (sentence -> comparisson_maqequal .)
    ISTRUE          reduce using rule 55 (sentence -> comparisson_maqequal .)
    SIGNAL          reduce using rule 55 (sentence -> comparisson_maqequal .)
    VIEWSIGNAL      reduce using rule 55 (sentence -> comparisson_maqequal .)
    CUT             reduce using rule 55 (sentence -> comparisson_maqequal .)
    RECUT           reduce using rule 55 (sentence -> comparisson_maqequal .)
    CASE            reduce using rule 55 (sentence -> comparisson_maqequal .)
    WHILE           reduce using rule 55 (sentence -> comparisson_maqequal .)
    LPARENT         reduce using rule 55 (sentence -> comparisson_maqequal .)


state 72

    (56) sentence -> isTrue .

    RPARENT         reduce using rule 56 (sentence -> isTrue .)
    NEW             reduce using rule 56 (sentence -> isTrue .)
    VALUES          reduce using rule 56 (sentence -> isTrue .)
    CALL            reduce using rule 56 (sentence -> isTrue .)
    PRINTVALUES     reduce using rule 56 (sentence -> isTrue .)
    ALTER           reduce using rule 56 (sentence -> isTrue .)
    ALTERB          reduce using rule 56 (sentence -> isTrue .)
    ID              reduce using rule 56 (sentence -> isTrue .)
    ISTRUE          reduce using rule 56 (sentence -> isTrue .)
    SIGNAL          reduce using rule 56 (sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 56 (sentence -> isTrue .)
    CUT             reduce using rule 56 (sentence -> isTrue .)
    RECUT           reduce using rule 56 (sentence -> isTrue .)
    CASE            reduce using rule 56 (sentence -> isTrue .)
    WHILE           reduce using rule 56 (sentence -> isTrue .)
    LPARENT         reduce using rule 56 (sentence -> isTrue .)


state 73

    (57) sentence -> signal .

    RPARENT         reduce using rule 57 (sentence -> signal .)
    NEW             reduce using rule 57 (sentence -> signal .)
    VALUES          reduce using rule 57 (sentence -> signal .)
    CALL            reduce using rule 57 (sentence -> signal .)
    PRINTVALUES     reduce using rule 57 (sentence -> signal .)
    ALTER           reduce using rule 57 (sentence -> signal .)
    ALTERB          reduce using rule 57 (sentence -> signal .)
    ID              reduce using rule 57 (sentence -> signal .)
    ISTRUE          reduce using rule 57 (sentence -> signal .)
    SIGNAL          reduce using rule 57 (sentence -> signal .)
    VIEWSIGNAL      reduce using rule 57 (sentence -> signal .)
    CUT             reduce using rule 57 (sentence -> signal .)
    RECUT           reduce using rule 57 (sentence -> signal .)
    CASE            reduce using rule 57 (sentence -> signal .)
    WHILE           reduce using rule 57 (sentence -> signal .)
    LPARENT         reduce using rule 57 (sentence -> signal .)


state 74

    (58) sentence -> viewsignal .

    RPARENT         reduce using rule 58 (sentence -> viewsignal .)
    NEW             reduce using rule 58 (sentence -> viewsignal .)
    VALUES          reduce using rule 58 (sentence -> viewsignal .)
    CALL            reduce using rule 58 (sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 58 (sentence -> viewsignal .)
    ALTER           reduce using rule 58 (sentence -> viewsignal .)
    ALTERB          reduce using rule 58 (sentence -> viewsignal .)
    ID              reduce using rule 58 (sentence -> viewsignal .)
    ISTRUE          reduce using rule 58 (sentence -> viewsignal .)
    SIGNAL          reduce using rule 58 (sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 58 (sentence -> viewsignal .)
    CUT             reduce using rule 58 (sentence -> viewsignal .)
    RECUT           reduce using rule 58 (sentence -> viewsignal .)
    CASE            reduce using rule 58 (sentence -> viewsignal .)
    WHILE           reduce using rule 58 (sentence -> viewsignal .)
    LPARENT         reduce using rule 58 (sentence -> viewsignal .)


state 75

    (59) sentence -> cut .

    RPARENT         reduce using rule 59 (sentence -> cut .)
    NEW             reduce using rule 59 (sentence -> cut .)
    VALUES          reduce using rule 59 (sentence -> cut .)
    CALL            reduce using rule 59 (sentence -> cut .)
    PRINTVALUES     reduce using rule 59 (sentence -> cut .)
    ALTER           reduce using rule 59 (sentence -> cut .)
    ALTERB          reduce using rule 59 (sentence -> cut .)
    ID              reduce using rule 59 (sentence -> cut .)
    ISTRUE          reduce using rule 59 (sentence -> cut .)
    SIGNAL          reduce using rule 59 (sentence -> cut .)
    VIEWSIGNAL      reduce using rule 59 (sentence -> cut .)
    CUT             reduce using rule 59 (sentence -> cut .)
    RECUT           reduce using rule 59 (sentence -> cut .)
    CASE            reduce using rule 59 (sentence -> cut .)
    WHILE           reduce using rule 59 (sentence -> cut .)
    LPARENT         reduce using rule 59 (sentence -> cut .)


state 76

    (60) sentence -> recut .

    RPARENT         reduce using rule 60 (sentence -> recut .)
    NEW             reduce using rule 60 (sentence -> recut .)
    VALUES          reduce using rule 60 (sentence -> recut .)
    CALL            reduce using rule 60 (sentence -> recut .)
    PRINTVALUES     reduce using rule 60 (sentence -> recut .)
    ALTER           reduce using rule 60 (sentence -> recut .)
    ALTERB          reduce using rule 60 (sentence -> recut .)
    ID              reduce using rule 60 (sentence -> recut .)
    ISTRUE          reduce using rule 60 (sentence -> recut .)
    SIGNAL          reduce using rule 60 (sentence -> recut .)
    VIEWSIGNAL      reduce using rule 60 (sentence -> recut .)
    CUT             reduce using rule 60 (sentence -> recut .)
    RECUT           reduce using rule 60 (sentence -> recut .)
    CASE            reduce using rule 60 (sentence -> recut .)
    WHILE           reduce using rule 60 (sentence -> recut .)
    LPARENT         reduce using rule 60 (sentence -> recut .)


state 77

    (61) sentence -> case .

    RPARENT         reduce using rule 61 (sentence -> case .)
    NEW             reduce using rule 61 (sentence -> case .)
    VALUES          reduce using rule 61 (sentence -> case .)
    CALL            reduce using rule 61 (sentence -> case .)
    PRINTVALUES     reduce using rule 61 (sentence -> case .)
    ALTER           reduce using rule 61 (sentence -> case .)
    ALTERB          reduce using rule 61 (sentence -> case .)
    ID              reduce using rule 61 (sentence -> case .)
    ISTRUE          reduce using rule 61 (sentence -> case .)
    SIGNAL          reduce using rule 61 (sentence -> case .)
    VIEWSIGNAL      reduce using rule 61 (sentence -> case .)
    CUT             reduce using rule 61 (sentence -> case .)
    RECUT           reduce using rule 61 (sentence -> case .)
    CASE            reduce using rule 61 (sentence -> case .)
    WHILE           reduce using rule 61 (sentence -> case .)
    LPARENT         reduce using rule 61 (sentence -> case .)


state 78

    (62) sentence -> while .

    RPARENT         reduce using rule 62 (sentence -> while .)
    NEW             reduce using rule 62 (sentence -> while .)
    VALUES          reduce using rule 62 (sentence -> while .)
    CALL            reduce using rule 62 (sentence -> while .)
    PRINTVALUES     reduce using rule 62 (sentence -> while .)
    ALTER           reduce using rule 62 (sentence -> while .)
    ALTERB          reduce using rule 62 (sentence -> while .)
    ID              reduce using rule 62 (sentence -> while .)
    ISTRUE          reduce using rule 62 (sentence -> while .)
    SIGNAL          reduce using rule 62 (sentence -> while .)
    VIEWSIGNAL      reduce using rule 62 (sentence -> while .)
    CUT             reduce using rule 62 (sentence -> while .)
    RECUT           reduce using rule 62 (sentence -> while .)
    CASE            reduce using rule 62 (sentence -> while .)
    WHILE           reduce using rule 62 (sentence -> while .)
    LPARENT         reduce using rule 62 (sentence -> while .)


state 79

    (63) sentence -> empty .

    RPARENT         reduce using rule 63 (sentence -> empty .)
    NEW             reduce using rule 63 (sentence -> empty .)
    VALUES          reduce using rule 63 (sentence -> empty .)
    CALL            reduce using rule 63 (sentence -> empty .)
    PRINTVALUES     reduce using rule 63 (sentence -> empty .)
    ALTER           reduce using rule 63 (sentence -> empty .)
    ALTERB          reduce using rule 63 (sentence -> empty .)
    ID              reduce using rule 63 (sentence -> empty .)
    ISTRUE          reduce using rule 63 (sentence -> empty .)
    SIGNAL          reduce using rule 63 (sentence -> empty .)
    VIEWSIGNAL      reduce using rule 63 (sentence -> empty .)
    CUT             reduce using rule 63 (sentence -> empty .)
    RECUT           reduce using rule 63 (sentence -> empty .)
    CASE            reduce using rule 63 (sentence -> empty .)
    WHILE           reduce using rule 63 (sentence -> empty .)
    LPARENT         reduce using rule 63 (sentence -> empty .)


state 80

    (73) local_variable -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> NEW . ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    ID              shift and go to state 107


state 81

    (6) start -> master_vars master master_vars procedures .
    (7) start -> master_vars master master_vars procedures . master_vars
    (12) procedures -> procedures . procedure
    (37) master_vars -> . master_var
    (38) master_vars -> . master_vars master_var
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (39) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 6 (start -> master_vars master master_vars procedures .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    master_vars                    shift and go to state 108
    procedure                      shift and go to state 16
    master_var                     shift and go to state 5
    declare_procedure              shift and go to state 10

state 82

    (9) start -> master_vars master procedures master_vars .
    (38) master_vars -> master_vars . master_var
    (39) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    $end            reduce using rule 9 (start -> master_vars master procedures master_vars .)
    NEW             shift and go to state 6

    master_var                     shift and go to state 13

state 83

    (14) master -> MASTER LPARENT master_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 109


state 84

    (16) master_sentences -> master_sentences master_sentence .

    RPARENT         reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    NEW             reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    VALUES          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    CALL            reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    PRINTVALUES     reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    ALTER           reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    ALTERB          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    ID              reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    ISTRUE          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    SIGNAL          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    VIEWSIGNAL      reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    CUT             reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    RECUT           reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    CASE            reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    WHILE           reduce using rule 16 (master_sentences -> master_sentences master_sentence .)


state 85

    (98) comparisson_maq -> ID MAQ . INTEGER

    INTEGER         shift and go to state 110


state 86

    (99) comparisson_meq -> ID MEQ . INTEGER

    INTEGER         shift and go to state 111


state 87

    (100) comparisson_equal -> ID EQUAL . INTEGER

    INTEGER         shift and go to state 112


state 88

    (101) comparisson_dif -> ID DIFFERENT . INTEGER

    INTEGER         shift and go to state 113


state 89

    (102) comparisson_meqequal -> ID MEQEQUAL . INTEGER

    INTEGER         shift and go to state 114


state 90

    (103) comparisson_maqequal -> ID MAQEQUAL . INTEGER

    INTEGER         shift and go to state 115


state 91

    (76) values -> VALUES LPARENT . ID COMA INTEGER RPARENT SEMICOLON
    (77) values -> VALUES LPARENT . ID COMA BOOL RPARENT SEMICOLON
    (78) values -> VALUES LPARENT . ID COMA return_statement RPARENT SEMICOLON

    ID              shift and go to state 116


state 92

    (79) call -> CALL LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 117


state 93

    (80) print_values -> PRINTVALUES LPARENT . printable_sentences RPARENT SEMICOLON
    (81) printable_sentences -> . printable_sentence_var
    (82) printable_sentences -> . printable_sentence_string
    (83) printable_sentences -> . printable_sentence_var COMA printable_sentence_var
    (84) printable_sentences -> . printable_sentence_string COMA printable_sentence_string
    (85) printable_sentences -> . printable_sentence_var COMA printable_sentence_string
    (86) printable_sentences -> . printable_sentence_string COMA printable_sentence_var
    (87) printable_sentences -> . printable_sentences COMA printable_sentence_var
    (88) printable_sentences -> . printable_sentences COMA printable_sentence_string
    (89) printable_sentences -> . COMA printable_sentences COMA printable_sentence_var
    (90) printable_sentences -> . COMA printable_sentences COMA printable_sentence_string
    (91) printable_sentence_var -> . ID
    (92) printable_sentence_string -> . STRING

    COMA            shift and go to state 121
    ID              shift and go to state 122
    STRING          shift and go to state 123

    printable_sentences            shift and go to state 118
    printable_sentence_var         shift and go to state 119
    printable_sentence_string      shift and go to state 120

state 94

    (93) alter -> ALTER LPARENT . ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> ALTER LPARENT . ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> ALTER LPARENT . ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> ALTER LPARENT . ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    ID              shift and go to state 124


state 95

    (97) alterB -> ALTERB LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 125


state 96

    (104) isTrue -> ISTRUE LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 126


state 97

    (105) signal -> SIGNAL LPARENT . INTEGER COMA INTEGER RPARENT SEMICOLON
    (106) signal -> SIGNAL LPARENT . ID COMA INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 127
    ID              shift and go to state 128


state 98

    (107) viewsignal -> VIEWSIGNAL LPARENT . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 129


state 99

    (117) cut -> CUT LPARENT . ID COMA STRING RPARENT SEMICOLON
    (118) cut -> CUT LPARENT . ID COMA ID RPARENT SEMICOLON

    ID              shift and go to state 130


state 100

    (119) recut -> RECUT LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 131


state 101

    (109) case -> CASE expression . recursive_conditions SEMICOLON
    (111) recursive_conditions -> . recursive_condition
    (112) recursive_conditions -> . recursive_conditions recursive_condition
    (113) recursive_condition -> . condition LPARENT sentences RPARENT
    (115) condition -> . WHEN INTEGER THEN
    (116) condition -> . WHEN STRING THEN

    WHEN            shift and go to state 135

    recursive_conditions           shift and go to state 132
    recursive_condition            shift and go to state 133
    condition                      shift and go to state 134

state 102

    (114) expression -> ID .

    WHEN            reduce using rule 114 (expression -> ID .)


state 103

    (108) while -> WHILE sentences . LPARENT sentences RPARENT SEMICOLON
    (43) sentences -> sentences . sentence
    (44) sentence -> . local_variable
    (45) sentence -> . values
    (46) sentence -> . call
    (47) sentence -> . print_values
    (48) sentence -> . alter
    (49) sentence -> . alterB
    (50) sentence -> . comparisson_maq
    (51) sentence -> . comparisson_meq
    (52) sentence -> . comparisson_equal
    (53) sentence -> . comparisson_dif
    (54) sentence -> . comparisson_meqequal
    (55) sentence -> . comparisson_maqequal
    (56) sentence -> . isTrue
    (57) sentence -> . signal
    (58) sentence -> . viewsignal
    (59) sentence -> . cut
    (60) sentence -> . recut
    (61) sentence -> . case
    (62) sentence -> . while
    (63) sentence -> . empty
    (73) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (76) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (77) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (78) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (79) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (80) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (93) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (97) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (98) comparisson_maq -> . ID MAQ INTEGER
    (99) comparisson_meq -> . ID MEQ INTEGER
    (100) comparisson_equal -> . ID EQUAL INTEGER
    (101) comparisson_dif -> . ID DIFFERENT INTEGER
    (102) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (103) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (104) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (106) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (107) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (117) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (118) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (119) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (109) case -> . CASE expression recursive_conditions SEMICOLON
    (108) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (120) empty -> .

  ! shift/reduce conflict for LPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    LPARENT         shift and go to state 136
    NEW             shift and go to state 80
    VALUES          shift and go to state 45
    CALL            shift and go to state 46
    PRINTVALUES     shift and go to state 47
    ALTER           shift and go to state 48
    ALTERB          shift and go to state 49
    ID              shift and go to state 44
    ISTRUE          shift and go to state 50
    SIGNAL          shift and go to state 51
    VIEWSIGNAL      shift and go to state 52
    CUT             shift and go to state 53
    RECUT           shift and go to state 54
    CASE            shift and go to state 55
    WHILE           shift and go to state 56

  ! LPARENT         [ reduce using rule 120 (empty -> .) ]
  ! NEW             [ reduce using rule 120 (empty -> .) ]
  ! VALUES          [ reduce using rule 120 (empty -> .) ]
  ! CALL            [ reduce using rule 120 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 120 (empty -> .) ]
  ! ALTER           [ reduce using rule 120 (empty -> .) ]
  ! ALTERB          [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 120 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 120 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 120 (empty -> .) ]
  ! CUT             [ reduce using rule 120 (empty -> .) ]
  ! RECUT           [ reduce using rule 120 (empty -> .) ]
  ! CASE            [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]

    sentence                       shift and go to state 106
    local_variable                 shift and go to state 60
    values                         shift and go to state 61
    call                           shift and go to state 62
    print_values                   shift and go to state 63
    alter                          shift and go to state 64
    alterB                         shift and go to state 65
    comparisson_maq                shift and go to state 66
    comparisson_meq                shift and go to state 67
    comparisson_equal              shift and go to state 68
    comparisson_dif                shift and go to state 69
    comparisson_meqequal           shift and go to state 70
    comparisson_maqequal           shift and go to state 71
    isTrue                         shift and go to state 72
    signal                         shift and go to state 73
    viewsignal                     shift and go to state 74
    cut                            shift and go to state 75
    recut                          shift and go to state 76
    case                           shift and go to state 77
    while                          shift and go to state 78
    empty                          shift and go to state 79

state 104

    (39) master_var -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> NEW ID COMA LPARENT . TYPE COMA STRING RPARENT SEMICOLON

    TYPE            shift and go to state 137


state 105

    (13) procedure -> declare_procedure LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 138


state 106

    (43) sentences -> sentences sentence .

    RPARENT         reduce using rule 43 (sentences -> sentences sentence .)
    NEW             reduce using rule 43 (sentences -> sentences sentence .)
    VALUES          reduce using rule 43 (sentences -> sentences sentence .)
    CALL            reduce using rule 43 (sentences -> sentences sentence .)
    PRINTVALUES     reduce using rule 43 (sentences -> sentences sentence .)
    ALTER           reduce using rule 43 (sentences -> sentences sentence .)
    ALTERB          reduce using rule 43 (sentences -> sentences sentence .)
    ID              reduce using rule 43 (sentences -> sentences sentence .)
    ISTRUE          reduce using rule 43 (sentences -> sentences sentence .)
    SIGNAL          reduce using rule 43 (sentences -> sentences sentence .)
    VIEWSIGNAL      reduce using rule 43 (sentences -> sentences sentence .)
    CUT             reduce using rule 43 (sentences -> sentences sentence .)
    RECUT           reduce using rule 43 (sentences -> sentences sentence .)
    CASE            reduce using rule 43 (sentences -> sentences sentence .)
    WHILE           reduce using rule 43 (sentences -> sentences sentence .)
    LPARENT         reduce using rule 43 (sentences -> sentences sentence .)


state 107

    (73) local_variable -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> NEW ID . COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    COMA            shift and go to state 139


state 108

    (7) start -> master_vars master master_vars procedures master_vars .
    (38) master_vars -> master_vars . master_var
    (39) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (41) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    $end            reduce using rule 7 (start -> master_vars master master_vars procedures master_vars .)
    NEW             shift and go to state 6

    master_var                     shift and go to state 13

state 109

    (14) master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .

    NEW             reduce using rule 14 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)
    PROC            reduce using rule 14 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)
    $end            reduce using rule 14 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)


state 110

    (98) comparisson_maq -> ID MAQ INTEGER .

    RPARENT         reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    NEW             reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    VALUES          reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    CALL            reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    PRINTVALUES     reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    ALTER           reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    ALTERB          reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    ID              reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    ISTRUE          reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    SIGNAL          reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    VIEWSIGNAL      reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    CUT             reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    RECUT           reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    CASE            reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    WHILE           reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)
    LPARENT         reduce using rule 98 (comparisson_maq -> ID MAQ INTEGER .)


state 111

    (99) comparisson_meq -> ID MEQ INTEGER .

    RPARENT         reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    NEW             reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    VALUES          reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    CALL            reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    PRINTVALUES     reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    ALTER           reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    ALTERB          reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    ID              reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    ISTRUE          reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    SIGNAL          reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    VIEWSIGNAL      reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    CUT             reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    RECUT           reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    CASE            reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    WHILE           reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)
    LPARENT         reduce using rule 99 (comparisson_meq -> ID MEQ INTEGER .)


state 112

    (100) comparisson_equal -> ID EQUAL INTEGER .

    RPARENT         reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    NEW             reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    VALUES          reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    CALL            reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    PRINTVALUES     reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    ALTER           reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    ALTERB          reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    ID              reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    ISTRUE          reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    SIGNAL          reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    CUT             reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    RECUT           reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    CASE            reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    WHILE           reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)
    LPARENT         reduce using rule 100 (comparisson_equal -> ID EQUAL INTEGER .)


state 113

    (101) comparisson_dif -> ID DIFFERENT INTEGER .

    RPARENT         reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    NEW             reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    VALUES          reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    CALL            reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    PRINTVALUES     reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    ALTER           reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    ALTERB          reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    ID              reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    ISTRUE          reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    SIGNAL          reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    VIEWSIGNAL      reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    CUT             reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    RECUT           reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    CASE            reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    WHILE           reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)
    LPARENT         reduce using rule 101 (comparisson_dif -> ID DIFFERENT INTEGER .)


state 114

    (102) comparisson_meqequal -> ID MEQEQUAL INTEGER .

    RPARENT         reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    NEW             reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    VALUES          reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    CALL            reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    ALTER           reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    ALTERB          reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    ID              reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    ISTRUE          reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    SIGNAL          reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    CUT             reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    RECUT           reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    CASE            reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    WHILE           reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    LPARENT         reduce using rule 102 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)


state 115

    (103) comparisson_maqequal -> ID MAQEQUAL INTEGER .

    RPARENT         reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    NEW             reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    VALUES          reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    CALL            reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    ALTER           reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    ALTERB          reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    ID              reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    ISTRUE          reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    SIGNAL          reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    CUT             reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    RECUT           reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    CASE            reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    WHILE           reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    LPARENT         reduce using rule 103 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)


state 116

    (76) values -> VALUES LPARENT ID . COMA INTEGER RPARENT SEMICOLON
    (77) values -> VALUES LPARENT ID . COMA BOOL RPARENT SEMICOLON
    (78) values -> VALUES LPARENT ID . COMA return_statement RPARENT SEMICOLON

    COMA            shift and go to state 140


state 117

    (79) call -> CALL LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 141


state 118

    (80) print_values -> PRINTVALUES LPARENT printable_sentences . RPARENT SEMICOLON
    (87) printable_sentences -> printable_sentences . COMA printable_sentence_var
    (88) printable_sentences -> printable_sentences . COMA printable_sentence_string

    RPARENT         shift and go to state 142
    COMA            shift and go to state 143


state 119

    (81) printable_sentences -> printable_sentence_var .
    (83) printable_sentences -> printable_sentence_var . COMA printable_sentence_var
    (85) printable_sentences -> printable_sentence_var . COMA printable_sentence_string

  ! shift/reduce conflict for COMA resolved as shift
    RPARENT         reduce using rule 81 (printable_sentences -> printable_sentence_var .)
    COMA            shift and go to state 144

  ! COMA            [ reduce using rule 81 (printable_sentences -> printable_sentence_var .) ]


state 120

    (82) printable_sentences -> printable_sentence_string .
    (84) printable_sentences -> printable_sentence_string . COMA printable_sentence_string
    (86) printable_sentences -> printable_sentence_string . COMA printable_sentence_var

  ! shift/reduce conflict for COMA resolved as shift
    RPARENT         reduce using rule 82 (printable_sentences -> printable_sentence_string .)
    COMA            shift and go to state 145

  ! COMA            [ reduce using rule 82 (printable_sentences -> printable_sentence_string .) ]


state 121

    (89) printable_sentences -> COMA . printable_sentences COMA printable_sentence_var
    (90) printable_sentences -> COMA . printable_sentences COMA printable_sentence_string
    (81) printable_sentences -> . printable_sentence_var
    (82) printable_sentences -> . printable_sentence_string
    (83) printable_sentences -> . printable_sentence_var COMA printable_sentence_var
    (84) printable_sentences -> . printable_sentence_string COMA printable_sentence_string
    (85) printable_sentences -> . printable_sentence_var COMA printable_sentence_string
    (86) printable_sentences -> . printable_sentence_string COMA printable_sentence_var
    (87) printable_sentences -> . printable_sentences COMA printable_sentence_var
    (88) printable_sentences -> . printable_sentences COMA printable_sentence_string
    (89) printable_sentences -> . COMA printable_sentences COMA printable_sentence_var
    (90) printable_sentences -> . COMA printable_sentences COMA printable_sentence_string
    (91) printable_sentence_var -> . ID
    (92) printable_sentence_string -> . STRING

    COMA            shift and go to state 121
    ID              shift and go to state 122
    STRING          shift and go to state 123

    printable_sentences            shift and go to state 146
    printable_sentence_var         shift and go to state 119
    printable_sentence_string      shift and go to state 120

state 122

    (91) printable_sentence_var -> ID .

    COMA            reduce using rule 91 (printable_sentence_var -> ID .)
    RPARENT         reduce using rule 91 (printable_sentence_var -> ID .)


state 123

    (92) printable_sentence_string -> STRING .

    COMA            reduce using rule 92 (printable_sentence_string -> STRING .)
    RPARENT         reduce using rule 92 (printable_sentence_string -> STRING .)


state 124

    (93) alter -> ALTER LPARENT ID . COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> ALTER LPARENT ID . COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> ALTER LPARENT ID . COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> ALTER LPARENT ID . COMA DIV COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 147


state 125

    (97) alterB -> ALTERB LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 148


state 126

    (104) isTrue -> ISTRUE LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 149


state 127

    (105) signal -> SIGNAL LPARENT INTEGER . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 150


state 128

    (106) signal -> SIGNAL LPARENT ID . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 151


state 129

    (107) viewsignal -> VIEWSIGNAL LPARENT INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 152


state 130

    (117) cut -> CUT LPARENT ID . COMA STRING RPARENT SEMICOLON
    (118) cut -> CUT LPARENT ID . COMA ID RPARENT SEMICOLON

    COMA            shift and go to state 153


state 131

    (119) recut -> RECUT LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 154


state 132

    (109) case -> CASE expression recursive_conditions . SEMICOLON
    (112) recursive_conditions -> recursive_conditions . recursive_condition
    (113) recursive_condition -> . condition LPARENT sentences RPARENT
    (115) condition -> . WHEN INTEGER THEN
    (116) condition -> . WHEN STRING THEN

    SEMICOLON       shift and go to state 155
    WHEN            shift and go to state 135

    recursive_condition            shift and go to state 156
    condition                      shift and go to state 134

state 133

    (111) recursive_conditions -> recursive_condition .

    SEMICOLON       reduce using rule 111 (recursive_conditions -> recursive_condition .)
    WHEN            reduce using rule 111 (recursive_conditions -> recursive_condition .)


state 134

    (113) recursive_condition -> condition . LPARENT sentences RPARENT

    LPARENT         shift and go to state 157


state 135

    (115) condition -> WHEN . INTEGER THEN
    (116) condition -> WHEN . STRING THEN

    INTEGER         shift and go to state 158
    STRING          shift and go to state 159


state 136

    (108) while -> WHILE sentences LPARENT . sentences RPARENT SEMICOLON
    (42) sentences -> . sentence
    (43) sentences -> . sentences sentence
    (44) sentence -> . local_variable
    (45) sentence -> . values
    (46) sentence -> . call
    (47) sentence -> . print_values
    (48) sentence -> . alter
    (49) sentence -> . alterB
    (50) sentence -> . comparisson_maq
    (51) sentence -> . comparisson_meq
    (52) sentence -> . comparisson_equal
    (53) sentence -> . comparisson_dif
    (54) sentence -> . comparisson_meqequal
    (55) sentence -> . comparisson_maqequal
    (56) sentence -> . isTrue
    (57) sentence -> . signal
    (58) sentence -> . viewsignal
    (59) sentence -> . cut
    (60) sentence -> . recut
    (61) sentence -> . case
    (62) sentence -> . while
    (63) sentence -> . empty
    (73) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (76) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (77) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (78) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (79) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (80) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (93) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (97) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (98) comparisson_maq -> . ID MAQ INTEGER
    (99) comparisson_meq -> . ID MEQ INTEGER
    (100) comparisson_equal -> . ID EQUAL INTEGER
    (101) comparisson_dif -> . ID DIFFERENT INTEGER
    (102) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (103) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (104) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (106) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (107) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (117) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (118) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (119) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (109) case -> . CASE expression recursive_conditions SEMICOLON
    (108) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (120) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    NEW             shift and go to state 80
    VALUES          shift and go to state 45
    CALL            shift and go to state 46
    PRINTVALUES     shift and go to state 47
    ALTER           shift and go to state 48
    ALTERB          shift and go to state 49
    ID              shift and go to state 44
    ISTRUE          shift and go to state 50
    SIGNAL          shift and go to state 51
    VIEWSIGNAL      shift and go to state 52
    CUT             shift and go to state 53
    RECUT           shift and go to state 54
    CASE            shift and go to state 55
    WHILE           shift and go to state 56
    RPARENT         reduce using rule 120 (empty -> .)

  ! NEW             [ reduce using rule 120 (empty -> .) ]
  ! VALUES          [ reduce using rule 120 (empty -> .) ]
  ! CALL            [ reduce using rule 120 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 120 (empty -> .) ]
  ! ALTER           [ reduce using rule 120 (empty -> .) ]
  ! ALTERB          [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 120 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 120 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 120 (empty -> .) ]
  ! CUT             [ reduce using rule 120 (empty -> .) ]
  ! RECUT           [ reduce using rule 120 (empty -> .) ]
  ! CASE            [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]

    sentences                      shift and go to state 160
    sentence                       shift and go to state 59
    local_variable                 shift and go to state 60
    values                         shift and go to state 61
    call                           shift and go to state 62
    print_values                   shift and go to state 63
    alter                          shift and go to state 64
    alterB                         shift and go to state 65
    comparisson_maq                shift and go to state 66
    comparisson_meq                shift and go to state 67
    comparisson_equal              shift and go to state 68
    comparisson_dif                shift and go to state 69
    comparisson_meqequal           shift and go to state 70
    comparisson_maqequal           shift and go to state 71
    isTrue                         shift and go to state 72
    signal                         shift and go to state 73
    viewsignal                     shift and go to state 74
    cut                            shift and go to state 75
    recut                          shift and go to state 76
    case                           shift and go to state 77
    while                          shift and go to state 78
    empty                          shift and go to state 79

state 137

    (39) master_var -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (40) master_var -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON
    (41) master_var -> NEW ID COMA LPARENT TYPE . COMA STRING RPARENT SEMICOLON

    COMA            shift and go to state 161


state 138

    (13) procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .

    PROC            reduce using rule 13 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)
    $end            reduce using rule 13 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 13 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)


state 139

    (73) local_variable -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> NEW ID COMA . LPARENT TYPE COMA STRING RPARENT SEMICOLON

    LPARENT         shift and go to state 162


state 140

    (76) values -> VALUES LPARENT ID COMA . INTEGER RPARENT SEMICOLON
    (77) values -> VALUES LPARENT ID COMA . BOOL RPARENT SEMICOLON
    (78) values -> VALUES LPARENT ID COMA . return_statement RPARENT SEMICOLON
    (64) return_statement -> . isTrue
    (65) return_statement -> . comparisson_maqequal
    (66) return_statement -> . comparisson_meqequal
    (67) return_statement -> . comparisson_dif
    (68) return_statement -> . comparisson_equal
    (69) return_statement -> . comparisson_meq
    (70) return_statement -> . comparisson_maq
    (71) return_statement -> . alterB
    (72) return_statement -> . alter
    (104) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (103) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (102) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (101) comparisson_dif -> . ID DIFFERENT INTEGER
    (100) comparisson_equal -> . ID EQUAL INTEGER
    (99) comparisson_meq -> . ID MEQ INTEGER
    (98) comparisson_maq -> . ID MAQ INTEGER
    (97) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (93) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 164
    BOOL            shift and go to state 165
    ISTRUE          shift and go to state 50
    ID              shift and go to state 163
    ALTERB          shift and go to state 49
    ALTER           shift and go to state 48

    return_statement               shift and go to state 166
    isTrue                         shift and go to state 167
    comparisson_maqequal           shift and go to state 168
    comparisson_meqequal           shift and go to state 169
    comparisson_dif                shift and go to state 170
    comparisson_equal              shift and go to state 171
    comparisson_meq                shift and go to state 172
    comparisson_maq                shift and go to state 173
    alterB                         shift and go to state 174
    alter                          shift and go to state 175

state 141

    (79) call -> CALL LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 176


state 142

    (80) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 177


state 143

    (87) printable_sentences -> printable_sentences COMA . printable_sentence_var
    (88) printable_sentences -> printable_sentences COMA . printable_sentence_string
    (91) printable_sentence_var -> . ID
    (92) printable_sentence_string -> . STRING

    ID              shift and go to state 122
    STRING          shift and go to state 123

    printable_sentence_var         shift and go to state 178
    printable_sentence_string      shift and go to state 179

state 144

    (83) printable_sentences -> printable_sentence_var COMA . printable_sentence_var
    (85) printable_sentences -> printable_sentence_var COMA . printable_sentence_string
    (91) printable_sentence_var -> . ID
    (92) printable_sentence_string -> . STRING

    ID              shift and go to state 122
    STRING          shift and go to state 123

    printable_sentence_var         shift and go to state 180
    printable_sentence_string      shift and go to state 181

state 145

    (84) printable_sentences -> printable_sentence_string COMA . printable_sentence_string
    (86) printable_sentences -> printable_sentence_string COMA . printable_sentence_var
    (92) printable_sentence_string -> . STRING
    (91) printable_sentence_var -> . ID

    STRING          shift and go to state 123
    ID              shift and go to state 122

    printable_sentence_string      shift and go to state 182
    printable_sentence_var         shift and go to state 183

state 146

    (89) printable_sentences -> COMA printable_sentences . COMA printable_sentence_var
    (90) printable_sentences -> COMA printable_sentences . COMA printable_sentence_string
    (87) printable_sentences -> printable_sentences . COMA printable_sentence_var
    (88) printable_sentences -> printable_sentences . COMA printable_sentence_string

    COMA            shift and go to state 184


state 147

    (93) alter -> ALTER LPARENT ID COMA . ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> ALTER LPARENT ID COMA . SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> ALTER LPARENT ID COMA . MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> ALTER LPARENT ID COMA . DIV COMA INTEGER RPARENT SEMICOLON

    ADD             shift and go to state 185
    SUB             shift and go to state 186
    MUL             shift and go to state 187
    DIV             shift and go to state 188


state 148

    (97) alterB -> ALTERB LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 189


state 149

    (104) isTrue -> ISTRUE LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 190


state 150

    (105) signal -> SIGNAL LPARENT INTEGER COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 191


state 151

    (106) signal -> SIGNAL LPARENT ID COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 192


state 152

    (107) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 193


state 153

    (117) cut -> CUT LPARENT ID COMA . STRING RPARENT SEMICOLON
    (118) cut -> CUT LPARENT ID COMA . ID RPARENT SEMICOLON

    STRING          shift and go to state 195
    ID              shift and go to state 194


state 154

    (119) recut -> RECUT LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 196


state 155

    (109) case -> CASE expression recursive_conditions SEMICOLON .

    RPARENT         reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    NEW             reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    VALUES          reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    CALL            reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    PRINTVALUES     reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    ALTER           reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    ALTERB          reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    ID              reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    ISTRUE          reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    SIGNAL          reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    VIEWSIGNAL      reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    CUT             reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    RECUT           reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    CASE            reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    WHILE           reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)
    LPARENT         reduce using rule 109 (case -> CASE expression recursive_conditions SEMICOLON .)


state 156

    (112) recursive_conditions -> recursive_conditions recursive_condition .

    SEMICOLON       reduce using rule 112 (recursive_conditions -> recursive_conditions recursive_condition .)
    WHEN            reduce using rule 112 (recursive_conditions -> recursive_conditions recursive_condition .)


state 157

    (113) recursive_condition -> condition LPARENT . sentences RPARENT
    (42) sentences -> . sentence
    (43) sentences -> . sentences sentence
    (44) sentence -> . local_variable
    (45) sentence -> . values
    (46) sentence -> . call
    (47) sentence -> . print_values
    (48) sentence -> . alter
    (49) sentence -> . alterB
    (50) sentence -> . comparisson_maq
    (51) sentence -> . comparisson_meq
    (52) sentence -> . comparisson_equal
    (53) sentence -> . comparisson_dif
    (54) sentence -> . comparisson_meqequal
    (55) sentence -> . comparisson_maqequal
    (56) sentence -> . isTrue
    (57) sentence -> . signal
    (58) sentence -> . viewsignal
    (59) sentence -> . cut
    (60) sentence -> . recut
    (61) sentence -> . case
    (62) sentence -> . while
    (63) sentence -> . empty
    (73) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (76) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (77) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (78) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (79) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (80) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (93) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (97) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (98) comparisson_maq -> . ID MAQ INTEGER
    (99) comparisson_meq -> . ID MEQ INTEGER
    (100) comparisson_equal -> . ID EQUAL INTEGER
    (101) comparisson_dif -> . ID DIFFERENT INTEGER
    (102) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (103) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (104) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (106) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (107) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (117) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (118) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (119) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (109) case -> . CASE expression recursive_conditions SEMICOLON
    (108) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (120) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    NEW             shift and go to state 80
    VALUES          shift and go to state 45
    CALL            shift and go to state 46
    PRINTVALUES     shift and go to state 47
    ALTER           shift and go to state 48
    ALTERB          shift and go to state 49
    ID              shift and go to state 44
    ISTRUE          shift and go to state 50
    SIGNAL          shift and go to state 51
    VIEWSIGNAL      shift and go to state 52
    CUT             shift and go to state 53
    RECUT           shift and go to state 54
    CASE            shift and go to state 55
    WHILE           shift and go to state 56
    RPARENT         reduce using rule 120 (empty -> .)

  ! NEW             [ reduce using rule 120 (empty -> .) ]
  ! VALUES          [ reduce using rule 120 (empty -> .) ]
  ! CALL            [ reduce using rule 120 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 120 (empty -> .) ]
  ! ALTER           [ reduce using rule 120 (empty -> .) ]
  ! ALTERB          [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 120 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 120 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 120 (empty -> .) ]
  ! CUT             [ reduce using rule 120 (empty -> .) ]
  ! RECUT           [ reduce using rule 120 (empty -> .) ]
  ! CASE            [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]

    sentences                      shift and go to state 197
    sentence                       shift and go to state 59
    local_variable                 shift and go to state 60
    values                         shift and go to state 61
    call                           shift and go to state 62
    print_values                   shift and go to state 63
    alter                          shift and go to state 64
    alterB                         shift and go to state 65
    comparisson_maq                shift and go to state 66
    comparisson_meq                shift and go to state 67
    comparisson_equal              shift and go to state 68
    comparisson_dif                shift and go to state 69
    comparisson_meqequal           shift and go to state 70
    comparisson_maqequal           shift and go to state 71
    isTrue                         shift and go to state 72
    signal                         shift and go to state 73
    viewsignal                     shift and go to state 74
    cut                            shift and go to state 75
    recut                          shift and go to state 76
    case                           shift and go to state 77
    while                          shift and go to state 78
    empty                          shift and go to state 79

state 158

    (115) condition -> WHEN INTEGER . THEN

    THEN            shift and go to state 198


state 159

    (116) condition -> WHEN STRING . THEN

    THEN            shift and go to state 199


state 160

    (108) while -> WHILE sentences LPARENT sentences . RPARENT SEMICOLON
    (43) sentences -> sentences . sentence
    (44) sentence -> . local_variable
    (45) sentence -> . values
    (46) sentence -> . call
    (47) sentence -> . print_values
    (48) sentence -> . alter
    (49) sentence -> . alterB
    (50) sentence -> . comparisson_maq
    (51) sentence -> . comparisson_meq
    (52) sentence -> . comparisson_equal
    (53) sentence -> . comparisson_dif
    (54) sentence -> . comparisson_meqequal
    (55) sentence -> . comparisson_maqequal
    (56) sentence -> . isTrue
    (57) sentence -> . signal
    (58) sentence -> . viewsignal
    (59) sentence -> . cut
    (60) sentence -> . recut
    (61) sentence -> . case
    (62) sentence -> . while
    (63) sentence -> . empty
    (73) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (76) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (77) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (78) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (79) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (80) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (93) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (97) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (98) comparisson_maq -> . ID MAQ INTEGER
    (99) comparisson_meq -> . ID MEQ INTEGER
    (100) comparisson_equal -> . ID EQUAL INTEGER
    (101) comparisson_dif -> . ID DIFFERENT INTEGER
    (102) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (103) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (104) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (106) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (107) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (117) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (118) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (119) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (109) case -> . CASE expression recursive_conditions SEMICOLON
    (108) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (120) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RPARENT         shift and go to state 200
    NEW             shift and go to state 80
    VALUES          shift and go to state 45
    CALL            shift and go to state 46
    PRINTVALUES     shift and go to state 47
    ALTER           shift and go to state 48
    ALTERB          shift and go to state 49
    ID              shift and go to state 44
    ISTRUE          shift and go to state 50
    SIGNAL          shift and go to state 51
    VIEWSIGNAL      shift and go to state 52
    CUT             shift and go to state 53
    RECUT           shift and go to state 54
    CASE            shift and go to state 55
    WHILE           shift and go to state 56

  ! RPARENT         [ reduce using rule 120 (empty -> .) ]
  ! NEW             [ reduce using rule 120 (empty -> .) ]
  ! VALUES          [ reduce using rule 120 (empty -> .) ]
  ! CALL            [ reduce using rule 120 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 120 (empty -> .) ]
  ! ALTER           [ reduce using rule 120 (empty -> .) ]
  ! ALTERB          [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 120 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 120 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 120 (empty -> .) ]
  ! CUT             [ reduce using rule 120 (empty -> .) ]
  ! RECUT           [ reduce using rule 120 (empty -> .) ]
  ! CASE            [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]

    sentence                       shift and go to state 106
    local_variable                 shift and go to state 60
    values                         shift and go to state 61
    call                           shift and go to state 62
    print_values                   shift and go to state 63
    alter                          shift and go to state 64
    alterB                         shift and go to state 65
    comparisson_maq                shift and go to state 66
    comparisson_meq                shift and go to state 67
    comparisson_equal              shift and go to state 68
    comparisson_dif                shift and go to state 69
    comparisson_meqequal           shift and go to state 70
    comparisson_maqequal           shift and go to state 71
    isTrue                         shift and go to state 72
    signal                         shift and go to state 73
    viewsignal                     shift and go to state 74
    cut                            shift and go to state 75
    recut                          shift and go to state 76
    case                           shift and go to state 77
    while                          shift and go to state 78
    empty                          shift and go to state 79

state 161

    (39) master_var -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (40) master_var -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON
    (41) master_var -> NEW ID COMA LPARENT TYPE COMA . STRING RPARENT SEMICOLON

    INTEGER         shift and go to state 201
    BOOL            shift and go to state 202
    STRING          shift and go to state 203


state 162

    (73) local_variable -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> NEW ID COMA LPARENT . TYPE COMA STRING RPARENT SEMICOLON

    TYPE            shift and go to state 204


state 163

    (103) comparisson_maqequal -> ID . MAQEQUAL INTEGER
    (102) comparisson_meqequal -> ID . MEQEQUAL INTEGER
    (101) comparisson_dif -> ID . DIFFERENT INTEGER
    (100) comparisson_equal -> ID . EQUAL INTEGER
    (99) comparisson_meq -> ID . MEQ INTEGER
    (98) comparisson_maq -> ID . MAQ INTEGER

    MAQEQUAL        shift and go to state 90
    MEQEQUAL        shift and go to state 89
    DIFFERENT       shift and go to state 88
    EQUAL           shift and go to state 87
    MEQ             shift and go to state 86
    MAQ             shift and go to state 85


state 164

    (76) values -> VALUES LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 205


state 165

    (77) values -> VALUES LPARENT ID COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 206


state 166

    (78) values -> VALUES LPARENT ID COMA return_statement . RPARENT SEMICOLON

    RPARENT         shift and go to state 207


state 167

    (64) return_statement -> isTrue .

    RPARENT         reduce using rule 64 (return_statement -> isTrue .)


state 168

    (65) return_statement -> comparisson_maqequal .

    RPARENT         reduce using rule 65 (return_statement -> comparisson_maqequal .)


state 169

    (66) return_statement -> comparisson_meqequal .

    RPARENT         reduce using rule 66 (return_statement -> comparisson_meqequal .)


state 170

    (67) return_statement -> comparisson_dif .

    RPARENT         reduce using rule 67 (return_statement -> comparisson_dif .)


state 171

    (68) return_statement -> comparisson_equal .

    RPARENT         reduce using rule 68 (return_statement -> comparisson_equal .)


state 172

    (69) return_statement -> comparisson_meq .

    RPARENT         reduce using rule 69 (return_statement -> comparisson_meq .)


state 173

    (70) return_statement -> comparisson_maq .

    RPARENT         reduce using rule 70 (return_statement -> comparisson_maq .)


state 174

    (71) return_statement -> alterB .

    RPARENT         reduce using rule 71 (return_statement -> alterB .)


state 175

    (72) return_statement -> alter .

    RPARENT         reduce using rule 72 (return_statement -> alter .)


state 176

    (79) call -> CALL LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CUT             reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 79 (call -> CALL LPARENT ID RPARENT SEMICOLON .)


state 177

    (80) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .

    RPARENT         reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VALUES          reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CALL            reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTER           reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTERB          reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ID              reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CUT             reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    RECUT           reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CASE            reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    WHILE           reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    LPARENT         reduce using rule 80 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)


state 178

    (87) printable_sentences -> printable_sentences COMA printable_sentence_var .

    RPARENT         reduce using rule 87 (printable_sentences -> printable_sentences COMA printable_sentence_var .)
    COMA            reduce using rule 87 (printable_sentences -> printable_sentences COMA printable_sentence_var .)


state 179

    (88) printable_sentences -> printable_sentences COMA printable_sentence_string .

    RPARENT         reduce using rule 88 (printable_sentences -> printable_sentences COMA printable_sentence_string .)
    COMA            reduce using rule 88 (printable_sentences -> printable_sentences COMA printable_sentence_string .)


state 180

    (83) printable_sentences -> printable_sentence_var COMA printable_sentence_var .

    RPARENT         reduce using rule 83 (printable_sentences -> printable_sentence_var COMA printable_sentence_var .)
    COMA            reduce using rule 83 (printable_sentences -> printable_sentence_var COMA printable_sentence_var .)


state 181

    (85) printable_sentences -> printable_sentence_var COMA printable_sentence_string .

    RPARENT         reduce using rule 85 (printable_sentences -> printable_sentence_var COMA printable_sentence_string .)
    COMA            reduce using rule 85 (printable_sentences -> printable_sentence_var COMA printable_sentence_string .)


state 182

    (84) printable_sentences -> printable_sentence_string COMA printable_sentence_string .

    RPARENT         reduce using rule 84 (printable_sentences -> printable_sentence_string COMA printable_sentence_string .)
    COMA            reduce using rule 84 (printable_sentences -> printable_sentence_string COMA printable_sentence_string .)


state 183

    (86) printable_sentences -> printable_sentence_string COMA printable_sentence_var .

    RPARENT         reduce using rule 86 (printable_sentences -> printable_sentence_string COMA printable_sentence_var .)
    COMA            reduce using rule 86 (printable_sentences -> printable_sentence_string COMA printable_sentence_var .)


state 184

    (89) printable_sentences -> COMA printable_sentences COMA . printable_sentence_var
    (90) printable_sentences -> COMA printable_sentences COMA . printable_sentence_string
    (87) printable_sentences -> printable_sentences COMA . printable_sentence_var
    (88) printable_sentences -> printable_sentences COMA . printable_sentence_string
    (91) printable_sentence_var -> . ID
    (92) printable_sentence_string -> . STRING

    ID              shift and go to state 122
    STRING          shift and go to state 123

    printable_sentence_var         shift and go to state 208
    printable_sentence_string      shift and go to state 209

state 185

    (93) alter -> ALTER LPARENT ID COMA ADD . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 210


state 186

    (94) alter -> ALTER LPARENT ID COMA SUB . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 211


state 187

    (95) alter -> ALTER LPARENT ID COMA MUL . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 212


state 188

    (96) alter -> ALTER LPARENT ID COMA DIV . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 213


state 189

    (97) alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CUT             reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 97 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)


state 190

    (104) isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CUT             reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 104 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)


state 191

    (105) signal -> SIGNAL LPARENT INTEGER COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 214


state 192

    (106) signal -> SIGNAL LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 215


state 193

    (107) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 107 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)


state 194

    (118) cut -> CUT LPARENT ID COMA ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 216


state 195

    (117) cut -> CUT LPARENT ID COMA STRING . RPARENT SEMICOLON

    RPARENT         shift and go to state 217


state 196

    (119) recut -> RECUT LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    CUT             reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 119 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)


state 197

    (113) recursive_condition -> condition LPARENT sentences . RPARENT
    (43) sentences -> sentences . sentence
    (44) sentence -> . local_variable
    (45) sentence -> . values
    (46) sentence -> . call
    (47) sentence -> . print_values
    (48) sentence -> . alter
    (49) sentence -> . alterB
    (50) sentence -> . comparisson_maq
    (51) sentence -> . comparisson_meq
    (52) sentence -> . comparisson_equal
    (53) sentence -> . comparisson_dif
    (54) sentence -> . comparisson_meqequal
    (55) sentence -> . comparisson_maqequal
    (56) sentence -> . isTrue
    (57) sentence -> . signal
    (58) sentence -> . viewsignal
    (59) sentence -> . cut
    (60) sentence -> . recut
    (61) sentence -> . case
    (62) sentence -> . while
    (63) sentence -> . empty
    (73) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (76) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (77) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (78) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (79) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (80) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (93) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (94) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (95) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (96) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (97) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (98) comparisson_maq -> . ID MAQ INTEGER
    (99) comparisson_meq -> . ID MEQ INTEGER
    (100) comparisson_equal -> . ID EQUAL INTEGER
    (101) comparisson_dif -> . ID DIFFERENT INTEGER
    (102) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (103) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (104) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (106) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (107) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (117) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (118) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (119) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (109) case -> . CASE expression recursive_conditions SEMICOLON
    (108) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (120) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RPARENT         shift and go to state 218
    NEW             shift and go to state 80
    VALUES          shift and go to state 45
    CALL            shift and go to state 46
    PRINTVALUES     shift and go to state 47
    ALTER           shift and go to state 48
    ALTERB          shift and go to state 49
    ID              shift and go to state 44
    ISTRUE          shift and go to state 50
    SIGNAL          shift and go to state 51
    VIEWSIGNAL      shift and go to state 52
    CUT             shift and go to state 53
    RECUT           shift and go to state 54
    CASE            shift and go to state 55
    WHILE           shift and go to state 56

  ! RPARENT         [ reduce using rule 120 (empty -> .) ]
  ! NEW             [ reduce using rule 120 (empty -> .) ]
  ! VALUES          [ reduce using rule 120 (empty -> .) ]
  ! CALL            [ reduce using rule 120 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 120 (empty -> .) ]
  ! ALTER           [ reduce using rule 120 (empty -> .) ]
  ! ALTERB          [ reduce using rule 120 (empty -> .) ]
  ! ID              [ reduce using rule 120 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 120 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 120 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 120 (empty -> .) ]
  ! CUT             [ reduce using rule 120 (empty -> .) ]
  ! RECUT           [ reduce using rule 120 (empty -> .) ]
  ! CASE            [ reduce using rule 120 (empty -> .) ]
  ! WHILE           [ reduce using rule 120 (empty -> .) ]

    sentence                       shift and go to state 106
    local_variable                 shift and go to state 60
    values                         shift and go to state 61
    call                           shift and go to state 62
    print_values                   shift and go to state 63
    alter                          shift and go to state 64
    alterB                         shift and go to state 65
    comparisson_maq                shift and go to state 66
    comparisson_meq                shift and go to state 67
    comparisson_equal              shift and go to state 68
    comparisson_dif                shift and go to state 69
    comparisson_meqequal           shift and go to state 70
    comparisson_maqequal           shift and go to state 71
    isTrue                         shift and go to state 72
    signal                         shift and go to state 73
    viewsignal                     shift and go to state 74
    cut                            shift and go to state 75
    recut                          shift and go to state 76
    case                           shift and go to state 77
    while                          shift and go to state 78
    empty                          shift and go to state 79

state 198

    (115) condition -> WHEN INTEGER THEN .

    LPARENT         reduce using rule 115 (condition -> WHEN INTEGER THEN .)


state 199

    (116) condition -> WHEN STRING THEN .

    LPARENT         reduce using rule 116 (condition -> WHEN STRING THEN .)


state 200

    (108) while -> WHILE sentences LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 219


state 201

    (39) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 220


state 202

    (40) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 221


state 203

    (41) master_var -> NEW ID COMA LPARENT TYPE COMA STRING . RPARENT SEMICOLON

    RPARENT         shift and go to state 222


state 204

    (73) local_variable -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (74) local_variable -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON
    (75) local_variable -> NEW ID COMA LPARENT TYPE . COMA STRING RPARENT SEMICOLON

    COMA            shift and go to state 223


state 205

    (76) values -> VALUES LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 224


state 206

    (77) values -> VALUES LPARENT ID COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 225


state 207

    (78) values -> VALUES LPARENT ID COMA return_statement RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 226


state 208

    (89) printable_sentences -> COMA printable_sentences COMA printable_sentence_var .
    (87) printable_sentences -> printable_sentences COMA printable_sentence_var .

  ! reduce/reduce conflict for COMA resolved using rule 87 (printable_sentences -> printable_sentences COMA printable_sentence_var .)
    RPARENT         reduce using rule 89 (printable_sentences -> COMA printable_sentences COMA printable_sentence_var .)
    COMA            reduce using rule 87 (printable_sentences -> printable_sentences COMA printable_sentence_var .)

  ! COMA            [ reduce using rule 89 (printable_sentences -> COMA printable_sentences COMA printable_sentence_var .) ]


state 209

    (90) printable_sentences -> COMA printable_sentences COMA printable_sentence_string .
    (88) printable_sentences -> printable_sentences COMA printable_sentence_string .

  ! reduce/reduce conflict for COMA resolved using rule 88 (printable_sentences -> printable_sentences COMA printable_sentence_string .)
    RPARENT         reduce using rule 90 (printable_sentences -> COMA printable_sentences COMA printable_sentence_string .)
    COMA            reduce using rule 88 (printable_sentences -> printable_sentences COMA printable_sentence_string .)

  ! COMA            [ reduce using rule 90 (printable_sentences -> COMA printable_sentences COMA printable_sentence_string .) ]


state 210

    (93) alter -> ALTER LPARENT ID COMA ADD COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 227


state 211

    (94) alter -> ALTER LPARENT ID COMA SUB COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 228


state 212

    (95) alter -> ALTER LPARENT ID COMA MUL COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 229


state 213

    (96) alter -> ALTER LPARENT ID COMA DIV COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 230


state 214

    (105) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 231


state 215

    (106) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 232


state 216

    (118) cut -> CUT LPARENT ID COMA ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 233


state 217

    (117) cut -> CUT LPARENT ID COMA STRING RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 234


state 218

    (113) recursive_condition -> condition LPARENT sentences RPARENT .

    SEMICOLON       reduce using rule 113 (recursive_condition -> condition LPARENT sentences RPARENT .)
    WHEN            reduce using rule 113 (recursive_condition -> condition LPARENT sentences RPARENT .)


state 219

    (108) while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .

    RPARENT         reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    VALUES          reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    CALL            reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    ALTER           reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    ALTERB          reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    ID              reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    CUT             reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    RECUT           reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    CASE            reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    WHILE           reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    LPARENT         reduce using rule 108 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)


state 220

    (39) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 235


state 221

    (40) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 236


state 222

    (41) master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 237


state 223

    (73) local_variable -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (74) local_variable -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON
    (75) local_variable -> NEW ID COMA LPARENT TYPE COMA . STRING RPARENT SEMICOLON

    INTEGER         shift and go to state 238
    BOOL            shift and go to state 239
    STRING          shift and go to state 240


state 224

    (76) values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 76 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 225

    (77) values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CUT             reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    RECUT           reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    WHILE           reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    LPARENT         reduce using rule 77 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)


state 226

    (78) values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .

    RPARENT         reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    NEW             reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    VALUES          reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    CALL            reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    ALTER           reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    ALTERB          reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    ID              reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    CUT             reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    RECUT           reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    CASE            reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    WHILE           reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    LPARENT         reduce using rule 78 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)


state 227

    (93) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 241


state 228

    (94) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 242


state 229

    (95) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 243


state 230

    (96) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 244


state 231

    (105) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 105 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)


state 232

    (106) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 106 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 233

    (118) cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    NEW             reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    CALL            reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    ID              reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    CUT             reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    CASE            reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 118 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)


state 234

    (117) cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .

    RPARENT         reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    NEW             reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    VALUES          reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    CALL            reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    ALTER           reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    ALTERB          reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    ID              reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    CUT             reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    RECUT           reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    CASE            reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    WHILE           reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    LPARENT         reduce using rule 117 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)


state 235

    (39) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    MASTER          reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PROC            reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    $end            reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    RPARENT         reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 39 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 236

    (40) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    MASTER          reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PROC            reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    $end            reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    RPARENT         reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CUT             reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    RECUT           reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    WHILE           reduce using rule 40 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)


state 237

    (41) master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .

    MASTER          reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    NEW             reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    PROC            reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    $end            reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    RPARENT         reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    VALUES          reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CALL            reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ALTER           reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ALTERB          reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ID              reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CUT             reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    RECUT           reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CASE            reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    WHILE           reduce using rule 41 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)


state 238

    (73) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 245


state 239

    (74) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 246


state 240

    (75) local_variable -> NEW ID COMA LPARENT TYPE COMA STRING . RPARENT SEMICOLON

    RPARENT         shift and go to state 247


state 241

    (93) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 248


state 242

    (94) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 249


state 243

    (95) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 250


state 244

    (96) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 251


state 245

    (73) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 252


state 246

    (74) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 253


state 247

    (75) local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 254


state 248

    (93) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 93 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)


state 249

    (94) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 94 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)


state 250

    (95) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 95 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)


state 251

    (96) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 96 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)


state 252

    (73) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 73 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 253

    (74) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CUT             reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    RECUT           reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    WHILE           reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    LPARENT         reduce using rule 74 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)


state 254

    (75) local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .

    RPARENT         reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    NEW             reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    VALUES          reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CALL            reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ALTER           reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ALTERB          reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ID              reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CUT             reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    RECUT           reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CASE            reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    WHILE           reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    LPARENT         reduce using rule 75 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEW in state 14 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 14 resolved as shift
WARNING: shift/reduce conflict for CALL in state 14 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 14 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 14 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 14 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 14 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 14 resolved as shift
WARNING: shift/reduce conflict for CUT in state 14 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 14 resolved as shift
WARNING: shift/reduce conflict for CASE in state 14 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 14 resolved as shift
WARNING: shift/reduce conflict for NEW in state 18 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 18 resolved as shift
WARNING: shift/reduce conflict for CALL in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 18 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 18 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 18 resolved as shift
WARNING: shift/reduce conflict for ID in state 18 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 18 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 18 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 18 resolved as shift
WARNING: shift/reduce conflict for CUT in state 18 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 18 resolved as shift
WARNING: shift/reduce conflict for CASE in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 22 resolved as shift
WARNING: shift/reduce conflict for NEW in state 22 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 22 resolved as shift
WARNING: shift/reduce conflict for CALL in state 22 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 22 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 22 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 22 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 22 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 22 resolved as shift
WARNING: shift/reduce conflict for CUT in state 22 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 22 resolved as shift
WARNING: shift/reduce conflict for CASE in state 22 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 22 resolved as shift
WARNING: shift/reduce conflict for NEW in state 56 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 56 resolved as shift
WARNING: shift/reduce conflict for CALL in state 56 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 56 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 56 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 56 resolved as shift
WARNING: shift/reduce conflict for ID in state 56 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 56 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 56 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 56 resolved as shift
WARNING: shift/reduce conflict for CUT in state 56 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 56 resolved as shift
WARNING: shift/reduce conflict for CASE in state 56 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 56 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 58 resolved as shift
WARNING: shift/reduce conflict for NEW in state 58 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 58 resolved as shift
WARNING: shift/reduce conflict for CALL in state 58 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 58 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 58 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 58 resolved as shift
WARNING: shift/reduce conflict for ID in state 58 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 58 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 58 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 58 resolved as shift
WARNING: shift/reduce conflict for CUT in state 58 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 58 resolved as shift
WARNING: shift/reduce conflict for CASE in state 58 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 58 resolved as shift
WARNING: shift/reduce conflict for LPARENT in state 103 resolved as shift
WARNING: shift/reduce conflict for NEW in state 103 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 103 resolved as shift
WARNING: shift/reduce conflict for CALL in state 103 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 103 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 103 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 103 resolved as shift
WARNING: shift/reduce conflict for ID in state 103 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 103 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 103 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 103 resolved as shift
WARNING: shift/reduce conflict for CUT in state 103 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 103 resolved as shift
WARNING: shift/reduce conflict for CASE in state 103 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 103 resolved as shift
WARNING: shift/reduce conflict for COMA in state 119 resolved as shift
WARNING: shift/reduce conflict for COMA in state 120 resolved as shift
WARNING: shift/reduce conflict for NEW in state 136 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 136 resolved as shift
WARNING: shift/reduce conflict for CALL in state 136 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 136 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 136 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 136 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 136 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 136 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 136 resolved as shift
WARNING: shift/reduce conflict for CUT in state 136 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 136 resolved as shift
WARNING: shift/reduce conflict for CASE in state 136 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 136 resolved as shift
WARNING: shift/reduce conflict for NEW in state 157 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 157 resolved as shift
WARNING: shift/reduce conflict for CALL in state 157 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 157 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 157 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 157 resolved as shift
WARNING: shift/reduce conflict for ID in state 157 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 157 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 157 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 157 resolved as shift
WARNING: shift/reduce conflict for CUT in state 157 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 157 resolved as shift
WARNING: shift/reduce conflict for CASE in state 157 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 157 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 160 resolved as shift
WARNING: shift/reduce conflict for NEW in state 160 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 160 resolved as shift
WARNING: shift/reduce conflict for CALL in state 160 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 160 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 160 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 160 resolved as shift
WARNING: shift/reduce conflict for ID in state 160 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 160 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 160 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 160 resolved as shift
WARNING: shift/reduce conflict for CUT in state 160 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 160 resolved as shift
WARNING: shift/reduce conflict for CASE in state 160 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 160 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 197 resolved as shift
WARNING: shift/reduce conflict for NEW in state 197 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 197 resolved as shift
WARNING: shift/reduce conflict for CALL in state 197 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 197 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 197 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 197 resolved as shift
WARNING: shift/reduce conflict for ID in state 197 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 197 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 197 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 197 resolved as shift
WARNING: shift/reduce conflict for CUT in state 197 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 197 resolved as shift
WARNING: shift/reduce conflict for CASE in state 197 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 197 resolved as shift
WARNING: reduce/reduce conflict in state 208 resolved using rule (printable_sentences -> printable_sentences COMA printable_sentence_var)
WARNING: rejected rule (printable_sentences -> COMA printable_sentences COMA printable_sentence_var) in state 208
WARNING: reduce/reduce conflict in state 209 resolved using rule (printable_sentences -> printable_sentences COMA printable_sentence_string)
WARNING: rejected rule (printable_sentences -> COMA printable_sentences COMA printable_sentence_string) in state 209
