Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROBA
    BREAK
    COMMENT
    ELSE
    NEWLINE
    REPEAT
    UNTIL

Grammar

Rule 0     S' -> start
Rule 1     start -> master procedures
Rule 2     start -> master
Rule 3     declare_procedure -> PROC ID
Rule 4     procedures -> procedure
Rule 5     procedures -> procedures procedure
Rule 6     procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON
Rule 7     master -> MASTER LPARENT master_sentences RPARENT SEMICOLON
Rule 8     master_sentences -> master_sentence
Rule 9     master_sentences -> master_sentences master_sentence
Rule 10    master_sentence -> master_var
Rule 11    master_sentence -> values
Rule 12    master_sentence -> case
Rule 13    master_sentence -> call
Rule 14    master_sentence -> print_values
Rule 15    master_sentence -> alter
Rule 16    master_sentence -> alterB
Rule 17    master_sentence -> signal
Rule 18    master_sentence -> viewsignal
Rule 19    master_sentence -> sentence7
Rule 20    master_sentence -> sentence8
Rule 21    master_sentence -> sentence9
Rule 22    master_sentence -> sentence10
Rule 23    master_sentence -> sentence11
Rule 24    master_sentence -> sentence12
Rule 25    master_sentence -> isTrue
Rule 26    master_sentence -> while
Rule 27    master_sentence -> cut
Rule 28    master_sentence -> recut
Rule 29    master_sentence -> empty
Rule 30    master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 31    master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 32    master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
Rule 33    sentences -> sentence
Rule 34    sentences -> sentences sentence
Rule 35    sentence -> local_variable
Rule 36    sentence -> values
Rule 37    sentence -> case
Rule 38    sentence -> call
Rule 39    sentence -> print_values
Rule 40    sentence -> alter
Rule 41    sentence -> alterB
Rule 42    sentence -> signal
Rule 43    sentence -> viewsignal
Rule 44    sentence -> sentence7
Rule 45    sentence -> sentence8
Rule 46    sentence -> sentence9
Rule 47    sentence -> sentence10
Rule 48    sentence -> sentence11
Rule 49    sentence -> sentence12
Rule 50    sentence -> isTrue
Rule 51    sentence -> while
Rule 52    sentence -> cut
Rule 53    sentence -> recut
Rule 54    sentence -> empty
Rule 55    local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 56    local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 57    values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 58    values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
Rule 59    call -> CALL LPARENT ID RPARENT SEMICOLON
Rule 60    print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
Rule 61    printable_sentences -> printable_sentence_var
Rule 62    printable_sentences -> printable_sentence_string
Rule 63    printable_sentences -> printable_sentence_var PLUS printable_sentence_var
Rule 64    printable_sentences -> printable_sentence_string PLUS printable_sentence_string
Rule 65    printable_sentences -> printable_sentence_var PLUS printable_sentence_string
Rule 66    printable_sentences -> printable_sentence_string PLUS printable_sentence_var
Rule 67    printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var
Rule 68    printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string
Rule 69    printable_sentence_var -> ID
Rule 70    printable_sentence_string -> STRING
Rule 71    alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
Rule 72    alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
Rule 73    alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
Rule 74    alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
Rule 75    alterB -> ALTERB LPARENT ID RPARENT SEMICOLON
Rule 76    sentence7 -> ID MAQ INTEGER
Rule 77    sentence8 -> ID MEQ INTEGER
Rule 78    sentence9 -> ID EQUAL INTEGER
Rule 79    sentence10 -> ID DIFFERENT INTEGER
Rule 80    sentence11 -> ID MEQEQUAL INTEGER
Rule 81    sentence12 -> ID MAQEQUAL INTEGER
Rule 82    isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON
Rule 83    while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON
Rule 84    case -> CASE expression recursive_conditions SEMICOLON
Rule 85    else_condition -> LPARENT sentences RPARENT
Rule 86    recursive_conditions -> recursive_condition
Rule 87    recursive_conditions -> recursive_conditions recursive_condition
Rule 88    recursive_condition -> condition LPARENT sentences RPARENT
Rule 89    expression -> ID
Rule 90    condition -> WHEN INTEGER THEN
Rule 91    condition -> WHEN STRING THEN
Rule 92    signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
Rule 93    signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 94    viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
Rule 95    cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON
Rule 96    cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON
Rule 97    recut -> RECUT LPARENT ID RPARENT SEMICOLON
Rule 98    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 71
ALTER                : 71 72 73 74
ALTERB               : 75
ARROBA               : 
BOOL                 : 31 56 58
BREAK                : 
CALL                 : 59
CASE                 : 84
COMA                 : 30 30 31 31 32 32 55 55 56 56 57 58 71 71 72 72 73 73 74 74 92 93 95 96
COMMENT              : 
CUT                  : 95 96
DIFFERENT            : 79
DIV                  : 74
ELSE                 : 
EQUAL                : 78
ID                   : 3 30 31 32 55 56 57 58 59 69 71 72 73 74 75 76 77 78 79 80 81 82 89 93 95 96 96 97
INTEGER              : 30 55 57 71 72 73 74 76 77 78 79 80 81 90 92 92 93 94
ISTRUE               : 82
LPARENT              : 6 7 30 31 32 55 56 57 58 59 60 71 72 73 74 75 82 83 85 88 92 93 94 95 96 97
MAQ                  : 76
MAQEQUAL             : 81
MASTER               : 7
MEQ                  : 77
MEQEQUAL             : 80
MUL                  : 73
NEW                  : 30 31 32 55 56
NEWLINE              : 
PLUS                 : 63 64 65 66 67 67 68 68
PRINTVALUES          : 60
PROC                 : 3
RECUT                : 97
REPEAT               : 
RPARENT              : 6 7 30 31 32 55 56 57 58 59 60 71 72 73 74 75 82 83 85 88 92 93 94 95 96 97
SEMICOLON            : 6 7 30 31 32 55 56 57 58 59 60 71 72 73 74 75 82 83 84 92 93 94 95 96 97
SIGNAL               : 92 93
STRING               : 32 70 91 95
SUB                  : 72
THEN                 : 90 91
TYPE                 : 30 31 32 55 56
UNTIL                : 
VALUES               : 57 58
VIEWSIGNAL           : 94
WHEN                 : 90 91
WHILE                : 83
error                : 

Nonterminals, with rules where they appear

alter                : 15 40
alterB               : 16 41
call                 : 13 38
case                 : 12 37
condition            : 88
cut                  : 27 52
declare_procedure    : 6
else_condition       : 
empty                : 29 54
expression           : 84
isTrue               : 25 50
local_variable       : 35
master               : 1 2
master_sentence      : 8 9
master_sentences     : 7 9
master_var           : 10
print_values         : 14 39
printable_sentence_string : 62 64 64 65 66 68
printable_sentence_var : 61 63 63 65 66 67
printable_sentences  : 60 67 68
procedure            : 4 5
procedures           : 1 5
recursive_condition  : 86 87
recursive_conditions : 84 87
recut                : 28 53
sentence             : 33 34
sentence10           : 22 47
sentence11           : 23 48
sentence12           : 24 49
sentence7            : 19 44
sentence8            : 20 45
sentence9            : 21 46
sentences            : 6 34 83 83 85 88
signal               : 17 42
start                : 0
values               : 11 36
viewsignal           : 18 43
while                : 26 51

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . master procedures
    (2) start -> . master
    (7) master -> . MASTER LPARENT master_sentences RPARENT SEMICOLON

    MASTER          shift and go to state 3

    start                          shift and go to state 1
    master                         shift and go to state 2

state 1

    (0) S' -> start .



state 2

    (1) start -> master . procedures
    (2) start -> master .
    (4) procedures -> . procedure
    (5) procedures -> . procedures procedure
    (6) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (3) declare_procedure -> . PROC ID

    $end            reduce using rule 2 (start -> master .)
    PROC            shift and go to state 7

    procedures                     shift and go to state 4
    procedure                      shift and go to state 5
    declare_procedure              shift and go to state 6

state 3

    (7) master -> MASTER . LPARENT master_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 8


state 4

    (1) start -> master procedures .
    (5) procedures -> procedures . procedure
    (6) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (3) declare_procedure -> . PROC ID

    $end            reduce using rule 1 (start -> master procedures .)
    PROC            shift and go to state 7

    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 6

state 5

    (4) procedures -> procedure .

    PROC            reduce using rule 4 (procedures -> procedure .)
    $end            reduce using rule 4 (procedures -> procedure .)


state 6

    (6) procedure -> declare_procedure . LPARENT sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 10


state 7

    (3) declare_procedure -> PROC . ID

    ID              shift and go to state 11


state 8

    (7) master -> MASTER LPARENT . master_sentences RPARENT SEMICOLON
    (8) master_sentences -> . master_sentence
    (9) master_sentences -> . master_sentences master_sentence
    (10) master_sentence -> . master_var
    (11) master_sentence -> . values
    (12) master_sentence -> . case
    (13) master_sentence -> . call
    (14) master_sentence -> . print_values
    (15) master_sentence -> . alter
    (16) master_sentence -> . alterB
    (17) master_sentence -> . signal
    (18) master_sentence -> . viewsignal
    (19) master_sentence -> . sentence7
    (20) master_sentence -> . sentence8
    (21) master_sentence -> . sentence9
    (22) master_sentence -> . sentence10
    (23) master_sentence -> . sentence11
    (24) master_sentence -> . sentence12
    (25) master_sentence -> . isTrue
    (26) master_sentence -> . while
    (27) master_sentence -> . cut
    (28) master_sentence -> . recut
    (29) master_sentence -> . empty
    (30) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (32) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (58) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (59) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (60) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (75) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (93) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (94) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (76) sentence7 -> . ID MAQ INTEGER
    (77) sentence8 -> . ID MEQ INTEGER
    (78) sentence9 -> . ID EQUAL INTEGER
    (79) sentence10 -> . ID DIFFERENT INTEGER
    (80) sentence11 -> . ID MEQEQUAL INTEGER
    (81) sentence12 -> . ID MAQEQUAL INTEGER
    (82) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (83) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (95) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (96) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (97) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (98) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
    NEW             shift and go to state 34
    VALUES          shift and go to state 36
    CASE            shift and go to state 37
    CALL            shift and go to state 38
    PRINTVALUES     shift and go to state 39
    ALTER           shift and go to state 40
    ALTERB          shift and go to state 41
    SIGNAL          shift and go to state 42
    VIEWSIGNAL      shift and go to state 43
    ID              shift and go to state 35
    ISTRUE          shift and go to state 44
    WHILE           shift and go to state 45
    CUT             shift and go to state 46
    RECUT           shift and go to state 47
    RPARENT         reduce using rule 98 (empty -> .)

  ! NEW             [ reduce using rule 98 (empty -> .) ]
  ! VALUES          [ reduce using rule 98 (empty -> .) ]
  ! CASE            [ reduce using rule 98 (empty -> .) ]
  ! CALL            [ reduce using rule 98 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 98 (empty -> .) ]
  ! ALTER           [ reduce using rule 98 (empty -> .) ]
  ! ALTERB          [ reduce using rule 98 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 98 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 98 (empty -> .) ]
  ! ID              [ reduce using rule 98 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 98 (empty -> .) ]
  ! WHILE           [ reduce using rule 98 (empty -> .) ]
  ! CUT             [ reduce using rule 98 (empty -> .) ]
  ! RECUT           [ reduce using rule 98 (empty -> .) ]

    master_sentences               shift and go to state 12
    master_sentence                shift and go to state 13
    master_var                     shift and go to state 14
    values                         shift and go to state 15
    case                           shift and go to state 16
    call                           shift and go to state 17
    print_values                   shift and go to state 18
    alter                          shift and go to state 19
    alterB                         shift and go to state 20
    signal                         shift and go to state 21
    viewsignal                     shift and go to state 22
    sentence7                      shift and go to state 23
    sentence8                      shift and go to state 24
    sentence9                      shift and go to state 25
    sentence10                     shift and go to state 26
    sentence11                     shift and go to state 27
    sentence12                     shift and go to state 28
    isTrue                         shift and go to state 29
    while                          shift and go to state 30
    cut                            shift and go to state 31
    recut                          shift and go to state 32
    empty                          shift and go to state 33

state 9

    (5) procedures -> procedures procedure .

    PROC            reduce using rule 5 (procedures -> procedures procedure .)
    $end            reduce using rule 5 (procedures -> procedures procedure .)


state 10

    (6) procedure -> declare_procedure LPARENT . sentences RPARENT SEMICOLON
    (33) sentences -> . sentence
    (34) sentences -> . sentences sentence
    (35) sentence -> . local_variable
    (36) sentence -> . values
    (37) sentence -> . case
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . while
    (52) sentence -> . cut
    (53) sentence -> . recut
    (54) sentence -> . empty
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (58) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (59) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (60) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (75) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (93) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (94) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (76) sentence7 -> . ID MAQ INTEGER
    (77) sentence8 -> . ID MEQ INTEGER
    (78) sentence9 -> . ID EQUAL INTEGER
    (79) sentence10 -> . ID DIFFERENT INTEGER
    (80) sentence11 -> . ID MEQEQUAL INTEGER
    (81) sentence12 -> . ID MAQEQUAL INTEGER
    (82) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (83) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (95) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (96) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (97) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (98) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
    NEW             shift and go to state 70
    VALUES          shift and go to state 36
    CASE            shift and go to state 37
    CALL            shift and go to state 38
    PRINTVALUES     shift and go to state 39
    ALTER           shift and go to state 40
    ALTERB          shift and go to state 41
    SIGNAL          shift and go to state 42
    VIEWSIGNAL      shift and go to state 43
    ID              shift and go to state 35
    ISTRUE          shift and go to state 44
    WHILE           shift and go to state 45
    CUT             shift and go to state 46
    RECUT           shift and go to state 47
    RPARENT         reduce using rule 98 (empty -> .)

  ! NEW             [ reduce using rule 98 (empty -> .) ]
  ! VALUES          [ reduce using rule 98 (empty -> .) ]
  ! CASE            [ reduce using rule 98 (empty -> .) ]
  ! CALL            [ reduce using rule 98 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 98 (empty -> .) ]
  ! ALTER           [ reduce using rule 98 (empty -> .) ]
  ! ALTERB          [ reduce using rule 98 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 98 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 98 (empty -> .) ]
  ! ID              [ reduce using rule 98 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 98 (empty -> .) ]
  ! WHILE           [ reduce using rule 98 (empty -> .) ]
  ! CUT             [ reduce using rule 98 (empty -> .) ]
  ! RECUT           [ reduce using rule 98 (empty -> .) ]

    sentences                      shift and go to state 48
    sentence                       shift and go to state 49
    local_variable                 shift and go to state 50
    values                         shift and go to state 51
    case                           shift and go to state 52
    call                           shift and go to state 53
    print_values                   shift and go to state 54
    alter                          shift and go to state 55
    alterB                         shift and go to state 56
    signal                         shift and go to state 57
    viewsignal                     shift and go to state 58
    sentence7                      shift and go to state 59
    sentence8                      shift and go to state 60
    sentence9                      shift and go to state 61
    sentence10                     shift and go to state 62
    sentence11                     shift and go to state 63
    sentence12                     shift and go to state 64
    isTrue                         shift and go to state 65
    while                          shift and go to state 66
    cut                            shift and go to state 67
    recut                          shift and go to state 68
    empty                          shift and go to state 69

state 11

    (3) declare_procedure -> PROC ID .

    LPARENT         reduce using rule 3 (declare_procedure -> PROC ID .)


state 12

    (7) master -> MASTER LPARENT master_sentences . RPARENT SEMICOLON
    (9) master_sentences -> master_sentences . master_sentence
    (10) master_sentence -> . master_var
    (11) master_sentence -> . values
    (12) master_sentence -> . case
    (13) master_sentence -> . call
    (14) master_sentence -> . print_values
    (15) master_sentence -> . alter
    (16) master_sentence -> . alterB
    (17) master_sentence -> . signal
    (18) master_sentence -> . viewsignal
    (19) master_sentence -> . sentence7
    (20) master_sentence -> . sentence8
    (21) master_sentence -> . sentence9
    (22) master_sentence -> . sentence10
    (23) master_sentence -> . sentence11
    (24) master_sentence -> . sentence12
    (25) master_sentence -> . isTrue
    (26) master_sentence -> . while
    (27) master_sentence -> . cut
    (28) master_sentence -> . recut
    (29) master_sentence -> . empty
    (30) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (32) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (58) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (59) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (60) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (75) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (93) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (94) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (76) sentence7 -> . ID MAQ INTEGER
    (77) sentence8 -> . ID MEQ INTEGER
    (78) sentence9 -> . ID EQUAL INTEGER
    (79) sentence10 -> . ID DIFFERENT INTEGER
    (80) sentence11 -> . ID MEQEQUAL INTEGER
    (81) sentence12 -> . ID MAQEQUAL INTEGER
    (82) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (83) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (95) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (96) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (97) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (98) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
    RPARENT         shift and go to state 71
    NEW             shift and go to state 34
    VALUES          shift and go to state 36
    CASE            shift and go to state 37
    CALL            shift and go to state 38
    PRINTVALUES     shift and go to state 39
    ALTER           shift and go to state 40
    ALTERB          shift and go to state 41
    SIGNAL          shift and go to state 42
    VIEWSIGNAL      shift and go to state 43
    ID              shift and go to state 35
    ISTRUE          shift and go to state 44
    WHILE           shift and go to state 45
    CUT             shift and go to state 46
    RECUT           shift and go to state 47

  ! RPARENT         [ reduce using rule 98 (empty -> .) ]
  ! NEW             [ reduce using rule 98 (empty -> .) ]
  ! VALUES          [ reduce using rule 98 (empty -> .) ]
  ! CASE            [ reduce using rule 98 (empty -> .) ]
  ! CALL            [ reduce using rule 98 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 98 (empty -> .) ]
  ! ALTER           [ reduce using rule 98 (empty -> .) ]
  ! ALTERB          [ reduce using rule 98 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 98 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 98 (empty -> .) ]
  ! ID              [ reduce using rule 98 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 98 (empty -> .) ]
  ! WHILE           [ reduce using rule 98 (empty -> .) ]
  ! CUT             [ reduce using rule 98 (empty -> .) ]
  ! RECUT           [ reduce using rule 98 (empty -> .) ]

    master_sentence                shift and go to state 72
    master_var                     shift and go to state 14
    values                         shift and go to state 15
    case                           shift and go to state 16
    call                           shift and go to state 17
    print_values                   shift and go to state 18
    alter                          shift and go to state 19
    alterB                         shift and go to state 20
    signal                         shift and go to state 21
    viewsignal                     shift and go to state 22
    sentence7                      shift and go to state 23
    sentence8                      shift and go to state 24
    sentence9                      shift and go to state 25
    sentence10                     shift and go to state 26
    sentence11                     shift and go to state 27
    sentence12                     shift and go to state 28
    isTrue                         shift and go to state 29
    while                          shift and go to state 30
    cut                            shift and go to state 31
    recut                          shift and go to state 32
    empty                          shift and go to state 33

state 13

    (8) master_sentences -> master_sentence .

    RPARENT         reduce using rule 8 (master_sentences -> master_sentence .)
    NEW             reduce using rule 8 (master_sentences -> master_sentence .)
    VALUES          reduce using rule 8 (master_sentences -> master_sentence .)
    CASE            reduce using rule 8 (master_sentences -> master_sentence .)
    CALL            reduce using rule 8 (master_sentences -> master_sentence .)
    PRINTVALUES     reduce using rule 8 (master_sentences -> master_sentence .)
    ALTER           reduce using rule 8 (master_sentences -> master_sentence .)
    ALTERB          reduce using rule 8 (master_sentences -> master_sentence .)
    SIGNAL          reduce using rule 8 (master_sentences -> master_sentence .)
    VIEWSIGNAL      reduce using rule 8 (master_sentences -> master_sentence .)
    ID              reduce using rule 8 (master_sentences -> master_sentence .)
    ISTRUE          reduce using rule 8 (master_sentences -> master_sentence .)
    WHILE           reduce using rule 8 (master_sentences -> master_sentence .)
    CUT             reduce using rule 8 (master_sentences -> master_sentence .)
    RECUT           reduce using rule 8 (master_sentences -> master_sentence .)


state 14

    (10) master_sentence -> master_var .

    RPARENT         reduce using rule 10 (master_sentence -> master_var .)
    NEW             reduce using rule 10 (master_sentence -> master_var .)
    VALUES          reduce using rule 10 (master_sentence -> master_var .)
    CASE            reduce using rule 10 (master_sentence -> master_var .)
    CALL            reduce using rule 10 (master_sentence -> master_var .)
    PRINTVALUES     reduce using rule 10 (master_sentence -> master_var .)
    ALTER           reduce using rule 10 (master_sentence -> master_var .)
    ALTERB          reduce using rule 10 (master_sentence -> master_var .)
    SIGNAL          reduce using rule 10 (master_sentence -> master_var .)
    VIEWSIGNAL      reduce using rule 10 (master_sentence -> master_var .)
    ID              reduce using rule 10 (master_sentence -> master_var .)
    ISTRUE          reduce using rule 10 (master_sentence -> master_var .)
    WHILE           reduce using rule 10 (master_sentence -> master_var .)
    CUT             reduce using rule 10 (master_sentence -> master_var .)
    RECUT           reduce using rule 10 (master_sentence -> master_var .)


state 15

    (11) master_sentence -> values .

    RPARENT         reduce using rule 11 (master_sentence -> values .)
    NEW             reduce using rule 11 (master_sentence -> values .)
    VALUES          reduce using rule 11 (master_sentence -> values .)
    CASE            reduce using rule 11 (master_sentence -> values .)
    CALL            reduce using rule 11 (master_sentence -> values .)
    PRINTVALUES     reduce using rule 11 (master_sentence -> values .)
    ALTER           reduce using rule 11 (master_sentence -> values .)
    ALTERB          reduce using rule 11 (master_sentence -> values .)
    SIGNAL          reduce using rule 11 (master_sentence -> values .)
    VIEWSIGNAL      reduce using rule 11 (master_sentence -> values .)
    ID              reduce using rule 11 (master_sentence -> values .)
    ISTRUE          reduce using rule 11 (master_sentence -> values .)
    WHILE           reduce using rule 11 (master_sentence -> values .)
    CUT             reduce using rule 11 (master_sentence -> values .)
    RECUT           reduce using rule 11 (master_sentence -> values .)


state 16

    (12) master_sentence -> case .

    RPARENT         reduce using rule 12 (master_sentence -> case .)
    NEW             reduce using rule 12 (master_sentence -> case .)
    VALUES          reduce using rule 12 (master_sentence -> case .)
    CASE            reduce using rule 12 (master_sentence -> case .)
    CALL            reduce using rule 12 (master_sentence -> case .)
    PRINTVALUES     reduce using rule 12 (master_sentence -> case .)
    ALTER           reduce using rule 12 (master_sentence -> case .)
    ALTERB          reduce using rule 12 (master_sentence -> case .)
    SIGNAL          reduce using rule 12 (master_sentence -> case .)
    VIEWSIGNAL      reduce using rule 12 (master_sentence -> case .)
    ID              reduce using rule 12 (master_sentence -> case .)
    ISTRUE          reduce using rule 12 (master_sentence -> case .)
    WHILE           reduce using rule 12 (master_sentence -> case .)
    CUT             reduce using rule 12 (master_sentence -> case .)
    RECUT           reduce using rule 12 (master_sentence -> case .)


state 17

    (13) master_sentence -> call .

    RPARENT         reduce using rule 13 (master_sentence -> call .)
    NEW             reduce using rule 13 (master_sentence -> call .)
    VALUES          reduce using rule 13 (master_sentence -> call .)
    CASE            reduce using rule 13 (master_sentence -> call .)
    CALL            reduce using rule 13 (master_sentence -> call .)
    PRINTVALUES     reduce using rule 13 (master_sentence -> call .)
    ALTER           reduce using rule 13 (master_sentence -> call .)
    ALTERB          reduce using rule 13 (master_sentence -> call .)
    SIGNAL          reduce using rule 13 (master_sentence -> call .)
    VIEWSIGNAL      reduce using rule 13 (master_sentence -> call .)
    ID              reduce using rule 13 (master_sentence -> call .)
    ISTRUE          reduce using rule 13 (master_sentence -> call .)
    WHILE           reduce using rule 13 (master_sentence -> call .)
    CUT             reduce using rule 13 (master_sentence -> call .)
    RECUT           reduce using rule 13 (master_sentence -> call .)


state 18

    (14) master_sentence -> print_values .

    RPARENT         reduce using rule 14 (master_sentence -> print_values .)
    NEW             reduce using rule 14 (master_sentence -> print_values .)
    VALUES          reduce using rule 14 (master_sentence -> print_values .)
    CASE            reduce using rule 14 (master_sentence -> print_values .)
    CALL            reduce using rule 14 (master_sentence -> print_values .)
    PRINTVALUES     reduce using rule 14 (master_sentence -> print_values .)
    ALTER           reduce using rule 14 (master_sentence -> print_values .)
    ALTERB          reduce using rule 14 (master_sentence -> print_values .)
    SIGNAL          reduce using rule 14 (master_sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 14 (master_sentence -> print_values .)
    ID              reduce using rule 14 (master_sentence -> print_values .)
    ISTRUE          reduce using rule 14 (master_sentence -> print_values .)
    WHILE           reduce using rule 14 (master_sentence -> print_values .)
    CUT             reduce using rule 14 (master_sentence -> print_values .)
    RECUT           reduce using rule 14 (master_sentence -> print_values .)


state 19

    (15) master_sentence -> alter .

    RPARENT         reduce using rule 15 (master_sentence -> alter .)
    NEW             reduce using rule 15 (master_sentence -> alter .)
    VALUES          reduce using rule 15 (master_sentence -> alter .)
    CASE            reduce using rule 15 (master_sentence -> alter .)
    CALL            reduce using rule 15 (master_sentence -> alter .)
    PRINTVALUES     reduce using rule 15 (master_sentence -> alter .)
    ALTER           reduce using rule 15 (master_sentence -> alter .)
    ALTERB          reduce using rule 15 (master_sentence -> alter .)
    SIGNAL          reduce using rule 15 (master_sentence -> alter .)
    VIEWSIGNAL      reduce using rule 15 (master_sentence -> alter .)
    ID              reduce using rule 15 (master_sentence -> alter .)
    ISTRUE          reduce using rule 15 (master_sentence -> alter .)
    WHILE           reduce using rule 15 (master_sentence -> alter .)
    CUT             reduce using rule 15 (master_sentence -> alter .)
    RECUT           reduce using rule 15 (master_sentence -> alter .)


state 20

    (16) master_sentence -> alterB .

    RPARENT         reduce using rule 16 (master_sentence -> alterB .)
    NEW             reduce using rule 16 (master_sentence -> alterB .)
    VALUES          reduce using rule 16 (master_sentence -> alterB .)
    CASE            reduce using rule 16 (master_sentence -> alterB .)
    CALL            reduce using rule 16 (master_sentence -> alterB .)
    PRINTVALUES     reduce using rule 16 (master_sentence -> alterB .)
    ALTER           reduce using rule 16 (master_sentence -> alterB .)
    ALTERB          reduce using rule 16 (master_sentence -> alterB .)
    SIGNAL          reduce using rule 16 (master_sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 16 (master_sentence -> alterB .)
    ID              reduce using rule 16 (master_sentence -> alterB .)
    ISTRUE          reduce using rule 16 (master_sentence -> alterB .)
    WHILE           reduce using rule 16 (master_sentence -> alterB .)
    CUT             reduce using rule 16 (master_sentence -> alterB .)
    RECUT           reduce using rule 16 (master_sentence -> alterB .)


state 21

    (17) master_sentence -> signal .

    RPARENT         reduce using rule 17 (master_sentence -> signal .)
    NEW             reduce using rule 17 (master_sentence -> signal .)
    VALUES          reduce using rule 17 (master_sentence -> signal .)
    CASE            reduce using rule 17 (master_sentence -> signal .)
    CALL            reduce using rule 17 (master_sentence -> signal .)
    PRINTVALUES     reduce using rule 17 (master_sentence -> signal .)
    ALTER           reduce using rule 17 (master_sentence -> signal .)
    ALTERB          reduce using rule 17 (master_sentence -> signal .)
    SIGNAL          reduce using rule 17 (master_sentence -> signal .)
    VIEWSIGNAL      reduce using rule 17 (master_sentence -> signal .)
    ID              reduce using rule 17 (master_sentence -> signal .)
    ISTRUE          reduce using rule 17 (master_sentence -> signal .)
    WHILE           reduce using rule 17 (master_sentence -> signal .)
    CUT             reduce using rule 17 (master_sentence -> signal .)
    RECUT           reduce using rule 17 (master_sentence -> signal .)


state 22

    (18) master_sentence -> viewsignal .

    RPARENT         reduce using rule 18 (master_sentence -> viewsignal .)
    NEW             reduce using rule 18 (master_sentence -> viewsignal .)
    VALUES          reduce using rule 18 (master_sentence -> viewsignal .)
    CASE            reduce using rule 18 (master_sentence -> viewsignal .)
    CALL            reduce using rule 18 (master_sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 18 (master_sentence -> viewsignal .)
    ALTER           reduce using rule 18 (master_sentence -> viewsignal .)
    ALTERB          reduce using rule 18 (master_sentence -> viewsignal .)
    SIGNAL          reduce using rule 18 (master_sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 18 (master_sentence -> viewsignal .)
    ID              reduce using rule 18 (master_sentence -> viewsignal .)
    ISTRUE          reduce using rule 18 (master_sentence -> viewsignal .)
    WHILE           reduce using rule 18 (master_sentence -> viewsignal .)
    CUT             reduce using rule 18 (master_sentence -> viewsignal .)
    RECUT           reduce using rule 18 (master_sentence -> viewsignal .)


state 23

    (19) master_sentence -> sentence7 .

    RPARENT         reduce using rule 19 (master_sentence -> sentence7 .)
    NEW             reduce using rule 19 (master_sentence -> sentence7 .)
    VALUES          reduce using rule 19 (master_sentence -> sentence7 .)
    CASE            reduce using rule 19 (master_sentence -> sentence7 .)
    CALL            reduce using rule 19 (master_sentence -> sentence7 .)
    PRINTVALUES     reduce using rule 19 (master_sentence -> sentence7 .)
    ALTER           reduce using rule 19 (master_sentence -> sentence7 .)
    ALTERB          reduce using rule 19 (master_sentence -> sentence7 .)
    SIGNAL          reduce using rule 19 (master_sentence -> sentence7 .)
    VIEWSIGNAL      reduce using rule 19 (master_sentence -> sentence7 .)
    ID              reduce using rule 19 (master_sentence -> sentence7 .)
    ISTRUE          reduce using rule 19 (master_sentence -> sentence7 .)
    WHILE           reduce using rule 19 (master_sentence -> sentence7 .)
    CUT             reduce using rule 19 (master_sentence -> sentence7 .)
    RECUT           reduce using rule 19 (master_sentence -> sentence7 .)


state 24

    (20) master_sentence -> sentence8 .

    RPARENT         reduce using rule 20 (master_sentence -> sentence8 .)
    NEW             reduce using rule 20 (master_sentence -> sentence8 .)
    VALUES          reduce using rule 20 (master_sentence -> sentence8 .)
    CASE            reduce using rule 20 (master_sentence -> sentence8 .)
    CALL            reduce using rule 20 (master_sentence -> sentence8 .)
    PRINTVALUES     reduce using rule 20 (master_sentence -> sentence8 .)
    ALTER           reduce using rule 20 (master_sentence -> sentence8 .)
    ALTERB          reduce using rule 20 (master_sentence -> sentence8 .)
    SIGNAL          reduce using rule 20 (master_sentence -> sentence8 .)
    VIEWSIGNAL      reduce using rule 20 (master_sentence -> sentence8 .)
    ID              reduce using rule 20 (master_sentence -> sentence8 .)
    ISTRUE          reduce using rule 20 (master_sentence -> sentence8 .)
    WHILE           reduce using rule 20 (master_sentence -> sentence8 .)
    CUT             reduce using rule 20 (master_sentence -> sentence8 .)
    RECUT           reduce using rule 20 (master_sentence -> sentence8 .)


state 25

    (21) master_sentence -> sentence9 .

    RPARENT         reduce using rule 21 (master_sentence -> sentence9 .)
    NEW             reduce using rule 21 (master_sentence -> sentence9 .)
    VALUES          reduce using rule 21 (master_sentence -> sentence9 .)
    CASE            reduce using rule 21 (master_sentence -> sentence9 .)
    CALL            reduce using rule 21 (master_sentence -> sentence9 .)
    PRINTVALUES     reduce using rule 21 (master_sentence -> sentence9 .)
    ALTER           reduce using rule 21 (master_sentence -> sentence9 .)
    ALTERB          reduce using rule 21 (master_sentence -> sentence9 .)
    SIGNAL          reduce using rule 21 (master_sentence -> sentence9 .)
    VIEWSIGNAL      reduce using rule 21 (master_sentence -> sentence9 .)
    ID              reduce using rule 21 (master_sentence -> sentence9 .)
    ISTRUE          reduce using rule 21 (master_sentence -> sentence9 .)
    WHILE           reduce using rule 21 (master_sentence -> sentence9 .)
    CUT             reduce using rule 21 (master_sentence -> sentence9 .)
    RECUT           reduce using rule 21 (master_sentence -> sentence9 .)


state 26

    (22) master_sentence -> sentence10 .

    RPARENT         reduce using rule 22 (master_sentence -> sentence10 .)
    NEW             reduce using rule 22 (master_sentence -> sentence10 .)
    VALUES          reduce using rule 22 (master_sentence -> sentence10 .)
    CASE            reduce using rule 22 (master_sentence -> sentence10 .)
    CALL            reduce using rule 22 (master_sentence -> sentence10 .)
    PRINTVALUES     reduce using rule 22 (master_sentence -> sentence10 .)
    ALTER           reduce using rule 22 (master_sentence -> sentence10 .)
    ALTERB          reduce using rule 22 (master_sentence -> sentence10 .)
    SIGNAL          reduce using rule 22 (master_sentence -> sentence10 .)
    VIEWSIGNAL      reduce using rule 22 (master_sentence -> sentence10 .)
    ID              reduce using rule 22 (master_sentence -> sentence10 .)
    ISTRUE          reduce using rule 22 (master_sentence -> sentence10 .)
    WHILE           reduce using rule 22 (master_sentence -> sentence10 .)
    CUT             reduce using rule 22 (master_sentence -> sentence10 .)
    RECUT           reduce using rule 22 (master_sentence -> sentence10 .)


state 27

    (23) master_sentence -> sentence11 .

    RPARENT         reduce using rule 23 (master_sentence -> sentence11 .)
    NEW             reduce using rule 23 (master_sentence -> sentence11 .)
    VALUES          reduce using rule 23 (master_sentence -> sentence11 .)
    CASE            reduce using rule 23 (master_sentence -> sentence11 .)
    CALL            reduce using rule 23 (master_sentence -> sentence11 .)
    PRINTVALUES     reduce using rule 23 (master_sentence -> sentence11 .)
    ALTER           reduce using rule 23 (master_sentence -> sentence11 .)
    ALTERB          reduce using rule 23 (master_sentence -> sentence11 .)
    SIGNAL          reduce using rule 23 (master_sentence -> sentence11 .)
    VIEWSIGNAL      reduce using rule 23 (master_sentence -> sentence11 .)
    ID              reduce using rule 23 (master_sentence -> sentence11 .)
    ISTRUE          reduce using rule 23 (master_sentence -> sentence11 .)
    WHILE           reduce using rule 23 (master_sentence -> sentence11 .)
    CUT             reduce using rule 23 (master_sentence -> sentence11 .)
    RECUT           reduce using rule 23 (master_sentence -> sentence11 .)


state 28

    (24) master_sentence -> sentence12 .

    RPARENT         reduce using rule 24 (master_sentence -> sentence12 .)
    NEW             reduce using rule 24 (master_sentence -> sentence12 .)
    VALUES          reduce using rule 24 (master_sentence -> sentence12 .)
    CASE            reduce using rule 24 (master_sentence -> sentence12 .)
    CALL            reduce using rule 24 (master_sentence -> sentence12 .)
    PRINTVALUES     reduce using rule 24 (master_sentence -> sentence12 .)
    ALTER           reduce using rule 24 (master_sentence -> sentence12 .)
    ALTERB          reduce using rule 24 (master_sentence -> sentence12 .)
    SIGNAL          reduce using rule 24 (master_sentence -> sentence12 .)
    VIEWSIGNAL      reduce using rule 24 (master_sentence -> sentence12 .)
    ID              reduce using rule 24 (master_sentence -> sentence12 .)
    ISTRUE          reduce using rule 24 (master_sentence -> sentence12 .)
    WHILE           reduce using rule 24 (master_sentence -> sentence12 .)
    CUT             reduce using rule 24 (master_sentence -> sentence12 .)
    RECUT           reduce using rule 24 (master_sentence -> sentence12 .)


state 29

    (25) master_sentence -> isTrue .

    RPARENT         reduce using rule 25 (master_sentence -> isTrue .)
    NEW             reduce using rule 25 (master_sentence -> isTrue .)
    VALUES          reduce using rule 25 (master_sentence -> isTrue .)
    CASE            reduce using rule 25 (master_sentence -> isTrue .)
    CALL            reduce using rule 25 (master_sentence -> isTrue .)
    PRINTVALUES     reduce using rule 25 (master_sentence -> isTrue .)
    ALTER           reduce using rule 25 (master_sentence -> isTrue .)
    ALTERB          reduce using rule 25 (master_sentence -> isTrue .)
    SIGNAL          reduce using rule 25 (master_sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 25 (master_sentence -> isTrue .)
    ID              reduce using rule 25 (master_sentence -> isTrue .)
    ISTRUE          reduce using rule 25 (master_sentence -> isTrue .)
    WHILE           reduce using rule 25 (master_sentence -> isTrue .)
    CUT             reduce using rule 25 (master_sentence -> isTrue .)
    RECUT           reduce using rule 25 (master_sentence -> isTrue .)


state 30

    (26) master_sentence -> while .

    RPARENT         reduce using rule 26 (master_sentence -> while .)
    NEW             reduce using rule 26 (master_sentence -> while .)
    VALUES          reduce using rule 26 (master_sentence -> while .)
    CASE            reduce using rule 26 (master_sentence -> while .)
    CALL            reduce using rule 26 (master_sentence -> while .)
    PRINTVALUES     reduce using rule 26 (master_sentence -> while .)
    ALTER           reduce using rule 26 (master_sentence -> while .)
    ALTERB          reduce using rule 26 (master_sentence -> while .)
    SIGNAL          reduce using rule 26 (master_sentence -> while .)
    VIEWSIGNAL      reduce using rule 26 (master_sentence -> while .)
    ID              reduce using rule 26 (master_sentence -> while .)
    ISTRUE          reduce using rule 26 (master_sentence -> while .)
    WHILE           reduce using rule 26 (master_sentence -> while .)
    CUT             reduce using rule 26 (master_sentence -> while .)
    RECUT           reduce using rule 26 (master_sentence -> while .)


state 31

    (27) master_sentence -> cut .

    RPARENT         reduce using rule 27 (master_sentence -> cut .)
    NEW             reduce using rule 27 (master_sentence -> cut .)
    VALUES          reduce using rule 27 (master_sentence -> cut .)
    CASE            reduce using rule 27 (master_sentence -> cut .)
    CALL            reduce using rule 27 (master_sentence -> cut .)
    PRINTVALUES     reduce using rule 27 (master_sentence -> cut .)
    ALTER           reduce using rule 27 (master_sentence -> cut .)
    ALTERB          reduce using rule 27 (master_sentence -> cut .)
    SIGNAL          reduce using rule 27 (master_sentence -> cut .)
    VIEWSIGNAL      reduce using rule 27 (master_sentence -> cut .)
    ID              reduce using rule 27 (master_sentence -> cut .)
    ISTRUE          reduce using rule 27 (master_sentence -> cut .)
    WHILE           reduce using rule 27 (master_sentence -> cut .)
    CUT             reduce using rule 27 (master_sentence -> cut .)
    RECUT           reduce using rule 27 (master_sentence -> cut .)


state 32

    (28) master_sentence -> recut .

    RPARENT         reduce using rule 28 (master_sentence -> recut .)
    NEW             reduce using rule 28 (master_sentence -> recut .)
    VALUES          reduce using rule 28 (master_sentence -> recut .)
    CASE            reduce using rule 28 (master_sentence -> recut .)
    CALL            reduce using rule 28 (master_sentence -> recut .)
    PRINTVALUES     reduce using rule 28 (master_sentence -> recut .)
    ALTER           reduce using rule 28 (master_sentence -> recut .)
    ALTERB          reduce using rule 28 (master_sentence -> recut .)
    SIGNAL          reduce using rule 28 (master_sentence -> recut .)
    VIEWSIGNAL      reduce using rule 28 (master_sentence -> recut .)
    ID              reduce using rule 28 (master_sentence -> recut .)
    ISTRUE          reduce using rule 28 (master_sentence -> recut .)
    WHILE           reduce using rule 28 (master_sentence -> recut .)
    CUT             reduce using rule 28 (master_sentence -> recut .)
    RECUT           reduce using rule 28 (master_sentence -> recut .)


state 33

    (29) master_sentence -> empty .

    RPARENT         reduce using rule 29 (master_sentence -> empty .)
    NEW             reduce using rule 29 (master_sentence -> empty .)
    VALUES          reduce using rule 29 (master_sentence -> empty .)
    CASE            reduce using rule 29 (master_sentence -> empty .)
    CALL            reduce using rule 29 (master_sentence -> empty .)
    PRINTVALUES     reduce using rule 29 (master_sentence -> empty .)
    ALTER           reduce using rule 29 (master_sentence -> empty .)
    ALTERB          reduce using rule 29 (master_sentence -> empty .)
    SIGNAL          reduce using rule 29 (master_sentence -> empty .)
    VIEWSIGNAL      reduce using rule 29 (master_sentence -> empty .)
    ID              reduce using rule 29 (master_sentence -> empty .)
    ISTRUE          reduce using rule 29 (master_sentence -> empty .)
    WHILE           reduce using rule 29 (master_sentence -> empty .)
    CUT             reduce using rule 29 (master_sentence -> empty .)
    RECUT           reduce using rule 29 (master_sentence -> empty .)


state 34

    (30) master_var -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (32) master_var -> NEW . ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    ID              shift and go to state 73


state 35

    (76) sentence7 -> ID . MAQ INTEGER
    (77) sentence8 -> ID . MEQ INTEGER
    (78) sentence9 -> ID . EQUAL INTEGER
    (79) sentence10 -> ID . DIFFERENT INTEGER
    (80) sentence11 -> ID . MEQEQUAL INTEGER
    (81) sentence12 -> ID . MAQEQUAL INTEGER

    MAQ             shift and go to state 74
    MEQ             shift and go to state 75
    EQUAL           shift and go to state 76
    DIFFERENT       shift and go to state 77
    MEQEQUAL        shift and go to state 78
    MAQEQUAL        shift and go to state 79


state 36

    (57) values -> VALUES . LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (58) values -> VALUES . LPARENT ID COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 80


state 37

    (84) case -> CASE . expression recursive_conditions SEMICOLON
    (89) expression -> . ID

    ID              shift and go to state 82

    expression                     shift and go to state 81

state 38

    (59) call -> CALL . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 83


state 39

    (60) print_values -> PRINTVALUES . LPARENT printable_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 84


state 40

    (71) alter -> ALTER . LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> ALTER . LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> ALTER . LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> ALTER . LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 85


state 41

    (75) alterB -> ALTERB . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 86


state 42

    (92) signal -> SIGNAL . LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (93) signal -> SIGNAL . LPARENT ID COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 87


state 43

    (94) viewsignal -> VIEWSIGNAL . LPARENT INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 88


state 44

    (82) isTrue -> ISTRUE . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 89


state 45

    (83) while -> WHILE . sentences LPARENT sentences RPARENT SEMICOLON
    (33) sentences -> . sentence
    (34) sentences -> . sentences sentence
    (35) sentence -> . local_variable
    (36) sentence -> . values
    (37) sentence -> . case
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . while
    (52) sentence -> . cut
    (53) sentence -> . recut
    (54) sentence -> . empty
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (58) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (59) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (60) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (75) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (93) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (94) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (76) sentence7 -> . ID MAQ INTEGER
    (77) sentence8 -> . ID MEQ INTEGER
    (78) sentence9 -> . ID EQUAL INTEGER
    (79) sentence10 -> . ID DIFFERENT INTEGER
    (80) sentence11 -> . ID MEQEQUAL INTEGER
    (81) sentence12 -> . ID MAQEQUAL INTEGER
    (82) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (83) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (95) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (96) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (97) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (98) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
    NEW             shift and go to state 70
    VALUES          shift and go to state 36
    CASE            shift and go to state 37
    CALL            shift and go to state 38
    PRINTVALUES     shift and go to state 39
    ALTER           shift and go to state 40
    ALTERB          shift and go to state 41
    SIGNAL          shift and go to state 42
    VIEWSIGNAL      shift and go to state 43
    ID              shift and go to state 35
    ISTRUE          shift and go to state 44
    WHILE           shift and go to state 45
    CUT             shift and go to state 46
    RECUT           shift and go to state 47
    LPARENT         reduce using rule 98 (empty -> .)

  ! NEW             [ reduce using rule 98 (empty -> .) ]
  ! VALUES          [ reduce using rule 98 (empty -> .) ]
  ! CASE            [ reduce using rule 98 (empty -> .) ]
  ! CALL            [ reduce using rule 98 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 98 (empty -> .) ]
  ! ALTER           [ reduce using rule 98 (empty -> .) ]
  ! ALTERB          [ reduce using rule 98 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 98 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 98 (empty -> .) ]
  ! ID              [ reduce using rule 98 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 98 (empty -> .) ]
  ! WHILE           [ reduce using rule 98 (empty -> .) ]
  ! CUT             [ reduce using rule 98 (empty -> .) ]
  ! RECUT           [ reduce using rule 98 (empty -> .) ]

    sentences                      shift and go to state 90
    sentence                       shift and go to state 49
    local_variable                 shift and go to state 50
    values                         shift and go to state 51
    case                           shift and go to state 52
    call                           shift and go to state 53
    print_values                   shift and go to state 54
    alter                          shift and go to state 55
    alterB                         shift and go to state 56
    signal                         shift and go to state 57
    viewsignal                     shift and go to state 58
    sentence7                      shift and go to state 59
    sentence8                      shift and go to state 60
    sentence9                      shift and go to state 61
    sentence10                     shift and go to state 62
    sentence11                     shift and go to state 63
    sentence12                     shift and go to state 64
    isTrue                         shift and go to state 65
    while                          shift and go to state 66
    cut                            shift and go to state 67
    recut                          shift and go to state 68
    empty                          shift and go to state 69

state 46

    (95) cut -> CUT . LPARENT ID COMA STRING RPARENT SEMICOLON
    (96) cut -> CUT . LPARENT ID COMA ID RPARENT SEMICOLON

    LPARENT         shift and go to state 91


state 47

    (97) recut -> RECUT . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 92


state 48

    (6) procedure -> declare_procedure LPARENT sentences . RPARENT SEMICOLON
    (34) sentences -> sentences . sentence
    (35) sentence -> . local_variable
    (36) sentence -> . values
    (37) sentence -> . case
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . while
    (52) sentence -> . cut
    (53) sentence -> . recut
    (54) sentence -> . empty
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (58) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (59) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (60) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (75) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (93) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (94) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (76) sentence7 -> . ID MAQ INTEGER
    (77) sentence8 -> . ID MEQ INTEGER
    (78) sentence9 -> . ID EQUAL INTEGER
    (79) sentence10 -> . ID DIFFERENT INTEGER
    (80) sentence11 -> . ID MEQEQUAL INTEGER
    (81) sentence12 -> . ID MAQEQUAL INTEGER
    (82) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (83) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (95) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (96) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (97) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (98) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
    RPARENT         shift and go to state 93
    NEW             shift and go to state 70
    VALUES          shift and go to state 36
    CASE            shift and go to state 37
    CALL            shift and go to state 38
    PRINTVALUES     shift and go to state 39
    ALTER           shift and go to state 40
    ALTERB          shift and go to state 41
    SIGNAL          shift and go to state 42
    VIEWSIGNAL      shift and go to state 43
    ID              shift and go to state 35
    ISTRUE          shift and go to state 44
    WHILE           shift and go to state 45
    CUT             shift and go to state 46
    RECUT           shift and go to state 47

  ! RPARENT         [ reduce using rule 98 (empty -> .) ]
  ! NEW             [ reduce using rule 98 (empty -> .) ]
  ! VALUES          [ reduce using rule 98 (empty -> .) ]
  ! CASE            [ reduce using rule 98 (empty -> .) ]
  ! CALL            [ reduce using rule 98 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 98 (empty -> .) ]
  ! ALTER           [ reduce using rule 98 (empty -> .) ]
  ! ALTERB          [ reduce using rule 98 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 98 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 98 (empty -> .) ]
  ! ID              [ reduce using rule 98 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 98 (empty -> .) ]
  ! WHILE           [ reduce using rule 98 (empty -> .) ]
  ! CUT             [ reduce using rule 98 (empty -> .) ]
  ! RECUT           [ reduce using rule 98 (empty -> .) ]

    sentence                       shift and go to state 94
    local_variable                 shift and go to state 50
    values                         shift and go to state 51
    case                           shift and go to state 52
    call                           shift and go to state 53
    print_values                   shift and go to state 54
    alter                          shift and go to state 55
    alterB                         shift and go to state 56
    signal                         shift and go to state 57
    viewsignal                     shift and go to state 58
    sentence7                      shift and go to state 59
    sentence8                      shift and go to state 60
    sentence9                      shift and go to state 61
    sentence10                     shift and go to state 62
    sentence11                     shift and go to state 63
    sentence12                     shift and go to state 64
    isTrue                         shift and go to state 65
    while                          shift and go to state 66
    cut                            shift and go to state 67
    recut                          shift and go to state 68
    empty                          shift and go to state 69

state 49

    (33) sentences -> sentence .

    RPARENT         reduce using rule 33 (sentences -> sentence .)
    NEW             reduce using rule 33 (sentences -> sentence .)
    VALUES          reduce using rule 33 (sentences -> sentence .)
    CASE            reduce using rule 33 (sentences -> sentence .)
    CALL            reduce using rule 33 (sentences -> sentence .)
    PRINTVALUES     reduce using rule 33 (sentences -> sentence .)
    ALTER           reduce using rule 33 (sentences -> sentence .)
    ALTERB          reduce using rule 33 (sentences -> sentence .)
    SIGNAL          reduce using rule 33 (sentences -> sentence .)
    VIEWSIGNAL      reduce using rule 33 (sentences -> sentence .)
    ID              reduce using rule 33 (sentences -> sentence .)
    ISTRUE          reduce using rule 33 (sentences -> sentence .)
    WHILE           reduce using rule 33 (sentences -> sentence .)
    CUT             reduce using rule 33 (sentences -> sentence .)
    RECUT           reduce using rule 33 (sentences -> sentence .)
    LPARENT         reduce using rule 33 (sentences -> sentence .)


state 50

    (35) sentence -> local_variable .

    RPARENT         reduce using rule 35 (sentence -> local_variable .)
    NEW             reduce using rule 35 (sentence -> local_variable .)
    VALUES          reduce using rule 35 (sentence -> local_variable .)
    CASE            reduce using rule 35 (sentence -> local_variable .)
    CALL            reduce using rule 35 (sentence -> local_variable .)
    PRINTVALUES     reduce using rule 35 (sentence -> local_variable .)
    ALTER           reduce using rule 35 (sentence -> local_variable .)
    ALTERB          reduce using rule 35 (sentence -> local_variable .)
    SIGNAL          reduce using rule 35 (sentence -> local_variable .)
    VIEWSIGNAL      reduce using rule 35 (sentence -> local_variable .)
    ID              reduce using rule 35 (sentence -> local_variable .)
    ISTRUE          reduce using rule 35 (sentence -> local_variable .)
    WHILE           reduce using rule 35 (sentence -> local_variable .)
    CUT             reduce using rule 35 (sentence -> local_variable .)
    RECUT           reduce using rule 35 (sentence -> local_variable .)
    LPARENT         reduce using rule 35 (sentence -> local_variable .)


state 51

    (36) sentence -> values .

    RPARENT         reduce using rule 36 (sentence -> values .)
    NEW             reduce using rule 36 (sentence -> values .)
    VALUES          reduce using rule 36 (sentence -> values .)
    CASE            reduce using rule 36 (sentence -> values .)
    CALL            reduce using rule 36 (sentence -> values .)
    PRINTVALUES     reduce using rule 36 (sentence -> values .)
    ALTER           reduce using rule 36 (sentence -> values .)
    ALTERB          reduce using rule 36 (sentence -> values .)
    SIGNAL          reduce using rule 36 (sentence -> values .)
    VIEWSIGNAL      reduce using rule 36 (sentence -> values .)
    ID              reduce using rule 36 (sentence -> values .)
    ISTRUE          reduce using rule 36 (sentence -> values .)
    WHILE           reduce using rule 36 (sentence -> values .)
    CUT             reduce using rule 36 (sentence -> values .)
    RECUT           reduce using rule 36 (sentence -> values .)
    LPARENT         reduce using rule 36 (sentence -> values .)


state 52

    (37) sentence -> case .

    RPARENT         reduce using rule 37 (sentence -> case .)
    NEW             reduce using rule 37 (sentence -> case .)
    VALUES          reduce using rule 37 (sentence -> case .)
    CASE            reduce using rule 37 (sentence -> case .)
    CALL            reduce using rule 37 (sentence -> case .)
    PRINTVALUES     reduce using rule 37 (sentence -> case .)
    ALTER           reduce using rule 37 (sentence -> case .)
    ALTERB          reduce using rule 37 (sentence -> case .)
    SIGNAL          reduce using rule 37 (sentence -> case .)
    VIEWSIGNAL      reduce using rule 37 (sentence -> case .)
    ID              reduce using rule 37 (sentence -> case .)
    ISTRUE          reduce using rule 37 (sentence -> case .)
    WHILE           reduce using rule 37 (sentence -> case .)
    CUT             reduce using rule 37 (sentence -> case .)
    RECUT           reduce using rule 37 (sentence -> case .)
    LPARENT         reduce using rule 37 (sentence -> case .)


state 53

    (38) sentence -> call .

    RPARENT         reduce using rule 38 (sentence -> call .)
    NEW             reduce using rule 38 (sentence -> call .)
    VALUES          reduce using rule 38 (sentence -> call .)
    CASE            reduce using rule 38 (sentence -> call .)
    CALL            reduce using rule 38 (sentence -> call .)
    PRINTVALUES     reduce using rule 38 (sentence -> call .)
    ALTER           reduce using rule 38 (sentence -> call .)
    ALTERB          reduce using rule 38 (sentence -> call .)
    SIGNAL          reduce using rule 38 (sentence -> call .)
    VIEWSIGNAL      reduce using rule 38 (sentence -> call .)
    ID              reduce using rule 38 (sentence -> call .)
    ISTRUE          reduce using rule 38 (sentence -> call .)
    WHILE           reduce using rule 38 (sentence -> call .)
    CUT             reduce using rule 38 (sentence -> call .)
    RECUT           reduce using rule 38 (sentence -> call .)
    LPARENT         reduce using rule 38 (sentence -> call .)


state 54

    (39) sentence -> print_values .

    RPARENT         reduce using rule 39 (sentence -> print_values .)
    NEW             reduce using rule 39 (sentence -> print_values .)
    VALUES          reduce using rule 39 (sentence -> print_values .)
    CASE            reduce using rule 39 (sentence -> print_values .)
    CALL            reduce using rule 39 (sentence -> print_values .)
    PRINTVALUES     reduce using rule 39 (sentence -> print_values .)
    ALTER           reduce using rule 39 (sentence -> print_values .)
    ALTERB          reduce using rule 39 (sentence -> print_values .)
    SIGNAL          reduce using rule 39 (sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 39 (sentence -> print_values .)
    ID              reduce using rule 39 (sentence -> print_values .)
    ISTRUE          reduce using rule 39 (sentence -> print_values .)
    WHILE           reduce using rule 39 (sentence -> print_values .)
    CUT             reduce using rule 39 (sentence -> print_values .)
    RECUT           reduce using rule 39 (sentence -> print_values .)
    LPARENT         reduce using rule 39 (sentence -> print_values .)


state 55

    (40) sentence -> alter .

    RPARENT         reduce using rule 40 (sentence -> alter .)
    NEW             reduce using rule 40 (sentence -> alter .)
    VALUES          reduce using rule 40 (sentence -> alter .)
    CASE            reduce using rule 40 (sentence -> alter .)
    CALL            reduce using rule 40 (sentence -> alter .)
    PRINTVALUES     reduce using rule 40 (sentence -> alter .)
    ALTER           reduce using rule 40 (sentence -> alter .)
    ALTERB          reduce using rule 40 (sentence -> alter .)
    SIGNAL          reduce using rule 40 (sentence -> alter .)
    VIEWSIGNAL      reduce using rule 40 (sentence -> alter .)
    ID              reduce using rule 40 (sentence -> alter .)
    ISTRUE          reduce using rule 40 (sentence -> alter .)
    WHILE           reduce using rule 40 (sentence -> alter .)
    CUT             reduce using rule 40 (sentence -> alter .)
    RECUT           reduce using rule 40 (sentence -> alter .)
    LPARENT         reduce using rule 40 (sentence -> alter .)


state 56

    (41) sentence -> alterB .

    RPARENT         reduce using rule 41 (sentence -> alterB .)
    NEW             reduce using rule 41 (sentence -> alterB .)
    VALUES          reduce using rule 41 (sentence -> alterB .)
    CASE            reduce using rule 41 (sentence -> alterB .)
    CALL            reduce using rule 41 (sentence -> alterB .)
    PRINTVALUES     reduce using rule 41 (sentence -> alterB .)
    ALTER           reduce using rule 41 (sentence -> alterB .)
    ALTERB          reduce using rule 41 (sentence -> alterB .)
    SIGNAL          reduce using rule 41 (sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 41 (sentence -> alterB .)
    ID              reduce using rule 41 (sentence -> alterB .)
    ISTRUE          reduce using rule 41 (sentence -> alterB .)
    WHILE           reduce using rule 41 (sentence -> alterB .)
    CUT             reduce using rule 41 (sentence -> alterB .)
    RECUT           reduce using rule 41 (sentence -> alterB .)
    LPARENT         reduce using rule 41 (sentence -> alterB .)


state 57

    (42) sentence -> signal .

    RPARENT         reduce using rule 42 (sentence -> signal .)
    NEW             reduce using rule 42 (sentence -> signal .)
    VALUES          reduce using rule 42 (sentence -> signal .)
    CASE            reduce using rule 42 (sentence -> signal .)
    CALL            reduce using rule 42 (sentence -> signal .)
    PRINTVALUES     reduce using rule 42 (sentence -> signal .)
    ALTER           reduce using rule 42 (sentence -> signal .)
    ALTERB          reduce using rule 42 (sentence -> signal .)
    SIGNAL          reduce using rule 42 (sentence -> signal .)
    VIEWSIGNAL      reduce using rule 42 (sentence -> signal .)
    ID              reduce using rule 42 (sentence -> signal .)
    ISTRUE          reduce using rule 42 (sentence -> signal .)
    WHILE           reduce using rule 42 (sentence -> signal .)
    CUT             reduce using rule 42 (sentence -> signal .)
    RECUT           reduce using rule 42 (sentence -> signal .)
    LPARENT         reduce using rule 42 (sentence -> signal .)


state 58

    (43) sentence -> viewsignal .

    RPARENT         reduce using rule 43 (sentence -> viewsignal .)
    NEW             reduce using rule 43 (sentence -> viewsignal .)
    VALUES          reduce using rule 43 (sentence -> viewsignal .)
    CASE            reduce using rule 43 (sentence -> viewsignal .)
    CALL            reduce using rule 43 (sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 43 (sentence -> viewsignal .)
    ALTER           reduce using rule 43 (sentence -> viewsignal .)
    ALTERB          reduce using rule 43 (sentence -> viewsignal .)
    SIGNAL          reduce using rule 43 (sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 43 (sentence -> viewsignal .)
    ID              reduce using rule 43 (sentence -> viewsignal .)
    ISTRUE          reduce using rule 43 (sentence -> viewsignal .)
    WHILE           reduce using rule 43 (sentence -> viewsignal .)
    CUT             reduce using rule 43 (sentence -> viewsignal .)
    RECUT           reduce using rule 43 (sentence -> viewsignal .)
    LPARENT         reduce using rule 43 (sentence -> viewsignal .)


state 59

    (44) sentence -> sentence7 .

    RPARENT         reduce using rule 44 (sentence -> sentence7 .)
    NEW             reduce using rule 44 (sentence -> sentence7 .)
    VALUES          reduce using rule 44 (sentence -> sentence7 .)
    CASE            reduce using rule 44 (sentence -> sentence7 .)
    CALL            reduce using rule 44 (sentence -> sentence7 .)
    PRINTVALUES     reduce using rule 44 (sentence -> sentence7 .)
    ALTER           reduce using rule 44 (sentence -> sentence7 .)
    ALTERB          reduce using rule 44 (sentence -> sentence7 .)
    SIGNAL          reduce using rule 44 (sentence -> sentence7 .)
    VIEWSIGNAL      reduce using rule 44 (sentence -> sentence7 .)
    ID              reduce using rule 44 (sentence -> sentence7 .)
    ISTRUE          reduce using rule 44 (sentence -> sentence7 .)
    WHILE           reduce using rule 44 (sentence -> sentence7 .)
    CUT             reduce using rule 44 (sentence -> sentence7 .)
    RECUT           reduce using rule 44 (sentence -> sentence7 .)
    LPARENT         reduce using rule 44 (sentence -> sentence7 .)


state 60

    (45) sentence -> sentence8 .

    RPARENT         reduce using rule 45 (sentence -> sentence8 .)
    NEW             reduce using rule 45 (sentence -> sentence8 .)
    VALUES          reduce using rule 45 (sentence -> sentence8 .)
    CASE            reduce using rule 45 (sentence -> sentence8 .)
    CALL            reduce using rule 45 (sentence -> sentence8 .)
    PRINTVALUES     reduce using rule 45 (sentence -> sentence8 .)
    ALTER           reduce using rule 45 (sentence -> sentence8 .)
    ALTERB          reduce using rule 45 (sentence -> sentence8 .)
    SIGNAL          reduce using rule 45 (sentence -> sentence8 .)
    VIEWSIGNAL      reduce using rule 45 (sentence -> sentence8 .)
    ID              reduce using rule 45 (sentence -> sentence8 .)
    ISTRUE          reduce using rule 45 (sentence -> sentence8 .)
    WHILE           reduce using rule 45 (sentence -> sentence8 .)
    CUT             reduce using rule 45 (sentence -> sentence8 .)
    RECUT           reduce using rule 45 (sentence -> sentence8 .)
    LPARENT         reduce using rule 45 (sentence -> sentence8 .)


state 61

    (46) sentence -> sentence9 .

    RPARENT         reduce using rule 46 (sentence -> sentence9 .)
    NEW             reduce using rule 46 (sentence -> sentence9 .)
    VALUES          reduce using rule 46 (sentence -> sentence9 .)
    CASE            reduce using rule 46 (sentence -> sentence9 .)
    CALL            reduce using rule 46 (sentence -> sentence9 .)
    PRINTVALUES     reduce using rule 46 (sentence -> sentence9 .)
    ALTER           reduce using rule 46 (sentence -> sentence9 .)
    ALTERB          reduce using rule 46 (sentence -> sentence9 .)
    SIGNAL          reduce using rule 46 (sentence -> sentence9 .)
    VIEWSIGNAL      reduce using rule 46 (sentence -> sentence9 .)
    ID              reduce using rule 46 (sentence -> sentence9 .)
    ISTRUE          reduce using rule 46 (sentence -> sentence9 .)
    WHILE           reduce using rule 46 (sentence -> sentence9 .)
    CUT             reduce using rule 46 (sentence -> sentence9 .)
    RECUT           reduce using rule 46 (sentence -> sentence9 .)
    LPARENT         reduce using rule 46 (sentence -> sentence9 .)


state 62

    (47) sentence -> sentence10 .

    RPARENT         reduce using rule 47 (sentence -> sentence10 .)
    NEW             reduce using rule 47 (sentence -> sentence10 .)
    VALUES          reduce using rule 47 (sentence -> sentence10 .)
    CASE            reduce using rule 47 (sentence -> sentence10 .)
    CALL            reduce using rule 47 (sentence -> sentence10 .)
    PRINTVALUES     reduce using rule 47 (sentence -> sentence10 .)
    ALTER           reduce using rule 47 (sentence -> sentence10 .)
    ALTERB          reduce using rule 47 (sentence -> sentence10 .)
    SIGNAL          reduce using rule 47 (sentence -> sentence10 .)
    VIEWSIGNAL      reduce using rule 47 (sentence -> sentence10 .)
    ID              reduce using rule 47 (sentence -> sentence10 .)
    ISTRUE          reduce using rule 47 (sentence -> sentence10 .)
    WHILE           reduce using rule 47 (sentence -> sentence10 .)
    CUT             reduce using rule 47 (sentence -> sentence10 .)
    RECUT           reduce using rule 47 (sentence -> sentence10 .)
    LPARENT         reduce using rule 47 (sentence -> sentence10 .)


state 63

    (48) sentence -> sentence11 .

    RPARENT         reduce using rule 48 (sentence -> sentence11 .)
    NEW             reduce using rule 48 (sentence -> sentence11 .)
    VALUES          reduce using rule 48 (sentence -> sentence11 .)
    CASE            reduce using rule 48 (sentence -> sentence11 .)
    CALL            reduce using rule 48 (sentence -> sentence11 .)
    PRINTVALUES     reduce using rule 48 (sentence -> sentence11 .)
    ALTER           reduce using rule 48 (sentence -> sentence11 .)
    ALTERB          reduce using rule 48 (sentence -> sentence11 .)
    SIGNAL          reduce using rule 48 (sentence -> sentence11 .)
    VIEWSIGNAL      reduce using rule 48 (sentence -> sentence11 .)
    ID              reduce using rule 48 (sentence -> sentence11 .)
    ISTRUE          reduce using rule 48 (sentence -> sentence11 .)
    WHILE           reduce using rule 48 (sentence -> sentence11 .)
    CUT             reduce using rule 48 (sentence -> sentence11 .)
    RECUT           reduce using rule 48 (sentence -> sentence11 .)
    LPARENT         reduce using rule 48 (sentence -> sentence11 .)


state 64

    (49) sentence -> sentence12 .

    RPARENT         reduce using rule 49 (sentence -> sentence12 .)
    NEW             reduce using rule 49 (sentence -> sentence12 .)
    VALUES          reduce using rule 49 (sentence -> sentence12 .)
    CASE            reduce using rule 49 (sentence -> sentence12 .)
    CALL            reduce using rule 49 (sentence -> sentence12 .)
    PRINTVALUES     reduce using rule 49 (sentence -> sentence12 .)
    ALTER           reduce using rule 49 (sentence -> sentence12 .)
    ALTERB          reduce using rule 49 (sentence -> sentence12 .)
    SIGNAL          reduce using rule 49 (sentence -> sentence12 .)
    VIEWSIGNAL      reduce using rule 49 (sentence -> sentence12 .)
    ID              reduce using rule 49 (sentence -> sentence12 .)
    ISTRUE          reduce using rule 49 (sentence -> sentence12 .)
    WHILE           reduce using rule 49 (sentence -> sentence12 .)
    CUT             reduce using rule 49 (sentence -> sentence12 .)
    RECUT           reduce using rule 49 (sentence -> sentence12 .)
    LPARENT         reduce using rule 49 (sentence -> sentence12 .)


state 65

    (50) sentence -> isTrue .

    RPARENT         reduce using rule 50 (sentence -> isTrue .)
    NEW             reduce using rule 50 (sentence -> isTrue .)
    VALUES          reduce using rule 50 (sentence -> isTrue .)
    CASE            reduce using rule 50 (sentence -> isTrue .)
    CALL            reduce using rule 50 (sentence -> isTrue .)
    PRINTVALUES     reduce using rule 50 (sentence -> isTrue .)
    ALTER           reduce using rule 50 (sentence -> isTrue .)
    ALTERB          reduce using rule 50 (sentence -> isTrue .)
    SIGNAL          reduce using rule 50 (sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 50 (sentence -> isTrue .)
    ID              reduce using rule 50 (sentence -> isTrue .)
    ISTRUE          reduce using rule 50 (sentence -> isTrue .)
    WHILE           reduce using rule 50 (sentence -> isTrue .)
    CUT             reduce using rule 50 (sentence -> isTrue .)
    RECUT           reduce using rule 50 (sentence -> isTrue .)
    LPARENT         reduce using rule 50 (sentence -> isTrue .)


state 66

    (51) sentence -> while .

    RPARENT         reduce using rule 51 (sentence -> while .)
    NEW             reduce using rule 51 (sentence -> while .)
    VALUES          reduce using rule 51 (sentence -> while .)
    CASE            reduce using rule 51 (sentence -> while .)
    CALL            reduce using rule 51 (sentence -> while .)
    PRINTVALUES     reduce using rule 51 (sentence -> while .)
    ALTER           reduce using rule 51 (sentence -> while .)
    ALTERB          reduce using rule 51 (sentence -> while .)
    SIGNAL          reduce using rule 51 (sentence -> while .)
    VIEWSIGNAL      reduce using rule 51 (sentence -> while .)
    ID              reduce using rule 51 (sentence -> while .)
    ISTRUE          reduce using rule 51 (sentence -> while .)
    WHILE           reduce using rule 51 (sentence -> while .)
    CUT             reduce using rule 51 (sentence -> while .)
    RECUT           reduce using rule 51 (sentence -> while .)
    LPARENT         reduce using rule 51 (sentence -> while .)


state 67

    (52) sentence -> cut .

    RPARENT         reduce using rule 52 (sentence -> cut .)
    NEW             reduce using rule 52 (sentence -> cut .)
    VALUES          reduce using rule 52 (sentence -> cut .)
    CASE            reduce using rule 52 (sentence -> cut .)
    CALL            reduce using rule 52 (sentence -> cut .)
    PRINTVALUES     reduce using rule 52 (sentence -> cut .)
    ALTER           reduce using rule 52 (sentence -> cut .)
    ALTERB          reduce using rule 52 (sentence -> cut .)
    SIGNAL          reduce using rule 52 (sentence -> cut .)
    VIEWSIGNAL      reduce using rule 52 (sentence -> cut .)
    ID              reduce using rule 52 (sentence -> cut .)
    ISTRUE          reduce using rule 52 (sentence -> cut .)
    WHILE           reduce using rule 52 (sentence -> cut .)
    CUT             reduce using rule 52 (sentence -> cut .)
    RECUT           reduce using rule 52 (sentence -> cut .)
    LPARENT         reduce using rule 52 (sentence -> cut .)


state 68

    (53) sentence -> recut .

    RPARENT         reduce using rule 53 (sentence -> recut .)
    NEW             reduce using rule 53 (sentence -> recut .)
    VALUES          reduce using rule 53 (sentence -> recut .)
    CASE            reduce using rule 53 (sentence -> recut .)
    CALL            reduce using rule 53 (sentence -> recut .)
    PRINTVALUES     reduce using rule 53 (sentence -> recut .)
    ALTER           reduce using rule 53 (sentence -> recut .)
    ALTERB          reduce using rule 53 (sentence -> recut .)
    SIGNAL          reduce using rule 53 (sentence -> recut .)
    VIEWSIGNAL      reduce using rule 53 (sentence -> recut .)
    ID              reduce using rule 53 (sentence -> recut .)
    ISTRUE          reduce using rule 53 (sentence -> recut .)
    WHILE           reduce using rule 53 (sentence -> recut .)
    CUT             reduce using rule 53 (sentence -> recut .)
    RECUT           reduce using rule 53 (sentence -> recut .)
    LPARENT         reduce using rule 53 (sentence -> recut .)


state 69

    (54) sentence -> empty .

    RPARENT         reduce using rule 54 (sentence -> empty .)
    NEW             reduce using rule 54 (sentence -> empty .)
    VALUES          reduce using rule 54 (sentence -> empty .)
    CASE            reduce using rule 54 (sentence -> empty .)
    CALL            reduce using rule 54 (sentence -> empty .)
    PRINTVALUES     reduce using rule 54 (sentence -> empty .)
    ALTER           reduce using rule 54 (sentence -> empty .)
    ALTERB          reduce using rule 54 (sentence -> empty .)
    SIGNAL          reduce using rule 54 (sentence -> empty .)
    VIEWSIGNAL      reduce using rule 54 (sentence -> empty .)
    ID              reduce using rule 54 (sentence -> empty .)
    ISTRUE          reduce using rule 54 (sentence -> empty .)
    WHILE           reduce using rule 54 (sentence -> empty .)
    CUT             reduce using rule 54 (sentence -> empty .)
    RECUT           reduce using rule 54 (sentence -> empty .)
    LPARENT         reduce using rule 54 (sentence -> empty .)


state 70

    (55) local_variable -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 95


state 71

    (7) master -> MASTER LPARENT master_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 96


state 72

    (9) master_sentences -> master_sentences master_sentence .

    RPARENT         reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    NEW             reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    VALUES          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    CASE            reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    CALL            reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    PRINTVALUES     reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ALTER           reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ALTERB          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    SIGNAL          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    VIEWSIGNAL      reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ID              reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ISTRUE          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    WHILE           reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    CUT             reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    RECUT           reduce using rule 9 (master_sentences -> master_sentences master_sentence .)


state 73

    (30) master_var -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (32) master_var -> NEW ID . COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    COMA            shift and go to state 97


state 74

    (76) sentence7 -> ID MAQ . INTEGER

    INTEGER         shift and go to state 98


state 75

    (77) sentence8 -> ID MEQ . INTEGER

    INTEGER         shift and go to state 99


state 76

    (78) sentence9 -> ID EQUAL . INTEGER

    INTEGER         shift and go to state 100


state 77

    (79) sentence10 -> ID DIFFERENT . INTEGER

    INTEGER         shift and go to state 101


state 78

    (80) sentence11 -> ID MEQEQUAL . INTEGER

    INTEGER         shift and go to state 102


state 79

    (81) sentence12 -> ID MAQEQUAL . INTEGER

    INTEGER         shift and go to state 103


state 80

    (57) values -> VALUES LPARENT . ID COMA INTEGER RPARENT SEMICOLON
    (58) values -> VALUES LPARENT . ID COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 104


state 81

    (84) case -> CASE expression . recursive_conditions SEMICOLON
    (86) recursive_conditions -> . recursive_condition
    (87) recursive_conditions -> . recursive_conditions recursive_condition
    (88) recursive_condition -> . condition LPARENT sentences RPARENT
    (90) condition -> . WHEN INTEGER THEN
    (91) condition -> . WHEN STRING THEN

    WHEN            shift and go to state 108

    recursive_conditions           shift and go to state 105
    recursive_condition            shift and go to state 106
    condition                      shift and go to state 107

state 82

    (89) expression -> ID .

    WHEN            reduce using rule 89 (expression -> ID .)


state 83

    (59) call -> CALL LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 109


state 84

    (60) print_values -> PRINTVALUES LPARENT . printable_sentences RPARENT SEMICOLON
    (61) printable_sentences -> . printable_sentence_var
    (62) printable_sentences -> . printable_sentence_string
    (63) printable_sentences -> . printable_sentence_var PLUS printable_sentence_var
    (64) printable_sentences -> . printable_sentence_string PLUS printable_sentence_string
    (65) printable_sentences -> . printable_sentence_var PLUS printable_sentence_string
    (66) printable_sentences -> . printable_sentence_string PLUS printable_sentence_var
    (67) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_var
    (68) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_string
    (69) printable_sentence_var -> . ID
    (70) printable_sentence_string -> . STRING

    PLUS            shift and go to state 113
    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentences            shift and go to state 110
    printable_sentence_var         shift and go to state 111
    printable_sentence_string      shift and go to state 112

state 85

    (71) alter -> ALTER LPARENT . ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> ALTER LPARENT . ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> ALTER LPARENT . ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> ALTER LPARENT . ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    ID              shift and go to state 116


state 86

    (75) alterB -> ALTERB LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 117


state 87

    (92) signal -> SIGNAL LPARENT . INTEGER COMA INTEGER RPARENT SEMICOLON
    (93) signal -> SIGNAL LPARENT . ID COMA INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 118
    ID              shift and go to state 119


state 88

    (94) viewsignal -> VIEWSIGNAL LPARENT . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 120


state 89

    (82) isTrue -> ISTRUE LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 121


state 90

    (83) while -> WHILE sentences . LPARENT sentences RPARENT SEMICOLON
    (34) sentences -> sentences . sentence
    (35) sentence -> . local_variable
    (36) sentence -> . values
    (37) sentence -> . case
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . while
    (52) sentence -> . cut
    (53) sentence -> . recut
    (54) sentence -> . empty
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (58) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (59) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (60) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (75) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (93) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (94) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (76) sentence7 -> . ID MAQ INTEGER
    (77) sentence8 -> . ID MEQ INTEGER
    (78) sentence9 -> . ID EQUAL INTEGER
    (79) sentence10 -> . ID DIFFERENT INTEGER
    (80) sentence11 -> . ID MEQEQUAL INTEGER
    (81) sentence12 -> . ID MAQEQUAL INTEGER
    (82) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (83) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (95) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (96) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (97) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (98) empty -> .

  ! shift/reduce conflict for LPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
    LPARENT         shift and go to state 122
    NEW             shift and go to state 70
    VALUES          shift and go to state 36
    CASE            shift and go to state 37
    CALL            shift and go to state 38
    PRINTVALUES     shift and go to state 39
    ALTER           shift and go to state 40
    ALTERB          shift and go to state 41
    SIGNAL          shift and go to state 42
    VIEWSIGNAL      shift and go to state 43
    ID              shift and go to state 35
    ISTRUE          shift and go to state 44
    WHILE           shift and go to state 45
    CUT             shift and go to state 46
    RECUT           shift and go to state 47

  ! LPARENT         [ reduce using rule 98 (empty -> .) ]
  ! NEW             [ reduce using rule 98 (empty -> .) ]
  ! VALUES          [ reduce using rule 98 (empty -> .) ]
  ! CASE            [ reduce using rule 98 (empty -> .) ]
  ! CALL            [ reduce using rule 98 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 98 (empty -> .) ]
  ! ALTER           [ reduce using rule 98 (empty -> .) ]
  ! ALTERB          [ reduce using rule 98 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 98 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 98 (empty -> .) ]
  ! ID              [ reduce using rule 98 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 98 (empty -> .) ]
  ! WHILE           [ reduce using rule 98 (empty -> .) ]
  ! CUT             [ reduce using rule 98 (empty -> .) ]
  ! RECUT           [ reduce using rule 98 (empty -> .) ]

    sentence                       shift and go to state 94
    local_variable                 shift and go to state 50
    values                         shift and go to state 51
    case                           shift and go to state 52
    call                           shift and go to state 53
    print_values                   shift and go to state 54
    alter                          shift and go to state 55
    alterB                         shift and go to state 56
    signal                         shift and go to state 57
    viewsignal                     shift and go to state 58
    sentence7                      shift and go to state 59
    sentence8                      shift and go to state 60
    sentence9                      shift and go to state 61
    sentence10                     shift and go to state 62
    sentence11                     shift and go to state 63
    sentence12                     shift and go to state 64
    isTrue                         shift and go to state 65
    while                          shift and go to state 66
    cut                            shift and go to state 67
    recut                          shift and go to state 68
    empty                          shift and go to state 69

state 91

    (95) cut -> CUT LPARENT . ID COMA STRING RPARENT SEMICOLON
    (96) cut -> CUT LPARENT . ID COMA ID RPARENT SEMICOLON

    ID              shift and go to state 123


state 92

    (97) recut -> RECUT LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 124


state 93

    (6) procedure -> declare_procedure LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 125


state 94

    (34) sentences -> sentences sentence .

    RPARENT         reduce using rule 34 (sentences -> sentences sentence .)
    NEW             reduce using rule 34 (sentences -> sentences sentence .)
    VALUES          reduce using rule 34 (sentences -> sentences sentence .)
    CASE            reduce using rule 34 (sentences -> sentences sentence .)
    CALL            reduce using rule 34 (sentences -> sentences sentence .)
    PRINTVALUES     reduce using rule 34 (sentences -> sentences sentence .)
    ALTER           reduce using rule 34 (sentences -> sentences sentence .)
    ALTERB          reduce using rule 34 (sentences -> sentences sentence .)
    SIGNAL          reduce using rule 34 (sentences -> sentences sentence .)
    VIEWSIGNAL      reduce using rule 34 (sentences -> sentences sentence .)
    ID              reduce using rule 34 (sentences -> sentences sentence .)
    ISTRUE          reduce using rule 34 (sentences -> sentences sentence .)
    WHILE           reduce using rule 34 (sentences -> sentences sentence .)
    CUT             reduce using rule 34 (sentences -> sentences sentence .)
    RECUT           reduce using rule 34 (sentences -> sentences sentence .)
    LPARENT         reduce using rule 34 (sentences -> sentences sentence .)


state 95

    (55) local_variable -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 126


state 96

    (7) master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .

    PROC            reduce using rule 7 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)
    $end            reduce using rule 7 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)


state 97

    (30) master_var -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (32) master_var -> NEW ID COMA . LPARENT TYPE COMA STRING RPARENT SEMICOLON

    LPARENT         shift and go to state 127


state 98

    (76) sentence7 -> ID MAQ INTEGER .

    RPARENT         reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    NEW             reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    VALUES          reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    CASE            reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    CALL            reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    PRINTVALUES     reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    ALTER           reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    ALTERB          reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    SIGNAL          reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    VIEWSIGNAL      reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    ID              reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    ISTRUE          reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    WHILE           reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    CUT             reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    RECUT           reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)
    LPARENT         reduce using rule 76 (sentence7 -> ID MAQ INTEGER .)


state 99

    (77) sentence8 -> ID MEQ INTEGER .

    RPARENT         reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    NEW             reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    VALUES          reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    CASE            reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    CALL            reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    PRINTVALUES     reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    ALTER           reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    ALTERB          reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    SIGNAL          reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    VIEWSIGNAL      reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    ID              reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    ISTRUE          reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    WHILE           reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    CUT             reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    RECUT           reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)
    LPARENT         reduce using rule 77 (sentence8 -> ID MEQ INTEGER .)


state 100

    (78) sentence9 -> ID EQUAL INTEGER .

    RPARENT         reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    NEW             reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    VALUES          reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    CASE            reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    CALL            reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    PRINTVALUES     reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    ALTER           reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    ALTERB          reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    SIGNAL          reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    ID              reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    ISTRUE          reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    WHILE           reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    CUT             reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    RECUT           reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)
    LPARENT         reduce using rule 78 (sentence9 -> ID EQUAL INTEGER .)


state 101

    (79) sentence10 -> ID DIFFERENT INTEGER .

    RPARENT         reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    NEW             reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    VALUES          reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    CASE            reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    CALL            reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    PRINTVALUES     reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    ALTER           reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    ALTERB          reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    SIGNAL          reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    VIEWSIGNAL      reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    ID              reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    ISTRUE          reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    WHILE           reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    CUT             reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    RECUT           reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)
    LPARENT         reduce using rule 79 (sentence10 -> ID DIFFERENT INTEGER .)


state 102

    (80) sentence11 -> ID MEQEQUAL INTEGER .

    RPARENT         reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    NEW             reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    VALUES          reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    CASE            reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    CALL            reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    ALTER           reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    ALTERB          reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    SIGNAL          reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    ID              reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    ISTRUE          reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    WHILE           reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    CUT             reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    RECUT           reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)
    LPARENT         reduce using rule 80 (sentence11 -> ID MEQEQUAL INTEGER .)


state 103

    (81) sentence12 -> ID MAQEQUAL INTEGER .

    RPARENT         reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    NEW             reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    VALUES          reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    CASE            reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    CALL            reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    ALTER           reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    ALTERB          reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    SIGNAL          reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    ID              reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    ISTRUE          reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    WHILE           reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    CUT             reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    RECUT           reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)
    LPARENT         reduce using rule 81 (sentence12 -> ID MAQEQUAL INTEGER .)


state 104

    (57) values -> VALUES LPARENT ID . COMA INTEGER RPARENT SEMICOLON
    (58) values -> VALUES LPARENT ID . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 128


state 105

    (84) case -> CASE expression recursive_conditions . SEMICOLON
    (87) recursive_conditions -> recursive_conditions . recursive_condition
    (88) recursive_condition -> . condition LPARENT sentences RPARENT
    (90) condition -> . WHEN INTEGER THEN
    (91) condition -> . WHEN STRING THEN

    SEMICOLON       shift and go to state 129
    WHEN            shift and go to state 108

    recursive_condition            shift and go to state 130
    condition                      shift and go to state 107

state 106

    (86) recursive_conditions -> recursive_condition .

    SEMICOLON       reduce using rule 86 (recursive_conditions -> recursive_condition .)
    WHEN            reduce using rule 86 (recursive_conditions -> recursive_condition .)


state 107

    (88) recursive_condition -> condition . LPARENT sentences RPARENT

    LPARENT         shift and go to state 131


state 108

    (90) condition -> WHEN . INTEGER THEN
    (91) condition -> WHEN . STRING THEN

    INTEGER         shift and go to state 132
    STRING          shift and go to state 133


state 109

    (59) call -> CALL LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 134


state 110

    (60) print_values -> PRINTVALUES LPARENT printable_sentences . RPARENT SEMICOLON

    RPARENT         shift and go to state 135


state 111

    (61) printable_sentences -> printable_sentence_var .
    (63) printable_sentences -> printable_sentence_var . PLUS printable_sentence_var
    (65) printable_sentences -> printable_sentence_var . PLUS printable_sentence_string

  ! shift/reduce conflict for PLUS resolved as shift
    RPARENT         reduce using rule 61 (printable_sentences -> printable_sentence_var .)
    PLUS            shift and go to state 136

  ! PLUS            [ reduce using rule 61 (printable_sentences -> printable_sentence_var .) ]


state 112

    (62) printable_sentences -> printable_sentence_string .
    (64) printable_sentences -> printable_sentence_string . PLUS printable_sentence_string
    (66) printable_sentences -> printable_sentence_string . PLUS printable_sentence_var

  ! shift/reduce conflict for PLUS resolved as shift
    RPARENT         reduce using rule 62 (printable_sentences -> printable_sentence_string .)
    PLUS            shift and go to state 137

  ! PLUS            [ reduce using rule 62 (printable_sentences -> printable_sentence_string .) ]


state 113

    (67) printable_sentences -> PLUS . printable_sentences PLUS printable_sentence_var
    (68) printable_sentences -> PLUS . printable_sentences PLUS printable_sentence_string
    (61) printable_sentences -> . printable_sentence_var
    (62) printable_sentences -> . printable_sentence_string
    (63) printable_sentences -> . printable_sentence_var PLUS printable_sentence_var
    (64) printable_sentences -> . printable_sentence_string PLUS printable_sentence_string
    (65) printable_sentences -> . printable_sentence_var PLUS printable_sentence_string
    (66) printable_sentences -> . printable_sentence_string PLUS printable_sentence_var
    (67) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_var
    (68) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_string
    (69) printable_sentence_var -> . ID
    (70) printable_sentence_string -> . STRING

    PLUS            shift and go to state 113
    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentences            shift and go to state 138
    printable_sentence_var         shift and go to state 111
    printable_sentence_string      shift and go to state 112

state 114

    (69) printable_sentence_var -> ID .

    PLUS            reduce using rule 69 (printable_sentence_var -> ID .)
    RPARENT         reduce using rule 69 (printable_sentence_var -> ID .)


state 115

    (70) printable_sentence_string -> STRING .

    PLUS            reduce using rule 70 (printable_sentence_string -> STRING .)
    RPARENT         reduce using rule 70 (printable_sentence_string -> STRING .)


state 116

    (71) alter -> ALTER LPARENT ID . COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> ALTER LPARENT ID . COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> ALTER LPARENT ID . COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> ALTER LPARENT ID . COMA DIV COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 139


state 117

    (75) alterB -> ALTERB LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 140


state 118

    (92) signal -> SIGNAL LPARENT INTEGER . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 141


state 119

    (93) signal -> SIGNAL LPARENT ID . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 142


state 120

    (94) viewsignal -> VIEWSIGNAL LPARENT INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 143


state 121

    (82) isTrue -> ISTRUE LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 144


state 122

    (83) while -> WHILE sentences LPARENT . sentences RPARENT SEMICOLON
    (33) sentences -> . sentence
    (34) sentences -> . sentences sentence
    (35) sentence -> . local_variable
    (36) sentence -> . values
    (37) sentence -> . case
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . while
    (52) sentence -> . cut
    (53) sentence -> . recut
    (54) sentence -> . empty
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (58) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (59) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (60) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (75) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (93) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (94) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (76) sentence7 -> . ID MAQ INTEGER
    (77) sentence8 -> . ID MEQ INTEGER
    (78) sentence9 -> . ID EQUAL INTEGER
    (79) sentence10 -> . ID DIFFERENT INTEGER
    (80) sentence11 -> . ID MEQEQUAL INTEGER
    (81) sentence12 -> . ID MAQEQUAL INTEGER
    (82) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (83) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (95) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (96) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (97) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (98) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
    NEW             shift and go to state 70
    VALUES          shift and go to state 36
    CASE            shift and go to state 37
    CALL            shift and go to state 38
    PRINTVALUES     shift and go to state 39
    ALTER           shift and go to state 40
    ALTERB          shift and go to state 41
    SIGNAL          shift and go to state 42
    VIEWSIGNAL      shift and go to state 43
    ID              shift and go to state 35
    ISTRUE          shift and go to state 44
    WHILE           shift and go to state 45
    CUT             shift and go to state 46
    RECUT           shift and go to state 47
    RPARENT         reduce using rule 98 (empty -> .)

  ! NEW             [ reduce using rule 98 (empty -> .) ]
  ! VALUES          [ reduce using rule 98 (empty -> .) ]
  ! CASE            [ reduce using rule 98 (empty -> .) ]
  ! CALL            [ reduce using rule 98 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 98 (empty -> .) ]
  ! ALTER           [ reduce using rule 98 (empty -> .) ]
  ! ALTERB          [ reduce using rule 98 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 98 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 98 (empty -> .) ]
  ! ID              [ reduce using rule 98 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 98 (empty -> .) ]
  ! WHILE           [ reduce using rule 98 (empty -> .) ]
  ! CUT             [ reduce using rule 98 (empty -> .) ]
  ! RECUT           [ reduce using rule 98 (empty -> .) ]

    sentences                      shift and go to state 145
    sentence                       shift and go to state 49
    local_variable                 shift and go to state 50
    values                         shift and go to state 51
    case                           shift and go to state 52
    call                           shift and go to state 53
    print_values                   shift and go to state 54
    alter                          shift and go to state 55
    alterB                         shift and go to state 56
    signal                         shift and go to state 57
    viewsignal                     shift and go to state 58
    sentence7                      shift and go to state 59
    sentence8                      shift and go to state 60
    sentence9                      shift and go to state 61
    sentence10                     shift and go to state 62
    sentence11                     shift and go to state 63
    sentence12                     shift and go to state 64
    isTrue                         shift and go to state 65
    while                          shift and go to state 66
    cut                            shift and go to state 67
    recut                          shift and go to state 68
    empty                          shift and go to state 69

state 123

    (95) cut -> CUT LPARENT ID . COMA STRING RPARENT SEMICOLON
    (96) cut -> CUT LPARENT ID . COMA ID RPARENT SEMICOLON

    COMA            shift and go to state 146


state 124

    (97) recut -> RECUT LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 147


state 125

    (6) procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .

    PROC            reduce using rule 6 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)
    $end            reduce using rule 6 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)


state 126

    (55) local_variable -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 148


state 127

    (30) master_var -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON
    (32) master_var -> NEW ID COMA LPARENT . TYPE COMA STRING RPARENT SEMICOLON

    TYPE            shift and go to state 149


state 128

    (57) values -> VALUES LPARENT ID COMA . INTEGER RPARENT SEMICOLON
    (58) values -> VALUES LPARENT ID COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 150
    BOOL            shift and go to state 151


state 129

    (84) case -> CASE expression recursive_conditions SEMICOLON .

    RPARENT         reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    NEW             reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    VALUES          reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    CASE            reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    CALL            reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    PRINTVALUES     reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    ALTER           reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    ALTERB          reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    SIGNAL          reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    VIEWSIGNAL      reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    ID              reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    ISTRUE          reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    WHILE           reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    CUT             reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    RECUT           reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    LPARENT         reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)


state 130

    (87) recursive_conditions -> recursive_conditions recursive_condition .

    SEMICOLON       reduce using rule 87 (recursive_conditions -> recursive_conditions recursive_condition .)
    WHEN            reduce using rule 87 (recursive_conditions -> recursive_conditions recursive_condition .)


state 131

    (88) recursive_condition -> condition LPARENT . sentences RPARENT
    (33) sentences -> . sentence
    (34) sentences -> . sentences sentence
    (35) sentence -> . local_variable
    (36) sentence -> . values
    (37) sentence -> . case
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . while
    (52) sentence -> . cut
    (53) sentence -> . recut
    (54) sentence -> . empty
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (58) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (59) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (60) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (75) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (93) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (94) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (76) sentence7 -> . ID MAQ INTEGER
    (77) sentence8 -> . ID MEQ INTEGER
    (78) sentence9 -> . ID EQUAL INTEGER
    (79) sentence10 -> . ID DIFFERENT INTEGER
    (80) sentence11 -> . ID MEQEQUAL INTEGER
    (81) sentence12 -> . ID MAQEQUAL INTEGER
    (82) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (83) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (95) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (96) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (97) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (98) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
    NEW             shift and go to state 70
    VALUES          shift and go to state 36
    CASE            shift and go to state 37
    CALL            shift and go to state 38
    PRINTVALUES     shift and go to state 39
    ALTER           shift and go to state 40
    ALTERB          shift and go to state 41
    SIGNAL          shift and go to state 42
    VIEWSIGNAL      shift and go to state 43
    ID              shift and go to state 35
    ISTRUE          shift and go to state 44
    WHILE           shift and go to state 45
    CUT             shift and go to state 46
    RECUT           shift and go to state 47
    RPARENT         reduce using rule 98 (empty -> .)

  ! NEW             [ reduce using rule 98 (empty -> .) ]
  ! VALUES          [ reduce using rule 98 (empty -> .) ]
  ! CASE            [ reduce using rule 98 (empty -> .) ]
  ! CALL            [ reduce using rule 98 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 98 (empty -> .) ]
  ! ALTER           [ reduce using rule 98 (empty -> .) ]
  ! ALTERB          [ reduce using rule 98 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 98 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 98 (empty -> .) ]
  ! ID              [ reduce using rule 98 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 98 (empty -> .) ]
  ! WHILE           [ reduce using rule 98 (empty -> .) ]
  ! CUT             [ reduce using rule 98 (empty -> .) ]
  ! RECUT           [ reduce using rule 98 (empty -> .) ]

    sentences                      shift and go to state 152
    sentence                       shift and go to state 49
    local_variable                 shift and go to state 50
    values                         shift and go to state 51
    case                           shift and go to state 52
    call                           shift and go to state 53
    print_values                   shift and go to state 54
    alter                          shift and go to state 55
    alterB                         shift and go to state 56
    signal                         shift and go to state 57
    viewsignal                     shift and go to state 58
    sentence7                      shift and go to state 59
    sentence8                      shift and go to state 60
    sentence9                      shift and go to state 61
    sentence10                     shift and go to state 62
    sentence11                     shift and go to state 63
    sentence12                     shift and go to state 64
    isTrue                         shift and go to state 65
    while                          shift and go to state 66
    cut                            shift and go to state 67
    recut                          shift and go to state 68
    empty                          shift and go to state 69

state 132

    (90) condition -> WHEN INTEGER . THEN

    THEN            shift and go to state 153


state 133

    (91) condition -> WHEN STRING . THEN

    THEN            shift and go to state 154


state 134

    (59) call -> CALL LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 155


state 135

    (60) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 156


state 136

    (63) printable_sentences -> printable_sentence_var PLUS . printable_sentence_var
    (65) printable_sentences -> printable_sentence_var PLUS . printable_sentence_string
    (69) printable_sentence_var -> . ID
    (70) printable_sentence_string -> . STRING

    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentence_var         shift and go to state 157
    printable_sentence_string      shift and go to state 158

state 137

    (64) printable_sentences -> printable_sentence_string PLUS . printable_sentence_string
    (66) printable_sentences -> printable_sentence_string PLUS . printable_sentence_var
    (70) printable_sentence_string -> . STRING
    (69) printable_sentence_var -> . ID

    STRING          shift and go to state 115
    ID              shift and go to state 114

    printable_sentence_string      shift and go to state 159
    printable_sentence_var         shift and go to state 160

state 138

    (67) printable_sentences -> PLUS printable_sentences . PLUS printable_sentence_var
    (68) printable_sentences -> PLUS printable_sentences . PLUS printable_sentence_string

    PLUS            shift and go to state 161


state 139

    (71) alter -> ALTER LPARENT ID COMA . ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> ALTER LPARENT ID COMA . SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> ALTER LPARENT ID COMA . MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> ALTER LPARENT ID COMA . DIV COMA INTEGER RPARENT SEMICOLON

    ADD             shift and go to state 162
    SUB             shift and go to state 163
    MUL             shift and go to state 164
    DIV             shift and go to state 165


state 140

    (75) alterB -> ALTERB LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 166


state 141

    (92) signal -> SIGNAL LPARENT INTEGER COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 167


state 142

    (93) signal -> SIGNAL LPARENT ID COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 168


state 143

    (94) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 169


state 144

    (82) isTrue -> ISTRUE LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 170


state 145

    (83) while -> WHILE sentences LPARENT sentences . RPARENT SEMICOLON
    (34) sentences -> sentences . sentence
    (35) sentence -> . local_variable
    (36) sentence -> . values
    (37) sentence -> . case
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . while
    (52) sentence -> . cut
    (53) sentence -> . recut
    (54) sentence -> . empty
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (58) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (59) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (60) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (75) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (93) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (94) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (76) sentence7 -> . ID MAQ INTEGER
    (77) sentence8 -> . ID MEQ INTEGER
    (78) sentence9 -> . ID EQUAL INTEGER
    (79) sentence10 -> . ID DIFFERENT INTEGER
    (80) sentence11 -> . ID MEQEQUAL INTEGER
    (81) sentence12 -> . ID MAQEQUAL INTEGER
    (82) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (83) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (95) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (96) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (97) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (98) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
    RPARENT         shift and go to state 171
    NEW             shift and go to state 70
    VALUES          shift and go to state 36
    CASE            shift and go to state 37
    CALL            shift and go to state 38
    PRINTVALUES     shift and go to state 39
    ALTER           shift and go to state 40
    ALTERB          shift and go to state 41
    SIGNAL          shift and go to state 42
    VIEWSIGNAL      shift and go to state 43
    ID              shift and go to state 35
    ISTRUE          shift and go to state 44
    WHILE           shift and go to state 45
    CUT             shift and go to state 46
    RECUT           shift and go to state 47

  ! RPARENT         [ reduce using rule 98 (empty -> .) ]
  ! NEW             [ reduce using rule 98 (empty -> .) ]
  ! VALUES          [ reduce using rule 98 (empty -> .) ]
  ! CASE            [ reduce using rule 98 (empty -> .) ]
  ! CALL            [ reduce using rule 98 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 98 (empty -> .) ]
  ! ALTER           [ reduce using rule 98 (empty -> .) ]
  ! ALTERB          [ reduce using rule 98 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 98 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 98 (empty -> .) ]
  ! ID              [ reduce using rule 98 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 98 (empty -> .) ]
  ! WHILE           [ reduce using rule 98 (empty -> .) ]
  ! CUT             [ reduce using rule 98 (empty -> .) ]
  ! RECUT           [ reduce using rule 98 (empty -> .) ]

    sentence                       shift and go to state 94
    local_variable                 shift and go to state 50
    values                         shift and go to state 51
    case                           shift and go to state 52
    call                           shift and go to state 53
    print_values                   shift and go to state 54
    alter                          shift and go to state 55
    alterB                         shift and go to state 56
    signal                         shift and go to state 57
    viewsignal                     shift and go to state 58
    sentence7                      shift and go to state 59
    sentence8                      shift and go to state 60
    sentence9                      shift and go to state 61
    sentence10                     shift and go to state 62
    sentence11                     shift and go to state 63
    sentence12                     shift and go to state 64
    isTrue                         shift and go to state 65
    while                          shift and go to state 66
    cut                            shift and go to state 67
    recut                          shift and go to state 68
    empty                          shift and go to state 69

state 146

    (95) cut -> CUT LPARENT ID COMA . STRING RPARENT SEMICOLON
    (96) cut -> CUT LPARENT ID COMA . ID RPARENT SEMICOLON

    STRING          shift and go to state 173
    ID              shift and go to state 172


state 147

    (97) recut -> RECUT LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 174


state 148

    (55) local_variable -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON

    TYPE            shift and go to state 175


state 149

    (30) master_var -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON
    (32) master_var -> NEW ID COMA LPARENT TYPE . COMA STRING RPARENT SEMICOLON

    COMA            shift and go to state 176


state 150

    (57) values -> VALUES LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 177


state 151

    (58) values -> VALUES LPARENT ID COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 178


state 152

    (88) recursive_condition -> condition LPARENT sentences . RPARENT
    (34) sentences -> sentences . sentence
    (35) sentence -> . local_variable
    (36) sentence -> . values
    (37) sentence -> . case
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . while
    (52) sentence -> . cut
    (53) sentence -> . recut
    (54) sentence -> . empty
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (58) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (59) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (60) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (74) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (75) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (93) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (94) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (76) sentence7 -> . ID MAQ INTEGER
    (77) sentence8 -> . ID MEQ INTEGER
    (78) sentence9 -> . ID EQUAL INTEGER
    (79) sentence10 -> . ID DIFFERENT INTEGER
    (80) sentence11 -> . ID MEQEQUAL INTEGER
    (81) sentence12 -> . ID MAQEQUAL INTEGER
    (82) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (83) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (95) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (96) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (97) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (98) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
    RPARENT         shift and go to state 179
    NEW             shift and go to state 70
    VALUES          shift and go to state 36
    CASE            shift and go to state 37
    CALL            shift and go to state 38
    PRINTVALUES     shift and go to state 39
    ALTER           shift and go to state 40
    ALTERB          shift and go to state 41
    SIGNAL          shift and go to state 42
    VIEWSIGNAL      shift and go to state 43
    ID              shift and go to state 35
    ISTRUE          shift and go to state 44
    WHILE           shift and go to state 45
    CUT             shift and go to state 46
    RECUT           shift and go to state 47

  ! RPARENT         [ reduce using rule 98 (empty -> .) ]
  ! NEW             [ reduce using rule 98 (empty -> .) ]
  ! VALUES          [ reduce using rule 98 (empty -> .) ]
  ! CASE            [ reduce using rule 98 (empty -> .) ]
  ! CALL            [ reduce using rule 98 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 98 (empty -> .) ]
  ! ALTER           [ reduce using rule 98 (empty -> .) ]
  ! ALTERB          [ reduce using rule 98 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 98 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 98 (empty -> .) ]
  ! ID              [ reduce using rule 98 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 98 (empty -> .) ]
  ! WHILE           [ reduce using rule 98 (empty -> .) ]
  ! CUT             [ reduce using rule 98 (empty -> .) ]
  ! RECUT           [ reduce using rule 98 (empty -> .) ]

    sentence                       shift and go to state 94
    local_variable                 shift and go to state 50
    values                         shift and go to state 51
    case                           shift and go to state 52
    call                           shift and go to state 53
    print_values                   shift and go to state 54
    alter                          shift and go to state 55
    alterB                         shift and go to state 56
    signal                         shift and go to state 57
    viewsignal                     shift and go to state 58
    sentence7                      shift and go to state 59
    sentence8                      shift and go to state 60
    sentence9                      shift and go to state 61
    sentence10                     shift and go to state 62
    sentence11                     shift and go to state 63
    sentence12                     shift and go to state 64
    isTrue                         shift and go to state 65
    while                          shift and go to state 66
    cut                            shift and go to state 67
    recut                          shift and go to state 68
    empty                          shift and go to state 69

state 153

    (90) condition -> WHEN INTEGER THEN .

    LPARENT         reduce using rule 90 (condition -> WHEN INTEGER THEN .)


state 154

    (91) condition -> WHEN STRING THEN .

    LPARENT         reduce using rule 91 (condition -> WHEN STRING THEN .)


state 155

    (59) call -> CALL LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CUT             reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 59 (call -> CALL LPARENT ID RPARENT SEMICOLON .)


state 156

    (60) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .

    RPARENT         reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VALUES          reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CASE            reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CALL            reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTER           reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTERB          reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ID              reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    WHILE           reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CUT             reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    RECUT           reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    LPARENT         reduce using rule 60 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)


state 157

    (63) printable_sentences -> printable_sentence_var PLUS printable_sentence_var .

    RPARENT         reduce using rule 63 (printable_sentences -> printable_sentence_var PLUS printable_sentence_var .)
    PLUS            reduce using rule 63 (printable_sentences -> printable_sentence_var PLUS printable_sentence_var .)


state 158

    (65) printable_sentences -> printable_sentence_var PLUS printable_sentence_string .

    RPARENT         reduce using rule 65 (printable_sentences -> printable_sentence_var PLUS printable_sentence_string .)
    PLUS            reduce using rule 65 (printable_sentences -> printable_sentence_var PLUS printable_sentence_string .)


state 159

    (64) printable_sentences -> printable_sentence_string PLUS printable_sentence_string .

    RPARENT         reduce using rule 64 (printable_sentences -> printable_sentence_string PLUS printable_sentence_string .)
    PLUS            reduce using rule 64 (printable_sentences -> printable_sentence_string PLUS printable_sentence_string .)


state 160

    (66) printable_sentences -> printable_sentence_string PLUS printable_sentence_var .

    RPARENT         reduce using rule 66 (printable_sentences -> printable_sentence_string PLUS printable_sentence_var .)
    PLUS            reduce using rule 66 (printable_sentences -> printable_sentence_string PLUS printable_sentence_var .)


state 161

    (67) printable_sentences -> PLUS printable_sentences PLUS . printable_sentence_var
    (68) printable_sentences -> PLUS printable_sentences PLUS . printable_sentence_string
    (69) printable_sentence_var -> . ID
    (70) printable_sentence_string -> . STRING

    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentence_var         shift and go to state 180
    printable_sentence_string      shift and go to state 181

state 162

    (71) alter -> ALTER LPARENT ID COMA ADD . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 182


state 163

    (72) alter -> ALTER LPARENT ID COMA SUB . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 183


state 164

    (73) alter -> ALTER LPARENT ID COMA MUL . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 184


state 165

    (74) alter -> ALTER LPARENT ID COMA DIV . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 185


state 166

    (75) alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CUT             reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 75 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)


state 167

    (92) signal -> SIGNAL LPARENT INTEGER COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 186


state 168

    (93) signal -> SIGNAL LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 187


state 169

    (94) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 94 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)


state 170

    (82) isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CUT             reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 82 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)


state 171

    (83) while -> WHILE sentences LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 188


state 172

    (96) cut -> CUT LPARENT ID COMA ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 189


state 173

    (95) cut -> CUT LPARENT ID COMA STRING . RPARENT SEMICOLON

    RPARENT         shift and go to state 190


state 174

    (97) recut -> RECUT LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    CUT             reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 97 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)


state 175

    (55) local_variable -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (56) local_variable -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 191


state 176

    (30) master_var -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (31) master_var -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON
    (32) master_var -> NEW ID COMA LPARENT TYPE COMA . STRING RPARENT SEMICOLON

    INTEGER         shift and go to state 192
    BOOL            shift and go to state 193
    STRING          shift and go to state 194


state 177

    (57) values -> VALUES LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 195


state 178

    (58) values -> VALUES LPARENT ID COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 196


state 179

    (88) recursive_condition -> condition LPARENT sentences RPARENT .

    SEMICOLON       reduce using rule 88 (recursive_condition -> condition LPARENT sentences RPARENT .)
    WHEN            reduce using rule 88 (recursive_condition -> condition LPARENT sentences RPARENT .)


state 180

    (67) printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var .

    RPARENT         reduce using rule 67 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var .)
    PLUS            reduce using rule 67 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var .)


state 181

    (68) printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string .

    RPARENT         reduce using rule 68 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string .)
    PLUS            reduce using rule 68 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string .)


state 182

    (71) alter -> ALTER LPARENT ID COMA ADD COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 197


state 183

    (72) alter -> ALTER LPARENT ID COMA SUB COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 198


state 184

    (73) alter -> ALTER LPARENT ID COMA MUL COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 199


state 185

    (74) alter -> ALTER LPARENT ID COMA DIV COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 200


state 186

    (92) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 201


state 187

    (93) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 202


state 188

    (83) while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .

    RPARENT         reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    VALUES          reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    CASE            reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    CALL            reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    ALTER           reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    ALTERB          reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    ID              reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    WHILE           reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    CUT             reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    RECUT           reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    LPARENT         reduce using rule 83 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)


state 189

    (96) cut -> CUT LPARENT ID COMA ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 203


state 190

    (95) cut -> CUT LPARENT ID COMA STRING RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 204


state 191

    (55) local_variable -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (56) local_variable -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 205
    BOOL            shift and go to state 206


state 192

    (30) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 207


state 193

    (31) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 208


state 194

    (32) master_var -> NEW ID COMA LPARENT TYPE COMA STRING . RPARENT SEMICOLON

    RPARENT         shift and go to state 209


state 195

    (57) values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 57 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 196

    (58) values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    WHILE           reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CUT             reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    RECUT           reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    LPARENT         reduce using rule 58 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)


state 197

    (71) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 210


state 198

    (72) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 211


state 199

    (73) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 212


state 200

    (74) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 213


state 201

    (92) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 92 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)


state 202

    (93) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 93 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 203

    (96) cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    NEW             reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    CASE            reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    CALL            reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    ID              reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    CUT             reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 96 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)


state 204

    (95) cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .

    RPARENT         reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    NEW             reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    VALUES          reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    CASE            reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    CALL            reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    ALTER           reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    ALTERB          reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    ID              reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    WHILE           reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    CUT             reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    RECUT           reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    LPARENT         reduce using rule 95 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)


state 205

    (55) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 214


state 206

    (56) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 215


state 207

    (30) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 216


state 208

    (31) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 217


state 209

    (32) master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 218


state 210

    (71) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 219


state 211

    (72) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 220


state 212

    (73) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 221


state 213

    (74) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 222


state 214

    (55) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 223


state 215

    (56) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 224


state 216

    (30) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 217

    (31) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    WHILE           reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CUT             reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    RECUT           reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)


state 218

    (32) master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .

    RPARENT         reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    NEW             reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    VALUES          reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CASE            reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CALL            reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ALTER           reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ALTERB          reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ID              reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    WHILE           reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CUT             reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    RECUT           reduce using rule 32 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)


state 219

    (71) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 71 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)


state 220

    (72) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 72 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)


state 221

    (73) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 73 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)


state 222

    (74) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 74 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)


state 223

    (55) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 224

    (56) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    WHILE           reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CUT             reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    RECUT           reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    LPARENT         reduce using rule 56 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEW in state 8 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 8 resolved as shift
WARNING: shift/reduce conflict for CASE in state 8 resolved as shift
WARNING: shift/reduce conflict for CALL in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 8 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 8 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 8 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 8 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for CUT in state 8 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 8 resolved as shift
WARNING: shift/reduce conflict for NEW in state 10 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 10 resolved as shift
WARNING: shift/reduce conflict for CASE in state 10 resolved as shift
WARNING: shift/reduce conflict for CALL in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 10 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 10 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 10 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 10 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for CUT in state 10 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 10 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 12 resolved as shift
WARNING: shift/reduce conflict for NEW in state 12 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 12 resolved as shift
WARNING: shift/reduce conflict for CASE in state 12 resolved as shift
WARNING: shift/reduce conflict for CALL in state 12 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 12 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 12 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 12 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 12 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 12 resolved as shift
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 12 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 12 resolved as shift
WARNING: shift/reduce conflict for CUT in state 12 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 12 resolved as shift
WARNING: shift/reduce conflict for NEW in state 45 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 45 resolved as shift
WARNING: shift/reduce conflict for CASE in state 45 resolved as shift
WARNING: shift/reduce conflict for CALL in state 45 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 45 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 45 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 45 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 45 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 45 resolved as shift
WARNING: shift/reduce conflict for ID in state 45 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 45 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 45 resolved as shift
WARNING: shift/reduce conflict for CUT in state 45 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 45 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 48 resolved as shift
WARNING: shift/reduce conflict for NEW in state 48 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 48 resolved as shift
WARNING: shift/reduce conflict for CASE in state 48 resolved as shift
WARNING: shift/reduce conflict for CALL in state 48 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 48 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 48 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 48 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 48 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 48 resolved as shift
WARNING: shift/reduce conflict for ID in state 48 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 48 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 48 resolved as shift
WARNING: shift/reduce conflict for CUT in state 48 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 48 resolved as shift
WARNING: shift/reduce conflict for LPARENT in state 90 resolved as shift
WARNING: shift/reduce conflict for NEW in state 90 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 90 resolved as shift
WARNING: shift/reduce conflict for CASE in state 90 resolved as shift
WARNING: shift/reduce conflict for CALL in state 90 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 90 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 90 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 90 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 90 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 90 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 90 resolved as shift
WARNING: shift/reduce conflict for CUT in state 90 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 112 resolved as shift
WARNING: shift/reduce conflict for NEW in state 122 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 122 resolved as shift
WARNING: shift/reduce conflict for CASE in state 122 resolved as shift
WARNING: shift/reduce conflict for CALL in state 122 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 122 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 122 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 122 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 122 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 122 resolved as shift
WARNING: shift/reduce conflict for ID in state 122 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 122 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 122 resolved as shift
WARNING: shift/reduce conflict for CUT in state 122 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 122 resolved as shift
WARNING: shift/reduce conflict for NEW in state 131 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 131 resolved as shift
WARNING: shift/reduce conflict for CASE in state 131 resolved as shift
WARNING: shift/reduce conflict for CALL in state 131 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 131 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 131 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 131 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 131 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 131 resolved as shift
WARNING: shift/reduce conflict for ID in state 131 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 131 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 131 resolved as shift
WARNING: shift/reduce conflict for CUT in state 131 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 131 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 145 resolved as shift
WARNING: shift/reduce conflict for NEW in state 145 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 145 resolved as shift
WARNING: shift/reduce conflict for CASE in state 145 resolved as shift
WARNING: shift/reduce conflict for CALL in state 145 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 145 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 145 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 145 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 145 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 145 resolved as shift
WARNING: shift/reduce conflict for ID in state 145 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 145 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 145 resolved as shift
WARNING: shift/reduce conflict for CUT in state 145 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 145 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 152 resolved as shift
WARNING: shift/reduce conflict for NEW in state 152 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 152 resolved as shift
WARNING: shift/reduce conflict for CASE in state 152 resolved as shift
WARNING: shift/reduce conflict for CALL in state 152 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 152 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 152 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 152 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 152 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 152 resolved as shift
WARNING: shift/reduce conflict for ID in state 152 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 152 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 152 resolved as shift
WARNING: shift/reduce conflict for CUT in state 152 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 152 resolved as shift
