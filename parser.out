Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROBA
    COMMENT
    ELSE
    PLUS

Grammar

Rule 0     S' -> start
Rule 1     start -> master
Rule 2     start -> master procedures
Rule 3     start -> master master_vars procedures
Rule 4     start -> master_vars master
Rule 5     start -> master_vars master master_vars
Rule 6     start -> master_vars master master_vars procedures
Rule 7     start -> master_vars master master_vars procedures master_vars
Rule 8     start -> master_vars master procedures
Rule 9     start -> master_vars master procedures master_vars
Rule 10    declare_procedure -> PROC ID
Rule 11    procedures -> procedure
Rule 12    procedures -> procedures procedure
Rule 13    procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON
Rule 14    master -> MASTER LPARENT master_sentences RPARENT SEMICOLON
Rule 15    master_sentences -> master_sentence
Rule 16    master_sentences -> master_sentences master_sentence
Rule 17    master_sentence -> master_var
Rule 18    master_sentence -> values
Rule 19    master_sentence -> call
Rule 20    master_sentence -> print_values
Rule 21    master_sentence -> alter
Rule 22    master_sentence -> alterB
Rule 23    master_sentence -> comparisson_maq
Rule 24    master_sentence -> comparisson_meq
Rule 25    master_sentence -> comparisson_equal
Rule 26    master_sentence -> comparisson_dif
Rule 27    master_sentence -> comparisson_meqequal
Rule 28    master_sentence -> comparisson_maqequal
Rule 29    master_sentence -> isTrue
Rule 30    master_sentence -> signal
Rule 31    master_sentence -> viewsignal
Rule 32    master_sentence -> cut
Rule 33    master_sentence -> recut
Rule 34    master_sentence -> case
Rule 35    master_sentence -> while
Rule 36    master_sentence -> repeat
Rule 37    master_sentence -> until
Rule 38    master_sentence -> break
Rule 39    master_sentence -> empty
Rule 40    master_vars -> master_var
Rule 41    master_vars -> master_vars master_var
Rule 42    master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 43    master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 44    master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
Rule 45    sentences -> sentence
Rule 46    sentences -> sentences sentence
Rule 47    sentence -> local_variable
Rule 48    sentence -> values
Rule 49    sentence -> call
Rule 50    sentence -> print_values
Rule 51    sentence -> alter
Rule 52    sentence -> alterB
Rule 53    sentence -> comparisson_maq
Rule 54    sentence -> comparisson_meq
Rule 55    sentence -> comparisson_equal
Rule 56    sentence -> comparisson_dif
Rule 57    sentence -> comparisson_meqequal
Rule 58    sentence -> comparisson_maqequal
Rule 59    sentence -> isTrue
Rule 60    sentence -> signal
Rule 61    sentence -> viewsignal
Rule 62    sentence -> cut
Rule 63    sentence -> recut
Rule 64    sentence -> case
Rule 65    sentence -> while
Rule 66    sentence -> until
Rule 67    sentence -> repeat
Rule 68    sentence -> break
Rule 69    sentence -> empty
Rule 70    return_statement -> isTrue
Rule 71    return_statement -> comparisson_maqequal
Rule 72    return_statement -> comparisson_meqequal
Rule 73    return_statement -> comparisson_dif
Rule 74    return_statement -> comparisson_equal
Rule 75    return_statement -> comparisson_meq
Rule 76    return_statement -> comparisson_maq
Rule 77    return_statement -> alterB
Rule 78    return_statement -> alter
Rule 79    local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 80    local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 81    local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
Rule 82    values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 83    values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
Rule 84    values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
Rule 85    call -> CALL LPARENT ID RPARENT SEMICOLON
Rule 86    print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
Rule 87    printable_sentences -> printable_sentence_var
Rule 88    printable_sentences -> printable_sentence_string
Rule 89    printable_sentences -> printable_sentence_var COMA printable_sentence_var
Rule 90    printable_sentences -> printable_sentence_string COMA printable_sentence_string
Rule 91    printable_sentences -> printable_sentence_var COMA printable_sentence_string
Rule 92    printable_sentences -> printable_sentence_string COMA printable_sentence_var
Rule 93    printable_sentences -> printable_sentences COMA printable_sentence_var
Rule 94    printable_sentences -> printable_sentences COMA printable_sentence_string
Rule 95    printable_sentences -> COMA printable_sentences COMA printable_sentence_var
Rule 96    printable_sentences -> COMA printable_sentences COMA printable_sentence_string
Rule 97    printable_sentence_var -> ID
Rule 98    printable_sentence_string -> STRING
Rule 99    alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
Rule 100   alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
Rule 101   alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
Rule 102   alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
Rule 103   alterB -> ALTERB LPARENT ID RPARENT SEMICOLON
Rule 104   comparisson_maq -> ID MAQ INTEGER
Rule 105   comparisson_meq -> ID MEQ INTEGER
Rule 106   comparisson_equal -> ID EQUAL INTEGER
Rule 107   comparisson_dif -> ID DIFFERENT INTEGER
Rule 108   comparisson_meqequal -> ID MEQEQUAL INTEGER
Rule 109   comparisson_maqequal -> ID MAQEQUAL INTEGER
Rule 110   isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON
Rule 111   signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
Rule 112   signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 113   viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
Rule 114   while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON
Rule 115   while_handler -> WHILE
Rule 116   until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON
Rule 117   until_handler -> UNTIL
Rule 118   repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON
Rule 119   repeat_handler -> REPEAT
Rule 120   break -> BREAK SEMICOLON
Rule 121   case -> CASE expression recursive_conditions SEMICOLON
Rule 122   else_condition -> LPARENT sentences RPARENT
Rule 123   recursive_conditions -> recursive_condition
Rule 124   recursive_conditions -> recursive_conditions recursive_condition
Rule 125   recursive_condition -> condition LPARENT sentences RPARENT
Rule 126   expression -> ID
Rule 127   condition -> WHEN INTEGER THEN
Rule 128   condition -> WHEN STRING THEN
Rule 129   cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON
Rule 130   cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON
Rule 131   recut -> RECUT LPARENT ID RPARENT SEMICOLON
Rule 132   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 99
ALTER                : 99 100 101 102
ALTERB               : 103
ARROBA               : 
BOOL                 : 43 80 83
BREAK                : 120
CALL                 : 85
CASE                 : 121
COMA                 : 42 42 43 43 44 44 79 79 80 80 81 81 82 83 84 89 90 91 92 93 94 95 95 96 96 99 99 100 100 101 101 102 102 111 112 129 130
COMMENT              : 
CUT                  : 129 130
DIFFERENT            : 107
DIV                  : 102
ELSE                 : 
EQUAL                : 106
ID                   : 10 42 43 44 79 80 81 82 83 84 85 97 99 100 101 102 103 104 105 106 107 108 109 110 112 126 129 130 130 131
INTEGER              : 42 79 82 99 100 101 102 104 105 106 107 108 109 111 111 112 113 127
ISTRUE               : 110
LPARENT              : 13 14 42 43 44 79 80 81 82 83 84 85 86 99 100 101 102 103 110 111 112 113 114 116 118 122 125 129 130 131
MAQ                  : 104
MAQEQUAL             : 109
MASTER               : 14
MEQ                  : 105
MEQEQUAL             : 108
MUL                  : 101
NEW                  : 42 43 44 79 80 81
PLUS                 : 
PRINTVALUES          : 86
PROC                 : 10
RECUT                : 131
REPEAT               : 119
RPARENT              : 13 14 42 43 44 79 80 81 82 83 84 85 86 99 100 101 102 103 110 111 112 113 114 116 118 122 125 129 130 131
SEMICOLON            : 13 14 42 43 44 79 80 81 82 83 84 85 86 99 100 101 102 103 110 111 112 113 114 116 118 120 121 129 130 131
SIGNAL               : 111 112
STRING               : 44 81 98 128 129
SUB                  : 100
THEN                 : 127 128
TYPE                 : 42 43 44 79 80 81
UNTIL                : 117
VALUES               : 82 83 84
VIEWSIGNAL           : 113
WHEN                 : 127 128
WHILE                : 115
error                : 

Nonterminals, with rules where they appear

alter                : 21 51 78
alterB               : 22 52 77
break                : 38 68
call                 : 19 49
case                 : 34 64
comparisson_dif      : 26 56 73
comparisson_equal    : 25 55 74
comparisson_maq      : 23 53 76
comparisson_maqequal : 28 58 71
comparisson_meq      : 24 54 75
comparisson_meqequal : 27 57 72
condition            : 125
cut                  : 32 62
declare_procedure    : 13
else_condition       : 
empty                : 39 69
expression           : 121
isTrue               : 29 59 70
local_variable       : 47
master               : 1 2 3 4 5 6 7 8 9
master_sentence      : 15 16
master_sentences     : 14 16
master_var           : 17 40 41
master_vars          : 3 4 5 5 6 6 7 7 7 8 9 9 41
print_values         : 20 50
printable_sentence_string : 88 90 90 91 92 94 96
printable_sentence_var : 87 89 89 91 92 93 95
printable_sentences  : 86 93 94 95 96
procedure            : 11 12
procedures           : 2 3 6 7 8 9 12
recursive_condition  : 123 124
recursive_conditions : 121 124
recut                : 33 63
repeat               : 36 67
repeat_handler       : 118
return_statement     : 84
sentence             : 45 46 114 116
sentences            : 13 46 114 116 118 122 125
signal               : 30 60
start                : 0
until                : 37 66
until_handler        : 116
values               : 18 48
viewsignal           : 31 61
while                : 35 65
while_handler        : 114

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . master
    (2) start -> . master procedures
    (3) start -> . master master_vars procedures
    (4) start -> . master_vars master
    (5) start -> . master_vars master master_vars
    (6) start -> . master_vars master master_vars procedures
    (7) start -> . master_vars master master_vars procedures master_vars
    (8) start -> . master_vars master procedures
    (9) start -> . master_vars master procedures master_vars
    (14) master -> . MASTER LPARENT master_sentences RPARENT SEMICOLON
    (40) master_vars -> . master_var
    (41) master_vars -> . master_vars master_var
    (42) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    MASTER          shift and go to state 4
    NEW             shift and go to state 6

    start                          shift and go to state 1
    master                         shift and go to state 2
    master_vars                    shift and go to state 3
    master_var                     shift and go to state 5

state 1

    (0) S' -> start .



state 2

    (1) start -> master .
    (2) start -> master . procedures
    (3) start -> master . master_vars procedures
    (11) procedures -> . procedure
    (12) procedures -> . procedures procedure
    (40) master_vars -> . master_var
    (41) master_vars -> . master_vars master_var
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (42) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 1 (start -> master .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    procedures                     shift and go to state 7
    master_vars                    shift and go to state 8
    procedure                      shift and go to state 9
    master_var                     shift and go to state 5
    declare_procedure              shift and go to state 10

state 3

    (4) start -> master_vars . master
    (5) start -> master_vars . master master_vars
    (6) start -> master_vars . master master_vars procedures
    (7) start -> master_vars . master master_vars procedures master_vars
    (8) start -> master_vars . master procedures
    (9) start -> master_vars . master procedures master_vars
    (41) master_vars -> master_vars . master_var
    (14) master -> . MASTER LPARENT master_sentences RPARENT SEMICOLON
    (42) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    MASTER          shift and go to state 4
    NEW             shift and go to state 6

    master                         shift and go to state 12
    master_var                     shift and go to state 13

state 4

    (14) master -> MASTER . LPARENT master_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 14


state 5

    (40) master_vars -> master_var .

    MASTER          reduce using rule 40 (master_vars -> master_var .)
    NEW             reduce using rule 40 (master_vars -> master_var .)
    PROC            reduce using rule 40 (master_vars -> master_var .)
    $end            reduce using rule 40 (master_vars -> master_var .)


state 6

    (42) master_var -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> NEW . ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    ID              shift and go to state 15


state 7

    (2) start -> master procedures .
    (12) procedures -> procedures . procedure
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 2 (start -> master procedures .)
    PROC            shift and go to state 11

    procedure                      shift and go to state 16
    declare_procedure              shift and go to state 10

state 8

    (3) start -> master master_vars . procedures
    (41) master_vars -> master_vars . master_var
    (11) procedures -> . procedure
    (12) procedures -> . procedures procedure
    (42) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    NEW             shift and go to state 6
    PROC            shift and go to state 11

    procedures                     shift and go to state 17
    master_var                     shift and go to state 13
    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 10

state 9

    (11) procedures -> procedure .

    PROC            reduce using rule 11 (procedures -> procedure .)
    $end            reduce using rule 11 (procedures -> procedure .)
    NEW             reduce using rule 11 (procedures -> procedure .)


state 10

    (13) procedure -> declare_procedure . LPARENT sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 18


state 11

    (10) declare_procedure -> PROC . ID

    ID              shift and go to state 19


state 12

    (4) start -> master_vars master .
    (5) start -> master_vars master . master_vars
    (6) start -> master_vars master . master_vars procedures
    (7) start -> master_vars master . master_vars procedures master_vars
    (8) start -> master_vars master . procedures
    (9) start -> master_vars master . procedures master_vars
    (40) master_vars -> . master_var
    (41) master_vars -> . master_vars master_var
    (11) procedures -> . procedure
    (12) procedures -> . procedures procedure
    (42) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 4 (start -> master_vars master .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    master_vars                    shift and go to state 20
    procedures                     shift and go to state 21
    master_var                     shift and go to state 5
    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 10

state 13

    (41) master_vars -> master_vars master_var .

    MASTER          reduce using rule 41 (master_vars -> master_vars master_var .)
    NEW             reduce using rule 41 (master_vars -> master_vars master_var .)
    PROC            reduce using rule 41 (master_vars -> master_vars master_var .)
    $end            reduce using rule 41 (master_vars -> master_vars master_var .)


state 14

    (14) master -> MASTER LPARENT . master_sentences RPARENT SEMICOLON
    (15) master_sentences -> . master_sentence
    (16) master_sentences -> . master_sentences master_sentence
    (17) master_sentence -> . master_var
    (18) master_sentence -> . values
    (19) master_sentence -> . call
    (20) master_sentence -> . print_values
    (21) master_sentence -> . alter
    (22) master_sentence -> . alterB
    (23) master_sentence -> . comparisson_maq
    (24) master_sentence -> . comparisson_meq
    (25) master_sentence -> . comparisson_equal
    (26) master_sentence -> . comparisson_dif
    (27) master_sentence -> . comparisson_meqequal
    (28) master_sentence -> . comparisson_maqequal
    (29) master_sentence -> . isTrue
    (30) master_sentence -> . signal
    (31) master_sentence -> . viewsignal
    (32) master_sentence -> . cut
    (33) master_sentence -> . recut
    (34) master_sentence -> . case
    (35) master_sentence -> . while
    (36) master_sentence -> . repeat
    (37) master_sentence -> . until
    (38) master_sentence -> . break
    (39) master_sentence -> . empty
    (42) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (119) repeat_handler -> . REPEAT
    (117) until_handler -> . UNTIL

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    NEW             shift and go to state 6
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    RPARENT         reduce using rule 132 (empty -> .)
    WHILE           shift and go to state 63
    REPEAT          shift and go to state 64
    UNTIL           shift and go to state 65

  ! NEW             [ reduce using rule 132 (empty -> .) ]
  ! VALUES          [ reduce using rule 132 (empty -> .) ]
  ! CALL            [ reduce using rule 132 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 132 (empty -> .) ]
  ! ALTER           [ reduce using rule 132 (empty -> .) ]
  ! ALTERB          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 132 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 132 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 132 (empty -> .) ]
  ! CUT             [ reduce using rule 132 (empty -> .) ]
  ! RECUT           [ reduce using rule 132 (empty -> .) ]
  ! CASE            [ reduce using rule 132 (empty -> .) ]
  ! BREAK           [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! REPEAT          [ reduce using rule 132 (empty -> .) ]
  ! UNTIL           [ reduce using rule 132 (empty -> .) ]

    master_sentences               shift and go to state 22
    master_sentence                shift and go to state 23
    master_var                     shift and go to state 24
    values                         shift and go to state 25
    call                           shift and go to state 26
    print_values                   shift and go to state 27
    alter                          shift and go to state 28
    alterB                         shift and go to state 29
    comparisson_maq                shift and go to state 30
    comparisson_meq                shift and go to state 31
    comparisson_equal              shift and go to state 32
    comparisson_dif                shift and go to state 33
    comparisson_meqequal           shift and go to state 34
    comparisson_maqequal           shift and go to state 35
    isTrue                         shift and go to state 36
    signal                         shift and go to state 37
    viewsignal                     shift and go to state 38
    cut                            shift and go to state 39
    recut                          shift and go to state 40
    case                           shift and go to state 41
    while                          shift and go to state 42
    repeat                         shift and go to state 43
    until                          shift and go to state 44
    break                          shift and go to state 45
    empty                          shift and go to state 46
    while_handler                  shift and go to state 59
    repeat_handler                 shift and go to state 60
    until_handler                  shift and go to state 61

state 15

    (42) master_var -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> NEW ID . COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    COMA            shift and go to state 66


state 16

    (12) procedures -> procedures procedure .

    PROC            reduce using rule 12 (procedures -> procedures procedure .)
    $end            reduce using rule 12 (procedures -> procedures procedure .)
    NEW             reduce using rule 12 (procedures -> procedures procedure .)


state 17

    (3) start -> master master_vars procedures .
    (12) procedures -> procedures . procedure
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 3 (start -> master master_vars procedures .)
    PROC            shift and go to state 11

    procedure                      shift and go to state 16
    declare_procedure              shift and go to state 10

state 18

    (13) procedure -> declare_procedure LPARENT . sentences RPARENT SEMICOLON
    (45) sentences -> . sentence
    (46) sentences -> . sentences sentence
    (47) sentence -> . local_variable
    (48) sentence -> . values
    (49) sentence -> . call
    (50) sentence -> . print_values
    (51) sentence -> . alter
    (52) sentence -> . alterB
    (53) sentence -> . comparisson_maq
    (54) sentence -> . comparisson_meq
    (55) sentence -> . comparisson_equal
    (56) sentence -> . comparisson_dif
    (57) sentence -> . comparisson_meqequal
    (58) sentence -> . comparisson_maqequal
    (59) sentence -> . isTrue
    (60) sentence -> . signal
    (61) sentence -> . viewsignal
    (62) sentence -> . cut
    (63) sentence -> . recut
    (64) sentence -> . case
    (65) sentence -> . while
    (66) sentence -> . until
    (67) sentence -> . repeat
    (68) sentence -> . break
    (69) sentence -> . empty
    (79) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (117) until_handler -> . UNTIL
    (119) repeat_handler -> . REPEAT

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
    NEW             shift and go to state 92
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    RPARENT         reduce using rule 132 (empty -> .)
    WHILE           shift and go to state 63
    UNTIL           shift and go to state 65
    REPEAT          shift and go to state 64

  ! NEW             [ reduce using rule 132 (empty -> .) ]
  ! VALUES          [ reduce using rule 132 (empty -> .) ]
  ! CALL            [ reduce using rule 132 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 132 (empty -> .) ]
  ! ALTER           [ reduce using rule 132 (empty -> .) ]
  ! ALTERB          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 132 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 132 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 132 (empty -> .) ]
  ! CUT             [ reduce using rule 132 (empty -> .) ]
  ! RECUT           [ reduce using rule 132 (empty -> .) ]
  ! CASE            [ reduce using rule 132 (empty -> .) ]
  ! BREAK           [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! UNTIL           [ reduce using rule 132 (empty -> .) ]
  ! REPEAT          [ reduce using rule 132 (empty -> .) ]

    sentences                      shift and go to state 67
    sentence                       shift and go to state 68
    local_variable                 shift and go to state 69
    values                         shift and go to state 70
    call                           shift and go to state 71
    print_values                   shift and go to state 72
    alter                          shift and go to state 73
    alterB                         shift and go to state 74
    comparisson_maq                shift and go to state 75
    comparisson_meq                shift and go to state 76
    comparisson_equal              shift and go to state 77
    comparisson_dif                shift and go to state 78
    comparisson_meqequal           shift and go to state 79
    comparisson_maqequal           shift and go to state 80
    isTrue                         shift and go to state 81
    signal                         shift and go to state 82
    viewsignal                     shift and go to state 83
    cut                            shift and go to state 84
    recut                          shift and go to state 85
    case                           shift and go to state 86
    while                          shift and go to state 87
    until                          shift and go to state 88
    repeat                         shift and go to state 89
    break                          shift and go to state 90
    empty                          shift and go to state 91
    while_handler                  shift and go to state 59
    until_handler                  shift and go to state 61
    repeat_handler                 shift and go to state 60

state 19

    (10) declare_procedure -> PROC ID .

    LPARENT         reduce using rule 10 (declare_procedure -> PROC ID .)


state 20

    (5) start -> master_vars master master_vars .
    (6) start -> master_vars master master_vars . procedures
    (7) start -> master_vars master master_vars . procedures master_vars
    (41) master_vars -> master_vars . master_var
    (11) procedures -> . procedure
    (12) procedures -> . procedures procedure
    (42) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 5 (start -> master_vars master master_vars .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    procedures                     shift and go to state 93
    master_var                     shift and go to state 13
    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 10

state 21

    (8) start -> master_vars master procedures .
    (9) start -> master_vars master procedures . master_vars
    (12) procedures -> procedures . procedure
    (40) master_vars -> . master_var
    (41) master_vars -> . master_vars master_var
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (42) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 8 (start -> master_vars master procedures .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    master_vars                    shift and go to state 94
    procedure                      shift and go to state 16
    master_var                     shift and go to state 5
    declare_procedure              shift and go to state 10

state 22

    (14) master -> MASTER LPARENT master_sentences . RPARENT SEMICOLON
    (16) master_sentences -> master_sentences . master_sentence
    (17) master_sentence -> . master_var
    (18) master_sentence -> . values
    (19) master_sentence -> . call
    (20) master_sentence -> . print_values
    (21) master_sentence -> . alter
    (22) master_sentence -> . alterB
    (23) master_sentence -> . comparisson_maq
    (24) master_sentence -> . comparisson_meq
    (25) master_sentence -> . comparisson_equal
    (26) master_sentence -> . comparisson_dif
    (27) master_sentence -> . comparisson_meqequal
    (28) master_sentence -> . comparisson_maqequal
    (29) master_sentence -> . isTrue
    (30) master_sentence -> . signal
    (31) master_sentence -> . viewsignal
    (32) master_sentence -> . cut
    (33) master_sentence -> . recut
    (34) master_sentence -> . case
    (35) master_sentence -> . while
    (36) master_sentence -> . repeat
    (37) master_sentence -> . until
    (38) master_sentence -> . break
    (39) master_sentence -> . empty
    (42) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (119) repeat_handler -> . REPEAT
    (117) until_handler -> . UNTIL

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    RPARENT         shift and go to state 95
    NEW             shift and go to state 6
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    WHILE           shift and go to state 63
    REPEAT          shift and go to state 64
    UNTIL           shift and go to state 65

  ! RPARENT         [ reduce using rule 132 (empty -> .) ]
  ! NEW             [ reduce using rule 132 (empty -> .) ]
  ! VALUES          [ reduce using rule 132 (empty -> .) ]
  ! CALL            [ reduce using rule 132 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 132 (empty -> .) ]
  ! ALTER           [ reduce using rule 132 (empty -> .) ]
  ! ALTERB          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 132 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 132 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 132 (empty -> .) ]
  ! CUT             [ reduce using rule 132 (empty -> .) ]
  ! RECUT           [ reduce using rule 132 (empty -> .) ]
  ! CASE            [ reduce using rule 132 (empty -> .) ]
  ! BREAK           [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! REPEAT          [ reduce using rule 132 (empty -> .) ]
  ! UNTIL           [ reduce using rule 132 (empty -> .) ]

    master_sentence                shift and go to state 96
    master_var                     shift and go to state 24
    values                         shift and go to state 25
    call                           shift and go to state 26
    print_values                   shift and go to state 27
    alter                          shift and go to state 28
    alterB                         shift and go to state 29
    comparisson_maq                shift and go to state 30
    comparisson_meq                shift and go to state 31
    comparisson_equal              shift and go to state 32
    comparisson_dif                shift and go to state 33
    comparisson_meqequal           shift and go to state 34
    comparisson_maqequal           shift and go to state 35
    isTrue                         shift and go to state 36
    signal                         shift and go to state 37
    viewsignal                     shift and go to state 38
    cut                            shift and go to state 39
    recut                          shift and go to state 40
    case                           shift and go to state 41
    while                          shift and go to state 42
    repeat                         shift and go to state 43
    until                          shift and go to state 44
    break                          shift and go to state 45
    empty                          shift and go to state 46
    while_handler                  shift and go to state 59
    repeat_handler                 shift and go to state 60
    until_handler                  shift and go to state 61

state 23

    (15) master_sentences -> master_sentence .

    RPARENT         reduce using rule 15 (master_sentences -> master_sentence .)
    NEW             reduce using rule 15 (master_sentences -> master_sentence .)
    VALUES          reduce using rule 15 (master_sentences -> master_sentence .)
    CALL            reduce using rule 15 (master_sentences -> master_sentence .)
    PRINTVALUES     reduce using rule 15 (master_sentences -> master_sentence .)
    ALTER           reduce using rule 15 (master_sentences -> master_sentence .)
    ALTERB          reduce using rule 15 (master_sentences -> master_sentence .)
    ID              reduce using rule 15 (master_sentences -> master_sentence .)
    ISTRUE          reduce using rule 15 (master_sentences -> master_sentence .)
    SIGNAL          reduce using rule 15 (master_sentences -> master_sentence .)
    VIEWSIGNAL      reduce using rule 15 (master_sentences -> master_sentence .)
    CUT             reduce using rule 15 (master_sentences -> master_sentence .)
    RECUT           reduce using rule 15 (master_sentences -> master_sentence .)
    CASE            reduce using rule 15 (master_sentences -> master_sentence .)
    BREAK           reduce using rule 15 (master_sentences -> master_sentence .)
    WHILE           reduce using rule 15 (master_sentences -> master_sentence .)
    REPEAT          reduce using rule 15 (master_sentences -> master_sentence .)
    UNTIL           reduce using rule 15 (master_sentences -> master_sentence .)


state 24

    (17) master_sentence -> master_var .

    RPARENT         reduce using rule 17 (master_sentence -> master_var .)
    NEW             reduce using rule 17 (master_sentence -> master_var .)
    VALUES          reduce using rule 17 (master_sentence -> master_var .)
    CALL            reduce using rule 17 (master_sentence -> master_var .)
    PRINTVALUES     reduce using rule 17 (master_sentence -> master_var .)
    ALTER           reduce using rule 17 (master_sentence -> master_var .)
    ALTERB          reduce using rule 17 (master_sentence -> master_var .)
    ID              reduce using rule 17 (master_sentence -> master_var .)
    ISTRUE          reduce using rule 17 (master_sentence -> master_var .)
    SIGNAL          reduce using rule 17 (master_sentence -> master_var .)
    VIEWSIGNAL      reduce using rule 17 (master_sentence -> master_var .)
    CUT             reduce using rule 17 (master_sentence -> master_var .)
    RECUT           reduce using rule 17 (master_sentence -> master_var .)
    CASE            reduce using rule 17 (master_sentence -> master_var .)
    BREAK           reduce using rule 17 (master_sentence -> master_var .)
    WHILE           reduce using rule 17 (master_sentence -> master_var .)
    REPEAT          reduce using rule 17 (master_sentence -> master_var .)
    UNTIL           reduce using rule 17 (master_sentence -> master_var .)


state 25

    (18) master_sentence -> values .

    RPARENT         reduce using rule 18 (master_sentence -> values .)
    NEW             reduce using rule 18 (master_sentence -> values .)
    VALUES          reduce using rule 18 (master_sentence -> values .)
    CALL            reduce using rule 18 (master_sentence -> values .)
    PRINTVALUES     reduce using rule 18 (master_sentence -> values .)
    ALTER           reduce using rule 18 (master_sentence -> values .)
    ALTERB          reduce using rule 18 (master_sentence -> values .)
    ID              reduce using rule 18 (master_sentence -> values .)
    ISTRUE          reduce using rule 18 (master_sentence -> values .)
    SIGNAL          reduce using rule 18 (master_sentence -> values .)
    VIEWSIGNAL      reduce using rule 18 (master_sentence -> values .)
    CUT             reduce using rule 18 (master_sentence -> values .)
    RECUT           reduce using rule 18 (master_sentence -> values .)
    CASE            reduce using rule 18 (master_sentence -> values .)
    BREAK           reduce using rule 18 (master_sentence -> values .)
    WHILE           reduce using rule 18 (master_sentence -> values .)
    REPEAT          reduce using rule 18 (master_sentence -> values .)
    UNTIL           reduce using rule 18 (master_sentence -> values .)


state 26

    (19) master_sentence -> call .

    RPARENT         reduce using rule 19 (master_sentence -> call .)
    NEW             reduce using rule 19 (master_sentence -> call .)
    VALUES          reduce using rule 19 (master_sentence -> call .)
    CALL            reduce using rule 19 (master_sentence -> call .)
    PRINTVALUES     reduce using rule 19 (master_sentence -> call .)
    ALTER           reduce using rule 19 (master_sentence -> call .)
    ALTERB          reduce using rule 19 (master_sentence -> call .)
    ID              reduce using rule 19 (master_sentence -> call .)
    ISTRUE          reduce using rule 19 (master_sentence -> call .)
    SIGNAL          reduce using rule 19 (master_sentence -> call .)
    VIEWSIGNAL      reduce using rule 19 (master_sentence -> call .)
    CUT             reduce using rule 19 (master_sentence -> call .)
    RECUT           reduce using rule 19 (master_sentence -> call .)
    CASE            reduce using rule 19 (master_sentence -> call .)
    BREAK           reduce using rule 19 (master_sentence -> call .)
    WHILE           reduce using rule 19 (master_sentence -> call .)
    REPEAT          reduce using rule 19 (master_sentence -> call .)
    UNTIL           reduce using rule 19 (master_sentence -> call .)


state 27

    (20) master_sentence -> print_values .

    RPARENT         reduce using rule 20 (master_sentence -> print_values .)
    NEW             reduce using rule 20 (master_sentence -> print_values .)
    VALUES          reduce using rule 20 (master_sentence -> print_values .)
    CALL            reduce using rule 20 (master_sentence -> print_values .)
    PRINTVALUES     reduce using rule 20 (master_sentence -> print_values .)
    ALTER           reduce using rule 20 (master_sentence -> print_values .)
    ALTERB          reduce using rule 20 (master_sentence -> print_values .)
    ID              reduce using rule 20 (master_sentence -> print_values .)
    ISTRUE          reduce using rule 20 (master_sentence -> print_values .)
    SIGNAL          reduce using rule 20 (master_sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 20 (master_sentence -> print_values .)
    CUT             reduce using rule 20 (master_sentence -> print_values .)
    RECUT           reduce using rule 20 (master_sentence -> print_values .)
    CASE            reduce using rule 20 (master_sentence -> print_values .)
    BREAK           reduce using rule 20 (master_sentence -> print_values .)
    WHILE           reduce using rule 20 (master_sentence -> print_values .)
    REPEAT          reduce using rule 20 (master_sentence -> print_values .)
    UNTIL           reduce using rule 20 (master_sentence -> print_values .)


state 28

    (21) master_sentence -> alter .

    RPARENT         reduce using rule 21 (master_sentence -> alter .)
    NEW             reduce using rule 21 (master_sentence -> alter .)
    VALUES          reduce using rule 21 (master_sentence -> alter .)
    CALL            reduce using rule 21 (master_sentence -> alter .)
    PRINTVALUES     reduce using rule 21 (master_sentence -> alter .)
    ALTER           reduce using rule 21 (master_sentence -> alter .)
    ALTERB          reduce using rule 21 (master_sentence -> alter .)
    ID              reduce using rule 21 (master_sentence -> alter .)
    ISTRUE          reduce using rule 21 (master_sentence -> alter .)
    SIGNAL          reduce using rule 21 (master_sentence -> alter .)
    VIEWSIGNAL      reduce using rule 21 (master_sentence -> alter .)
    CUT             reduce using rule 21 (master_sentence -> alter .)
    RECUT           reduce using rule 21 (master_sentence -> alter .)
    CASE            reduce using rule 21 (master_sentence -> alter .)
    BREAK           reduce using rule 21 (master_sentence -> alter .)
    WHILE           reduce using rule 21 (master_sentence -> alter .)
    REPEAT          reduce using rule 21 (master_sentence -> alter .)
    UNTIL           reduce using rule 21 (master_sentence -> alter .)


state 29

    (22) master_sentence -> alterB .

    RPARENT         reduce using rule 22 (master_sentence -> alterB .)
    NEW             reduce using rule 22 (master_sentence -> alterB .)
    VALUES          reduce using rule 22 (master_sentence -> alterB .)
    CALL            reduce using rule 22 (master_sentence -> alterB .)
    PRINTVALUES     reduce using rule 22 (master_sentence -> alterB .)
    ALTER           reduce using rule 22 (master_sentence -> alterB .)
    ALTERB          reduce using rule 22 (master_sentence -> alterB .)
    ID              reduce using rule 22 (master_sentence -> alterB .)
    ISTRUE          reduce using rule 22 (master_sentence -> alterB .)
    SIGNAL          reduce using rule 22 (master_sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 22 (master_sentence -> alterB .)
    CUT             reduce using rule 22 (master_sentence -> alterB .)
    RECUT           reduce using rule 22 (master_sentence -> alterB .)
    CASE            reduce using rule 22 (master_sentence -> alterB .)
    BREAK           reduce using rule 22 (master_sentence -> alterB .)
    WHILE           reduce using rule 22 (master_sentence -> alterB .)
    REPEAT          reduce using rule 22 (master_sentence -> alterB .)
    UNTIL           reduce using rule 22 (master_sentence -> alterB .)


state 30

    (23) master_sentence -> comparisson_maq .

    RPARENT         reduce using rule 23 (master_sentence -> comparisson_maq .)
    NEW             reduce using rule 23 (master_sentence -> comparisson_maq .)
    VALUES          reduce using rule 23 (master_sentence -> comparisson_maq .)
    CALL            reduce using rule 23 (master_sentence -> comparisson_maq .)
    PRINTVALUES     reduce using rule 23 (master_sentence -> comparisson_maq .)
    ALTER           reduce using rule 23 (master_sentence -> comparisson_maq .)
    ALTERB          reduce using rule 23 (master_sentence -> comparisson_maq .)
    ID              reduce using rule 23 (master_sentence -> comparisson_maq .)
    ISTRUE          reduce using rule 23 (master_sentence -> comparisson_maq .)
    SIGNAL          reduce using rule 23 (master_sentence -> comparisson_maq .)
    VIEWSIGNAL      reduce using rule 23 (master_sentence -> comparisson_maq .)
    CUT             reduce using rule 23 (master_sentence -> comparisson_maq .)
    RECUT           reduce using rule 23 (master_sentence -> comparisson_maq .)
    CASE            reduce using rule 23 (master_sentence -> comparisson_maq .)
    BREAK           reduce using rule 23 (master_sentence -> comparisson_maq .)
    WHILE           reduce using rule 23 (master_sentence -> comparisson_maq .)
    REPEAT          reduce using rule 23 (master_sentence -> comparisson_maq .)
    UNTIL           reduce using rule 23 (master_sentence -> comparisson_maq .)


state 31

    (24) master_sentence -> comparisson_meq .

    RPARENT         reduce using rule 24 (master_sentence -> comparisson_meq .)
    NEW             reduce using rule 24 (master_sentence -> comparisson_meq .)
    VALUES          reduce using rule 24 (master_sentence -> comparisson_meq .)
    CALL            reduce using rule 24 (master_sentence -> comparisson_meq .)
    PRINTVALUES     reduce using rule 24 (master_sentence -> comparisson_meq .)
    ALTER           reduce using rule 24 (master_sentence -> comparisson_meq .)
    ALTERB          reduce using rule 24 (master_sentence -> comparisson_meq .)
    ID              reduce using rule 24 (master_sentence -> comparisson_meq .)
    ISTRUE          reduce using rule 24 (master_sentence -> comparisson_meq .)
    SIGNAL          reduce using rule 24 (master_sentence -> comparisson_meq .)
    VIEWSIGNAL      reduce using rule 24 (master_sentence -> comparisson_meq .)
    CUT             reduce using rule 24 (master_sentence -> comparisson_meq .)
    RECUT           reduce using rule 24 (master_sentence -> comparisson_meq .)
    CASE            reduce using rule 24 (master_sentence -> comparisson_meq .)
    BREAK           reduce using rule 24 (master_sentence -> comparisson_meq .)
    WHILE           reduce using rule 24 (master_sentence -> comparisson_meq .)
    REPEAT          reduce using rule 24 (master_sentence -> comparisson_meq .)
    UNTIL           reduce using rule 24 (master_sentence -> comparisson_meq .)


state 32

    (25) master_sentence -> comparisson_equal .

    RPARENT         reduce using rule 25 (master_sentence -> comparisson_equal .)
    NEW             reduce using rule 25 (master_sentence -> comparisson_equal .)
    VALUES          reduce using rule 25 (master_sentence -> comparisson_equal .)
    CALL            reduce using rule 25 (master_sentence -> comparisson_equal .)
    PRINTVALUES     reduce using rule 25 (master_sentence -> comparisson_equal .)
    ALTER           reduce using rule 25 (master_sentence -> comparisson_equal .)
    ALTERB          reduce using rule 25 (master_sentence -> comparisson_equal .)
    ID              reduce using rule 25 (master_sentence -> comparisson_equal .)
    ISTRUE          reduce using rule 25 (master_sentence -> comparisson_equal .)
    SIGNAL          reduce using rule 25 (master_sentence -> comparisson_equal .)
    VIEWSIGNAL      reduce using rule 25 (master_sentence -> comparisson_equal .)
    CUT             reduce using rule 25 (master_sentence -> comparisson_equal .)
    RECUT           reduce using rule 25 (master_sentence -> comparisson_equal .)
    CASE            reduce using rule 25 (master_sentence -> comparisson_equal .)
    BREAK           reduce using rule 25 (master_sentence -> comparisson_equal .)
    WHILE           reduce using rule 25 (master_sentence -> comparisson_equal .)
    REPEAT          reduce using rule 25 (master_sentence -> comparisson_equal .)
    UNTIL           reduce using rule 25 (master_sentence -> comparisson_equal .)


state 33

    (26) master_sentence -> comparisson_dif .

    RPARENT         reduce using rule 26 (master_sentence -> comparisson_dif .)
    NEW             reduce using rule 26 (master_sentence -> comparisson_dif .)
    VALUES          reduce using rule 26 (master_sentence -> comparisson_dif .)
    CALL            reduce using rule 26 (master_sentence -> comparisson_dif .)
    PRINTVALUES     reduce using rule 26 (master_sentence -> comparisson_dif .)
    ALTER           reduce using rule 26 (master_sentence -> comparisson_dif .)
    ALTERB          reduce using rule 26 (master_sentence -> comparisson_dif .)
    ID              reduce using rule 26 (master_sentence -> comparisson_dif .)
    ISTRUE          reduce using rule 26 (master_sentence -> comparisson_dif .)
    SIGNAL          reduce using rule 26 (master_sentence -> comparisson_dif .)
    VIEWSIGNAL      reduce using rule 26 (master_sentence -> comparisson_dif .)
    CUT             reduce using rule 26 (master_sentence -> comparisson_dif .)
    RECUT           reduce using rule 26 (master_sentence -> comparisson_dif .)
    CASE            reduce using rule 26 (master_sentence -> comparisson_dif .)
    BREAK           reduce using rule 26 (master_sentence -> comparisson_dif .)
    WHILE           reduce using rule 26 (master_sentence -> comparisson_dif .)
    REPEAT          reduce using rule 26 (master_sentence -> comparisson_dif .)
    UNTIL           reduce using rule 26 (master_sentence -> comparisson_dif .)


state 34

    (27) master_sentence -> comparisson_meqequal .

    RPARENT         reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    NEW             reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    VALUES          reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    CALL            reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    PRINTVALUES     reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    ALTER           reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    ALTERB          reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    ID              reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    ISTRUE          reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    SIGNAL          reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    VIEWSIGNAL      reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    CUT             reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    RECUT           reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    CASE            reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    BREAK           reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    WHILE           reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    REPEAT          reduce using rule 27 (master_sentence -> comparisson_meqequal .)
    UNTIL           reduce using rule 27 (master_sentence -> comparisson_meqequal .)


state 35

    (28) master_sentence -> comparisson_maqequal .

    RPARENT         reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    NEW             reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    VALUES          reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    CALL            reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    PRINTVALUES     reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    ALTER           reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    ALTERB          reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    ID              reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    ISTRUE          reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    SIGNAL          reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    VIEWSIGNAL      reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    CUT             reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    RECUT           reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    CASE            reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    BREAK           reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    WHILE           reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    REPEAT          reduce using rule 28 (master_sentence -> comparisson_maqequal .)
    UNTIL           reduce using rule 28 (master_sentence -> comparisson_maqequal .)


state 36

    (29) master_sentence -> isTrue .

    RPARENT         reduce using rule 29 (master_sentence -> isTrue .)
    NEW             reduce using rule 29 (master_sentence -> isTrue .)
    VALUES          reduce using rule 29 (master_sentence -> isTrue .)
    CALL            reduce using rule 29 (master_sentence -> isTrue .)
    PRINTVALUES     reduce using rule 29 (master_sentence -> isTrue .)
    ALTER           reduce using rule 29 (master_sentence -> isTrue .)
    ALTERB          reduce using rule 29 (master_sentence -> isTrue .)
    ID              reduce using rule 29 (master_sentence -> isTrue .)
    ISTRUE          reduce using rule 29 (master_sentence -> isTrue .)
    SIGNAL          reduce using rule 29 (master_sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 29 (master_sentence -> isTrue .)
    CUT             reduce using rule 29 (master_sentence -> isTrue .)
    RECUT           reduce using rule 29 (master_sentence -> isTrue .)
    CASE            reduce using rule 29 (master_sentence -> isTrue .)
    BREAK           reduce using rule 29 (master_sentence -> isTrue .)
    WHILE           reduce using rule 29 (master_sentence -> isTrue .)
    REPEAT          reduce using rule 29 (master_sentence -> isTrue .)
    UNTIL           reduce using rule 29 (master_sentence -> isTrue .)


state 37

    (30) master_sentence -> signal .

    RPARENT         reduce using rule 30 (master_sentence -> signal .)
    NEW             reduce using rule 30 (master_sentence -> signal .)
    VALUES          reduce using rule 30 (master_sentence -> signal .)
    CALL            reduce using rule 30 (master_sentence -> signal .)
    PRINTVALUES     reduce using rule 30 (master_sentence -> signal .)
    ALTER           reduce using rule 30 (master_sentence -> signal .)
    ALTERB          reduce using rule 30 (master_sentence -> signal .)
    ID              reduce using rule 30 (master_sentence -> signal .)
    ISTRUE          reduce using rule 30 (master_sentence -> signal .)
    SIGNAL          reduce using rule 30 (master_sentence -> signal .)
    VIEWSIGNAL      reduce using rule 30 (master_sentence -> signal .)
    CUT             reduce using rule 30 (master_sentence -> signal .)
    RECUT           reduce using rule 30 (master_sentence -> signal .)
    CASE            reduce using rule 30 (master_sentence -> signal .)
    BREAK           reduce using rule 30 (master_sentence -> signal .)
    WHILE           reduce using rule 30 (master_sentence -> signal .)
    REPEAT          reduce using rule 30 (master_sentence -> signal .)
    UNTIL           reduce using rule 30 (master_sentence -> signal .)


state 38

    (31) master_sentence -> viewsignal .

    RPARENT         reduce using rule 31 (master_sentence -> viewsignal .)
    NEW             reduce using rule 31 (master_sentence -> viewsignal .)
    VALUES          reduce using rule 31 (master_sentence -> viewsignal .)
    CALL            reduce using rule 31 (master_sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 31 (master_sentence -> viewsignal .)
    ALTER           reduce using rule 31 (master_sentence -> viewsignal .)
    ALTERB          reduce using rule 31 (master_sentence -> viewsignal .)
    ID              reduce using rule 31 (master_sentence -> viewsignal .)
    ISTRUE          reduce using rule 31 (master_sentence -> viewsignal .)
    SIGNAL          reduce using rule 31 (master_sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 31 (master_sentence -> viewsignal .)
    CUT             reduce using rule 31 (master_sentence -> viewsignal .)
    RECUT           reduce using rule 31 (master_sentence -> viewsignal .)
    CASE            reduce using rule 31 (master_sentence -> viewsignal .)
    BREAK           reduce using rule 31 (master_sentence -> viewsignal .)
    WHILE           reduce using rule 31 (master_sentence -> viewsignal .)
    REPEAT          reduce using rule 31 (master_sentence -> viewsignal .)
    UNTIL           reduce using rule 31 (master_sentence -> viewsignal .)


state 39

    (32) master_sentence -> cut .

    RPARENT         reduce using rule 32 (master_sentence -> cut .)
    NEW             reduce using rule 32 (master_sentence -> cut .)
    VALUES          reduce using rule 32 (master_sentence -> cut .)
    CALL            reduce using rule 32 (master_sentence -> cut .)
    PRINTVALUES     reduce using rule 32 (master_sentence -> cut .)
    ALTER           reduce using rule 32 (master_sentence -> cut .)
    ALTERB          reduce using rule 32 (master_sentence -> cut .)
    ID              reduce using rule 32 (master_sentence -> cut .)
    ISTRUE          reduce using rule 32 (master_sentence -> cut .)
    SIGNAL          reduce using rule 32 (master_sentence -> cut .)
    VIEWSIGNAL      reduce using rule 32 (master_sentence -> cut .)
    CUT             reduce using rule 32 (master_sentence -> cut .)
    RECUT           reduce using rule 32 (master_sentence -> cut .)
    CASE            reduce using rule 32 (master_sentence -> cut .)
    BREAK           reduce using rule 32 (master_sentence -> cut .)
    WHILE           reduce using rule 32 (master_sentence -> cut .)
    REPEAT          reduce using rule 32 (master_sentence -> cut .)
    UNTIL           reduce using rule 32 (master_sentence -> cut .)


state 40

    (33) master_sentence -> recut .

    RPARENT         reduce using rule 33 (master_sentence -> recut .)
    NEW             reduce using rule 33 (master_sentence -> recut .)
    VALUES          reduce using rule 33 (master_sentence -> recut .)
    CALL            reduce using rule 33 (master_sentence -> recut .)
    PRINTVALUES     reduce using rule 33 (master_sentence -> recut .)
    ALTER           reduce using rule 33 (master_sentence -> recut .)
    ALTERB          reduce using rule 33 (master_sentence -> recut .)
    ID              reduce using rule 33 (master_sentence -> recut .)
    ISTRUE          reduce using rule 33 (master_sentence -> recut .)
    SIGNAL          reduce using rule 33 (master_sentence -> recut .)
    VIEWSIGNAL      reduce using rule 33 (master_sentence -> recut .)
    CUT             reduce using rule 33 (master_sentence -> recut .)
    RECUT           reduce using rule 33 (master_sentence -> recut .)
    CASE            reduce using rule 33 (master_sentence -> recut .)
    BREAK           reduce using rule 33 (master_sentence -> recut .)
    WHILE           reduce using rule 33 (master_sentence -> recut .)
    REPEAT          reduce using rule 33 (master_sentence -> recut .)
    UNTIL           reduce using rule 33 (master_sentence -> recut .)


state 41

    (34) master_sentence -> case .

    RPARENT         reduce using rule 34 (master_sentence -> case .)
    NEW             reduce using rule 34 (master_sentence -> case .)
    VALUES          reduce using rule 34 (master_sentence -> case .)
    CALL            reduce using rule 34 (master_sentence -> case .)
    PRINTVALUES     reduce using rule 34 (master_sentence -> case .)
    ALTER           reduce using rule 34 (master_sentence -> case .)
    ALTERB          reduce using rule 34 (master_sentence -> case .)
    ID              reduce using rule 34 (master_sentence -> case .)
    ISTRUE          reduce using rule 34 (master_sentence -> case .)
    SIGNAL          reduce using rule 34 (master_sentence -> case .)
    VIEWSIGNAL      reduce using rule 34 (master_sentence -> case .)
    CUT             reduce using rule 34 (master_sentence -> case .)
    RECUT           reduce using rule 34 (master_sentence -> case .)
    CASE            reduce using rule 34 (master_sentence -> case .)
    BREAK           reduce using rule 34 (master_sentence -> case .)
    WHILE           reduce using rule 34 (master_sentence -> case .)
    REPEAT          reduce using rule 34 (master_sentence -> case .)
    UNTIL           reduce using rule 34 (master_sentence -> case .)


state 42

    (35) master_sentence -> while .

    RPARENT         reduce using rule 35 (master_sentence -> while .)
    NEW             reduce using rule 35 (master_sentence -> while .)
    VALUES          reduce using rule 35 (master_sentence -> while .)
    CALL            reduce using rule 35 (master_sentence -> while .)
    PRINTVALUES     reduce using rule 35 (master_sentence -> while .)
    ALTER           reduce using rule 35 (master_sentence -> while .)
    ALTERB          reduce using rule 35 (master_sentence -> while .)
    ID              reduce using rule 35 (master_sentence -> while .)
    ISTRUE          reduce using rule 35 (master_sentence -> while .)
    SIGNAL          reduce using rule 35 (master_sentence -> while .)
    VIEWSIGNAL      reduce using rule 35 (master_sentence -> while .)
    CUT             reduce using rule 35 (master_sentence -> while .)
    RECUT           reduce using rule 35 (master_sentence -> while .)
    CASE            reduce using rule 35 (master_sentence -> while .)
    BREAK           reduce using rule 35 (master_sentence -> while .)
    WHILE           reduce using rule 35 (master_sentence -> while .)
    REPEAT          reduce using rule 35 (master_sentence -> while .)
    UNTIL           reduce using rule 35 (master_sentence -> while .)


state 43

    (36) master_sentence -> repeat .

    RPARENT         reduce using rule 36 (master_sentence -> repeat .)
    NEW             reduce using rule 36 (master_sentence -> repeat .)
    VALUES          reduce using rule 36 (master_sentence -> repeat .)
    CALL            reduce using rule 36 (master_sentence -> repeat .)
    PRINTVALUES     reduce using rule 36 (master_sentence -> repeat .)
    ALTER           reduce using rule 36 (master_sentence -> repeat .)
    ALTERB          reduce using rule 36 (master_sentence -> repeat .)
    ID              reduce using rule 36 (master_sentence -> repeat .)
    ISTRUE          reduce using rule 36 (master_sentence -> repeat .)
    SIGNAL          reduce using rule 36 (master_sentence -> repeat .)
    VIEWSIGNAL      reduce using rule 36 (master_sentence -> repeat .)
    CUT             reduce using rule 36 (master_sentence -> repeat .)
    RECUT           reduce using rule 36 (master_sentence -> repeat .)
    CASE            reduce using rule 36 (master_sentence -> repeat .)
    BREAK           reduce using rule 36 (master_sentence -> repeat .)
    WHILE           reduce using rule 36 (master_sentence -> repeat .)
    REPEAT          reduce using rule 36 (master_sentence -> repeat .)
    UNTIL           reduce using rule 36 (master_sentence -> repeat .)


state 44

    (37) master_sentence -> until .

    RPARENT         reduce using rule 37 (master_sentence -> until .)
    NEW             reduce using rule 37 (master_sentence -> until .)
    VALUES          reduce using rule 37 (master_sentence -> until .)
    CALL            reduce using rule 37 (master_sentence -> until .)
    PRINTVALUES     reduce using rule 37 (master_sentence -> until .)
    ALTER           reduce using rule 37 (master_sentence -> until .)
    ALTERB          reduce using rule 37 (master_sentence -> until .)
    ID              reduce using rule 37 (master_sentence -> until .)
    ISTRUE          reduce using rule 37 (master_sentence -> until .)
    SIGNAL          reduce using rule 37 (master_sentence -> until .)
    VIEWSIGNAL      reduce using rule 37 (master_sentence -> until .)
    CUT             reduce using rule 37 (master_sentence -> until .)
    RECUT           reduce using rule 37 (master_sentence -> until .)
    CASE            reduce using rule 37 (master_sentence -> until .)
    BREAK           reduce using rule 37 (master_sentence -> until .)
    WHILE           reduce using rule 37 (master_sentence -> until .)
    REPEAT          reduce using rule 37 (master_sentence -> until .)
    UNTIL           reduce using rule 37 (master_sentence -> until .)


state 45

    (38) master_sentence -> break .

    RPARENT         reduce using rule 38 (master_sentence -> break .)
    NEW             reduce using rule 38 (master_sentence -> break .)
    VALUES          reduce using rule 38 (master_sentence -> break .)
    CALL            reduce using rule 38 (master_sentence -> break .)
    PRINTVALUES     reduce using rule 38 (master_sentence -> break .)
    ALTER           reduce using rule 38 (master_sentence -> break .)
    ALTERB          reduce using rule 38 (master_sentence -> break .)
    ID              reduce using rule 38 (master_sentence -> break .)
    ISTRUE          reduce using rule 38 (master_sentence -> break .)
    SIGNAL          reduce using rule 38 (master_sentence -> break .)
    VIEWSIGNAL      reduce using rule 38 (master_sentence -> break .)
    CUT             reduce using rule 38 (master_sentence -> break .)
    RECUT           reduce using rule 38 (master_sentence -> break .)
    CASE            reduce using rule 38 (master_sentence -> break .)
    BREAK           reduce using rule 38 (master_sentence -> break .)
    WHILE           reduce using rule 38 (master_sentence -> break .)
    REPEAT          reduce using rule 38 (master_sentence -> break .)
    UNTIL           reduce using rule 38 (master_sentence -> break .)


state 46

    (39) master_sentence -> empty .

    RPARENT         reduce using rule 39 (master_sentence -> empty .)
    NEW             reduce using rule 39 (master_sentence -> empty .)
    VALUES          reduce using rule 39 (master_sentence -> empty .)
    CALL            reduce using rule 39 (master_sentence -> empty .)
    PRINTVALUES     reduce using rule 39 (master_sentence -> empty .)
    ALTER           reduce using rule 39 (master_sentence -> empty .)
    ALTERB          reduce using rule 39 (master_sentence -> empty .)
    ID              reduce using rule 39 (master_sentence -> empty .)
    ISTRUE          reduce using rule 39 (master_sentence -> empty .)
    SIGNAL          reduce using rule 39 (master_sentence -> empty .)
    VIEWSIGNAL      reduce using rule 39 (master_sentence -> empty .)
    CUT             reduce using rule 39 (master_sentence -> empty .)
    RECUT           reduce using rule 39 (master_sentence -> empty .)
    CASE            reduce using rule 39 (master_sentence -> empty .)
    BREAK           reduce using rule 39 (master_sentence -> empty .)
    WHILE           reduce using rule 39 (master_sentence -> empty .)
    REPEAT          reduce using rule 39 (master_sentence -> empty .)
    UNTIL           reduce using rule 39 (master_sentence -> empty .)


state 47

    (104) comparisson_maq -> ID . MAQ INTEGER
    (105) comparisson_meq -> ID . MEQ INTEGER
    (106) comparisson_equal -> ID . EQUAL INTEGER
    (107) comparisson_dif -> ID . DIFFERENT INTEGER
    (108) comparisson_meqequal -> ID . MEQEQUAL INTEGER
    (109) comparisson_maqequal -> ID . MAQEQUAL INTEGER

    MAQ             shift and go to state 97
    MEQ             shift and go to state 98
    EQUAL           shift and go to state 99
    DIFFERENT       shift and go to state 100
    MEQEQUAL        shift and go to state 101
    MAQEQUAL        shift and go to state 102


state 48

    (82) values -> VALUES . LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> VALUES . LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> VALUES . LPARENT ID COMA return_statement RPARENT SEMICOLON

    LPARENT         shift and go to state 103


state 49

    (85) call -> CALL . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 104


state 50

    (86) print_values -> PRINTVALUES . LPARENT printable_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 105


state 51

    (99) alter -> ALTER . LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> ALTER . LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> ALTER . LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> ALTER . LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 106


state 52

    (103) alterB -> ALTERB . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 107


state 53

    (110) isTrue -> ISTRUE . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 108


state 54

    (111) signal -> SIGNAL . LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> SIGNAL . LPARENT ID COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 109


state 55

    (113) viewsignal -> VIEWSIGNAL . LPARENT INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 110


state 56

    (129) cut -> CUT . LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> CUT . LPARENT ID COMA ID RPARENT SEMICOLON

    LPARENT         shift and go to state 111


state 57

    (131) recut -> RECUT . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 112


state 58

    (121) case -> CASE . expression recursive_conditions SEMICOLON
    (126) expression -> . ID

    ID              shift and go to state 114

    expression                     shift and go to state 113

state 59

    (114) while -> while_handler . sentence LPARENT sentences RPARENT SEMICOLON
    (47) sentence -> . local_variable
    (48) sentence -> . values
    (49) sentence -> . call
    (50) sentence -> . print_values
    (51) sentence -> . alter
    (52) sentence -> . alterB
    (53) sentence -> . comparisson_maq
    (54) sentence -> . comparisson_meq
    (55) sentence -> . comparisson_equal
    (56) sentence -> . comparisson_dif
    (57) sentence -> . comparisson_meqequal
    (58) sentence -> . comparisson_maqequal
    (59) sentence -> . isTrue
    (60) sentence -> . signal
    (61) sentence -> . viewsignal
    (62) sentence -> . cut
    (63) sentence -> . recut
    (64) sentence -> . case
    (65) sentence -> . while
    (66) sentence -> . until
    (67) sentence -> . repeat
    (68) sentence -> . break
    (69) sentence -> . empty
    (79) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (117) until_handler -> . UNTIL
    (119) repeat_handler -> . REPEAT

    NEW             shift and go to state 92
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    LPARENT         reduce using rule 132 (empty -> .)
    WHILE           shift and go to state 63
    UNTIL           shift and go to state 65
    REPEAT          shift and go to state 64

    while_handler                  shift and go to state 59
    sentence                       shift and go to state 115
    local_variable                 shift and go to state 69
    values                         shift and go to state 70
    call                           shift and go to state 71
    print_values                   shift and go to state 72
    alter                          shift and go to state 73
    alterB                         shift and go to state 74
    comparisson_maq                shift and go to state 75
    comparisson_meq                shift and go to state 76
    comparisson_equal              shift and go to state 77
    comparisson_dif                shift and go to state 78
    comparisson_meqequal           shift and go to state 79
    comparisson_maqequal           shift and go to state 80
    isTrue                         shift and go to state 81
    signal                         shift and go to state 82
    viewsignal                     shift and go to state 83
    cut                            shift and go to state 84
    recut                          shift and go to state 85
    case                           shift and go to state 86
    while                          shift and go to state 87
    until                          shift and go to state 88
    repeat                         shift and go to state 89
    break                          shift and go to state 90
    empty                          shift and go to state 91
    until_handler                  shift and go to state 61
    repeat_handler                 shift and go to state 60

state 60

    (118) repeat -> repeat_handler . LPARENT sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 116


state 61

    (116) until -> until_handler . LPARENT sentences RPARENT sentence SEMICOLON

    LPARENT         shift and go to state 117


state 62

    (120) break -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 118


state 63

    (115) while_handler -> WHILE .

    NEW             reduce using rule 115 (while_handler -> WHILE .)
    VALUES          reduce using rule 115 (while_handler -> WHILE .)
    CALL            reduce using rule 115 (while_handler -> WHILE .)
    PRINTVALUES     reduce using rule 115 (while_handler -> WHILE .)
    ALTER           reduce using rule 115 (while_handler -> WHILE .)
    ALTERB          reduce using rule 115 (while_handler -> WHILE .)
    ID              reduce using rule 115 (while_handler -> WHILE .)
    ISTRUE          reduce using rule 115 (while_handler -> WHILE .)
    SIGNAL          reduce using rule 115 (while_handler -> WHILE .)
    VIEWSIGNAL      reduce using rule 115 (while_handler -> WHILE .)
    CUT             reduce using rule 115 (while_handler -> WHILE .)
    RECUT           reduce using rule 115 (while_handler -> WHILE .)
    CASE            reduce using rule 115 (while_handler -> WHILE .)
    BREAK           reduce using rule 115 (while_handler -> WHILE .)
    WHILE           reduce using rule 115 (while_handler -> WHILE .)
    UNTIL           reduce using rule 115 (while_handler -> WHILE .)
    REPEAT          reduce using rule 115 (while_handler -> WHILE .)
    LPARENT         reduce using rule 115 (while_handler -> WHILE .)


state 64

    (119) repeat_handler -> REPEAT .

    LPARENT         reduce using rule 119 (repeat_handler -> REPEAT .)


state 65

    (117) until_handler -> UNTIL .

    LPARENT         reduce using rule 117 (until_handler -> UNTIL .)


state 66

    (42) master_var -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> NEW ID COMA . LPARENT TYPE COMA STRING RPARENT SEMICOLON

    LPARENT         shift and go to state 119


state 67

    (13) procedure -> declare_procedure LPARENT sentences . RPARENT SEMICOLON
    (46) sentences -> sentences . sentence
    (47) sentence -> . local_variable
    (48) sentence -> . values
    (49) sentence -> . call
    (50) sentence -> . print_values
    (51) sentence -> . alter
    (52) sentence -> . alterB
    (53) sentence -> . comparisson_maq
    (54) sentence -> . comparisson_meq
    (55) sentence -> . comparisson_equal
    (56) sentence -> . comparisson_dif
    (57) sentence -> . comparisson_meqequal
    (58) sentence -> . comparisson_maqequal
    (59) sentence -> . isTrue
    (60) sentence -> . signal
    (61) sentence -> . viewsignal
    (62) sentence -> . cut
    (63) sentence -> . recut
    (64) sentence -> . case
    (65) sentence -> . while
    (66) sentence -> . until
    (67) sentence -> . repeat
    (68) sentence -> . break
    (69) sentence -> . empty
    (79) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (117) until_handler -> . UNTIL
    (119) repeat_handler -> . REPEAT

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
    RPARENT         shift and go to state 120
    NEW             shift and go to state 92
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    WHILE           shift and go to state 63
    UNTIL           shift and go to state 65
    REPEAT          shift and go to state 64

  ! RPARENT         [ reduce using rule 132 (empty -> .) ]
  ! NEW             [ reduce using rule 132 (empty -> .) ]
  ! VALUES          [ reduce using rule 132 (empty -> .) ]
  ! CALL            [ reduce using rule 132 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 132 (empty -> .) ]
  ! ALTER           [ reduce using rule 132 (empty -> .) ]
  ! ALTERB          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 132 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 132 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 132 (empty -> .) ]
  ! CUT             [ reduce using rule 132 (empty -> .) ]
  ! RECUT           [ reduce using rule 132 (empty -> .) ]
  ! CASE            [ reduce using rule 132 (empty -> .) ]
  ! BREAK           [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! UNTIL           [ reduce using rule 132 (empty -> .) ]
  ! REPEAT          [ reduce using rule 132 (empty -> .) ]

    sentence                       shift and go to state 121
    local_variable                 shift and go to state 69
    values                         shift and go to state 70
    call                           shift and go to state 71
    print_values                   shift and go to state 72
    alter                          shift and go to state 73
    alterB                         shift and go to state 74
    comparisson_maq                shift and go to state 75
    comparisson_meq                shift and go to state 76
    comparisson_equal              shift and go to state 77
    comparisson_dif                shift and go to state 78
    comparisson_meqequal           shift and go to state 79
    comparisson_maqequal           shift and go to state 80
    isTrue                         shift and go to state 81
    signal                         shift and go to state 82
    viewsignal                     shift and go to state 83
    cut                            shift and go to state 84
    recut                          shift and go to state 85
    case                           shift and go to state 86
    while                          shift and go to state 87
    until                          shift and go to state 88
    repeat                         shift and go to state 89
    break                          shift and go to state 90
    empty                          shift and go to state 91
    while_handler                  shift and go to state 59
    until_handler                  shift and go to state 61
    repeat_handler                 shift and go to state 60

state 68

    (45) sentences -> sentence .

    RPARENT         reduce using rule 45 (sentences -> sentence .)
    NEW             reduce using rule 45 (sentences -> sentence .)
    VALUES          reduce using rule 45 (sentences -> sentence .)
    CALL            reduce using rule 45 (sentences -> sentence .)
    PRINTVALUES     reduce using rule 45 (sentences -> sentence .)
    ALTER           reduce using rule 45 (sentences -> sentence .)
    ALTERB          reduce using rule 45 (sentences -> sentence .)
    ID              reduce using rule 45 (sentences -> sentence .)
    ISTRUE          reduce using rule 45 (sentences -> sentence .)
    SIGNAL          reduce using rule 45 (sentences -> sentence .)
    VIEWSIGNAL      reduce using rule 45 (sentences -> sentence .)
    CUT             reduce using rule 45 (sentences -> sentence .)
    RECUT           reduce using rule 45 (sentences -> sentence .)
    CASE            reduce using rule 45 (sentences -> sentence .)
    BREAK           reduce using rule 45 (sentences -> sentence .)
    WHILE           reduce using rule 45 (sentences -> sentence .)
    UNTIL           reduce using rule 45 (sentences -> sentence .)
    REPEAT          reduce using rule 45 (sentences -> sentence .)


state 69

    (47) sentence -> local_variable .

    RPARENT         reduce using rule 47 (sentence -> local_variable .)
    NEW             reduce using rule 47 (sentence -> local_variable .)
    VALUES          reduce using rule 47 (sentence -> local_variable .)
    CALL            reduce using rule 47 (sentence -> local_variable .)
    PRINTVALUES     reduce using rule 47 (sentence -> local_variable .)
    ALTER           reduce using rule 47 (sentence -> local_variable .)
    ALTERB          reduce using rule 47 (sentence -> local_variable .)
    ID              reduce using rule 47 (sentence -> local_variable .)
    ISTRUE          reduce using rule 47 (sentence -> local_variable .)
    SIGNAL          reduce using rule 47 (sentence -> local_variable .)
    VIEWSIGNAL      reduce using rule 47 (sentence -> local_variable .)
    CUT             reduce using rule 47 (sentence -> local_variable .)
    RECUT           reduce using rule 47 (sentence -> local_variable .)
    CASE            reduce using rule 47 (sentence -> local_variable .)
    BREAK           reduce using rule 47 (sentence -> local_variable .)
    WHILE           reduce using rule 47 (sentence -> local_variable .)
    UNTIL           reduce using rule 47 (sentence -> local_variable .)
    REPEAT          reduce using rule 47 (sentence -> local_variable .)
    LPARENT         reduce using rule 47 (sentence -> local_variable .)
    SEMICOLON       reduce using rule 47 (sentence -> local_variable .)


state 70

    (48) sentence -> values .

    RPARENT         reduce using rule 48 (sentence -> values .)
    NEW             reduce using rule 48 (sentence -> values .)
    VALUES          reduce using rule 48 (sentence -> values .)
    CALL            reduce using rule 48 (sentence -> values .)
    PRINTVALUES     reduce using rule 48 (sentence -> values .)
    ALTER           reduce using rule 48 (sentence -> values .)
    ALTERB          reduce using rule 48 (sentence -> values .)
    ID              reduce using rule 48 (sentence -> values .)
    ISTRUE          reduce using rule 48 (sentence -> values .)
    SIGNAL          reduce using rule 48 (sentence -> values .)
    VIEWSIGNAL      reduce using rule 48 (sentence -> values .)
    CUT             reduce using rule 48 (sentence -> values .)
    RECUT           reduce using rule 48 (sentence -> values .)
    CASE            reduce using rule 48 (sentence -> values .)
    BREAK           reduce using rule 48 (sentence -> values .)
    WHILE           reduce using rule 48 (sentence -> values .)
    UNTIL           reduce using rule 48 (sentence -> values .)
    REPEAT          reduce using rule 48 (sentence -> values .)
    LPARENT         reduce using rule 48 (sentence -> values .)
    SEMICOLON       reduce using rule 48 (sentence -> values .)


state 71

    (49) sentence -> call .

    RPARENT         reduce using rule 49 (sentence -> call .)
    NEW             reduce using rule 49 (sentence -> call .)
    VALUES          reduce using rule 49 (sentence -> call .)
    CALL            reduce using rule 49 (sentence -> call .)
    PRINTVALUES     reduce using rule 49 (sentence -> call .)
    ALTER           reduce using rule 49 (sentence -> call .)
    ALTERB          reduce using rule 49 (sentence -> call .)
    ID              reduce using rule 49 (sentence -> call .)
    ISTRUE          reduce using rule 49 (sentence -> call .)
    SIGNAL          reduce using rule 49 (sentence -> call .)
    VIEWSIGNAL      reduce using rule 49 (sentence -> call .)
    CUT             reduce using rule 49 (sentence -> call .)
    RECUT           reduce using rule 49 (sentence -> call .)
    CASE            reduce using rule 49 (sentence -> call .)
    BREAK           reduce using rule 49 (sentence -> call .)
    WHILE           reduce using rule 49 (sentence -> call .)
    UNTIL           reduce using rule 49 (sentence -> call .)
    REPEAT          reduce using rule 49 (sentence -> call .)
    LPARENT         reduce using rule 49 (sentence -> call .)
    SEMICOLON       reduce using rule 49 (sentence -> call .)


state 72

    (50) sentence -> print_values .

    RPARENT         reduce using rule 50 (sentence -> print_values .)
    NEW             reduce using rule 50 (sentence -> print_values .)
    VALUES          reduce using rule 50 (sentence -> print_values .)
    CALL            reduce using rule 50 (sentence -> print_values .)
    PRINTVALUES     reduce using rule 50 (sentence -> print_values .)
    ALTER           reduce using rule 50 (sentence -> print_values .)
    ALTERB          reduce using rule 50 (sentence -> print_values .)
    ID              reduce using rule 50 (sentence -> print_values .)
    ISTRUE          reduce using rule 50 (sentence -> print_values .)
    SIGNAL          reduce using rule 50 (sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 50 (sentence -> print_values .)
    CUT             reduce using rule 50 (sentence -> print_values .)
    RECUT           reduce using rule 50 (sentence -> print_values .)
    CASE            reduce using rule 50 (sentence -> print_values .)
    BREAK           reduce using rule 50 (sentence -> print_values .)
    WHILE           reduce using rule 50 (sentence -> print_values .)
    UNTIL           reduce using rule 50 (sentence -> print_values .)
    REPEAT          reduce using rule 50 (sentence -> print_values .)
    LPARENT         reduce using rule 50 (sentence -> print_values .)
    SEMICOLON       reduce using rule 50 (sentence -> print_values .)


state 73

    (51) sentence -> alter .

    RPARENT         reduce using rule 51 (sentence -> alter .)
    NEW             reduce using rule 51 (sentence -> alter .)
    VALUES          reduce using rule 51 (sentence -> alter .)
    CALL            reduce using rule 51 (sentence -> alter .)
    PRINTVALUES     reduce using rule 51 (sentence -> alter .)
    ALTER           reduce using rule 51 (sentence -> alter .)
    ALTERB          reduce using rule 51 (sentence -> alter .)
    ID              reduce using rule 51 (sentence -> alter .)
    ISTRUE          reduce using rule 51 (sentence -> alter .)
    SIGNAL          reduce using rule 51 (sentence -> alter .)
    VIEWSIGNAL      reduce using rule 51 (sentence -> alter .)
    CUT             reduce using rule 51 (sentence -> alter .)
    RECUT           reduce using rule 51 (sentence -> alter .)
    CASE            reduce using rule 51 (sentence -> alter .)
    BREAK           reduce using rule 51 (sentence -> alter .)
    WHILE           reduce using rule 51 (sentence -> alter .)
    UNTIL           reduce using rule 51 (sentence -> alter .)
    REPEAT          reduce using rule 51 (sentence -> alter .)
    LPARENT         reduce using rule 51 (sentence -> alter .)
    SEMICOLON       reduce using rule 51 (sentence -> alter .)


state 74

    (52) sentence -> alterB .

    RPARENT         reduce using rule 52 (sentence -> alterB .)
    NEW             reduce using rule 52 (sentence -> alterB .)
    VALUES          reduce using rule 52 (sentence -> alterB .)
    CALL            reduce using rule 52 (sentence -> alterB .)
    PRINTVALUES     reduce using rule 52 (sentence -> alterB .)
    ALTER           reduce using rule 52 (sentence -> alterB .)
    ALTERB          reduce using rule 52 (sentence -> alterB .)
    ID              reduce using rule 52 (sentence -> alterB .)
    ISTRUE          reduce using rule 52 (sentence -> alterB .)
    SIGNAL          reduce using rule 52 (sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 52 (sentence -> alterB .)
    CUT             reduce using rule 52 (sentence -> alterB .)
    RECUT           reduce using rule 52 (sentence -> alterB .)
    CASE            reduce using rule 52 (sentence -> alterB .)
    BREAK           reduce using rule 52 (sentence -> alterB .)
    WHILE           reduce using rule 52 (sentence -> alterB .)
    UNTIL           reduce using rule 52 (sentence -> alterB .)
    REPEAT          reduce using rule 52 (sentence -> alterB .)
    LPARENT         reduce using rule 52 (sentence -> alterB .)
    SEMICOLON       reduce using rule 52 (sentence -> alterB .)


state 75

    (53) sentence -> comparisson_maq .

    RPARENT         reduce using rule 53 (sentence -> comparisson_maq .)
    NEW             reduce using rule 53 (sentence -> comparisson_maq .)
    VALUES          reduce using rule 53 (sentence -> comparisson_maq .)
    CALL            reduce using rule 53 (sentence -> comparisson_maq .)
    PRINTVALUES     reduce using rule 53 (sentence -> comparisson_maq .)
    ALTER           reduce using rule 53 (sentence -> comparisson_maq .)
    ALTERB          reduce using rule 53 (sentence -> comparisson_maq .)
    ID              reduce using rule 53 (sentence -> comparisson_maq .)
    ISTRUE          reduce using rule 53 (sentence -> comparisson_maq .)
    SIGNAL          reduce using rule 53 (sentence -> comparisson_maq .)
    VIEWSIGNAL      reduce using rule 53 (sentence -> comparisson_maq .)
    CUT             reduce using rule 53 (sentence -> comparisson_maq .)
    RECUT           reduce using rule 53 (sentence -> comparisson_maq .)
    CASE            reduce using rule 53 (sentence -> comparisson_maq .)
    BREAK           reduce using rule 53 (sentence -> comparisson_maq .)
    WHILE           reduce using rule 53 (sentence -> comparisson_maq .)
    UNTIL           reduce using rule 53 (sentence -> comparisson_maq .)
    REPEAT          reduce using rule 53 (sentence -> comparisson_maq .)
    LPARENT         reduce using rule 53 (sentence -> comparisson_maq .)
    SEMICOLON       reduce using rule 53 (sentence -> comparisson_maq .)


state 76

    (54) sentence -> comparisson_meq .

    RPARENT         reduce using rule 54 (sentence -> comparisson_meq .)
    NEW             reduce using rule 54 (sentence -> comparisson_meq .)
    VALUES          reduce using rule 54 (sentence -> comparisson_meq .)
    CALL            reduce using rule 54 (sentence -> comparisson_meq .)
    PRINTVALUES     reduce using rule 54 (sentence -> comparisson_meq .)
    ALTER           reduce using rule 54 (sentence -> comparisson_meq .)
    ALTERB          reduce using rule 54 (sentence -> comparisson_meq .)
    ID              reduce using rule 54 (sentence -> comparisson_meq .)
    ISTRUE          reduce using rule 54 (sentence -> comparisson_meq .)
    SIGNAL          reduce using rule 54 (sentence -> comparisson_meq .)
    VIEWSIGNAL      reduce using rule 54 (sentence -> comparisson_meq .)
    CUT             reduce using rule 54 (sentence -> comparisson_meq .)
    RECUT           reduce using rule 54 (sentence -> comparisson_meq .)
    CASE            reduce using rule 54 (sentence -> comparisson_meq .)
    BREAK           reduce using rule 54 (sentence -> comparisson_meq .)
    WHILE           reduce using rule 54 (sentence -> comparisson_meq .)
    UNTIL           reduce using rule 54 (sentence -> comparisson_meq .)
    REPEAT          reduce using rule 54 (sentence -> comparisson_meq .)
    LPARENT         reduce using rule 54 (sentence -> comparisson_meq .)
    SEMICOLON       reduce using rule 54 (sentence -> comparisson_meq .)


state 77

    (55) sentence -> comparisson_equal .

    RPARENT         reduce using rule 55 (sentence -> comparisson_equal .)
    NEW             reduce using rule 55 (sentence -> comparisson_equal .)
    VALUES          reduce using rule 55 (sentence -> comparisson_equal .)
    CALL            reduce using rule 55 (sentence -> comparisson_equal .)
    PRINTVALUES     reduce using rule 55 (sentence -> comparisson_equal .)
    ALTER           reduce using rule 55 (sentence -> comparisson_equal .)
    ALTERB          reduce using rule 55 (sentence -> comparisson_equal .)
    ID              reduce using rule 55 (sentence -> comparisson_equal .)
    ISTRUE          reduce using rule 55 (sentence -> comparisson_equal .)
    SIGNAL          reduce using rule 55 (sentence -> comparisson_equal .)
    VIEWSIGNAL      reduce using rule 55 (sentence -> comparisson_equal .)
    CUT             reduce using rule 55 (sentence -> comparisson_equal .)
    RECUT           reduce using rule 55 (sentence -> comparisson_equal .)
    CASE            reduce using rule 55 (sentence -> comparisson_equal .)
    BREAK           reduce using rule 55 (sentence -> comparisson_equal .)
    WHILE           reduce using rule 55 (sentence -> comparisson_equal .)
    UNTIL           reduce using rule 55 (sentence -> comparisson_equal .)
    REPEAT          reduce using rule 55 (sentence -> comparisson_equal .)
    LPARENT         reduce using rule 55 (sentence -> comparisson_equal .)
    SEMICOLON       reduce using rule 55 (sentence -> comparisson_equal .)


state 78

    (56) sentence -> comparisson_dif .

    RPARENT         reduce using rule 56 (sentence -> comparisson_dif .)
    NEW             reduce using rule 56 (sentence -> comparisson_dif .)
    VALUES          reduce using rule 56 (sentence -> comparisson_dif .)
    CALL            reduce using rule 56 (sentence -> comparisson_dif .)
    PRINTVALUES     reduce using rule 56 (sentence -> comparisson_dif .)
    ALTER           reduce using rule 56 (sentence -> comparisson_dif .)
    ALTERB          reduce using rule 56 (sentence -> comparisson_dif .)
    ID              reduce using rule 56 (sentence -> comparisson_dif .)
    ISTRUE          reduce using rule 56 (sentence -> comparisson_dif .)
    SIGNAL          reduce using rule 56 (sentence -> comparisson_dif .)
    VIEWSIGNAL      reduce using rule 56 (sentence -> comparisson_dif .)
    CUT             reduce using rule 56 (sentence -> comparisson_dif .)
    RECUT           reduce using rule 56 (sentence -> comparisson_dif .)
    CASE            reduce using rule 56 (sentence -> comparisson_dif .)
    BREAK           reduce using rule 56 (sentence -> comparisson_dif .)
    WHILE           reduce using rule 56 (sentence -> comparisson_dif .)
    UNTIL           reduce using rule 56 (sentence -> comparisson_dif .)
    REPEAT          reduce using rule 56 (sentence -> comparisson_dif .)
    LPARENT         reduce using rule 56 (sentence -> comparisson_dif .)
    SEMICOLON       reduce using rule 56 (sentence -> comparisson_dif .)


state 79

    (57) sentence -> comparisson_meqequal .

    RPARENT         reduce using rule 57 (sentence -> comparisson_meqequal .)
    NEW             reduce using rule 57 (sentence -> comparisson_meqequal .)
    VALUES          reduce using rule 57 (sentence -> comparisson_meqequal .)
    CALL            reduce using rule 57 (sentence -> comparisson_meqequal .)
    PRINTVALUES     reduce using rule 57 (sentence -> comparisson_meqequal .)
    ALTER           reduce using rule 57 (sentence -> comparisson_meqequal .)
    ALTERB          reduce using rule 57 (sentence -> comparisson_meqequal .)
    ID              reduce using rule 57 (sentence -> comparisson_meqequal .)
    ISTRUE          reduce using rule 57 (sentence -> comparisson_meqequal .)
    SIGNAL          reduce using rule 57 (sentence -> comparisson_meqequal .)
    VIEWSIGNAL      reduce using rule 57 (sentence -> comparisson_meqequal .)
    CUT             reduce using rule 57 (sentence -> comparisson_meqequal .)
    RECUT           reduce using rule 57 (sentence -> comparisson_meqequal .)
    CASE            reduce using rule 57 (sentence -> comparisson_meqequal .)
    BREAK           reduce using rule 57 (sentence -> comparisson_meqequal .)
    WHILE           reduce using rule 57 (sentence -> comparisson_meqequal .)
    UNTIL           reduce using rule 57 (sentence -> comparisson_meqequal .)
    REPEAT          reduce using rule 57 (sentence -> comparisson_meqequal .)
    LPARENT         reduce using rule 57 (sentence -> comparisson_meqequal .)
    SEMICOLON       reduce using rule 57 (sentence -> comparisson_meqequal .)


state 80

    (58) sentence -> comparisson_maqequal .

    RPARENT         reduce using rule 58 (sentence -> comparisson_maqequal .)
    NEW             reduce using rule 58 (sentence -> comparisson_maqequal .)
    VALUES          reduce using rule 58 (sentence -> comparisson_maqequal .)
    CALL            reduce using rule 58 (sentence -> comparisson_maqequal .)
    PRINTVALUES     reduce using rule 58 (sentence -> comparisson_maqequal .)
    ALTER           reduce using rule 58 (sentence -> comparisson_maqequal .)
    ALTERB          reduce using rule 58 (sentence -> comparisson_maqequal .)
    ID              reduce using rule 58 (sentence -> comparisson_maqequal .)
    ISTRUE          reduce using rule 58 (sentence -> comparisson_maqequal .)
    SIGNAL          reduce using rule 58 (sentence -> comparisson_maqequal .)
    VIEWSIGNAL      reduce using rule 58 (sentence -> comparisson_maqequal .)
    CUT             reduce using rule 58 (sentence -> comparisson_maqequal .)
    RECUT           reduce using rule 58 (sentence -> comparisson_maqequal .)
    CASE            reduce using rule 58 (sentence -> comparisson_maqequal .)
    BREAK           reduce using rule 58 (sentence -> comparisson_maqequal .)
    WHILE           reduce using rule 58 (sentence -> comparisson_maqequal .)
    UNTIL           reduce using rule 58 (sentence -> comparisson_maqequal .)
    REPEAT          reduce using rule 58 (sentence -> comparisson_maqequal .)
    LPARENT         reduce using rule 58 (sentence -> comparisson_maqequal .)
    SEMICOLON       reduce using rule 58 (sentence -> comparisson_maqequal .)


state 81

    (59) sentence -> isTrue .

    RPARENT         reduce using rule 59 (sentence -> isTrue .)
    NEW             reduce using rule 59 (sentence -> isTrue .)
    VALUES          reduce using rule 59 (sentence -> isTrue .)
    CALL            reduce using rule 59 (sentence -> isTrue .)
    PRINTVALUES     reduce using rule 59 (sentence -> isTrue .)
    ALTER           reduce using rule 59 (sentence -> isTrue .)
    ALTERB          reduce using rule 59 (sentence -> isTrue .)
    ID              reduce using rule 59 (sentence -> isTrue .)
    ISTRUE          reduce using rule 59 (sentence -> isTrue .)
    SIGNAL          reduce using rule 59 (sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 59 (sentence -> isTrue .)
    CUT             reduce using rule 59 (sentence -> isTrue .)
    RECUT           reduce using rule 59 (sentence -> isTrue .)
    CASE            reduce using rule 59 (sentence -> isTrue .)
    BREAK           reduce using rule 59 (sentence -> isTrue .)
    WHILE           reduce using rule 59 (sentence -> isTrue .)
    UNTIL           reduce using rule 59 (sentence -> isTrue .)
    REPEAT          reduce using rule 59 (sentence -> isTrue .)
    LPARENT         reduce using rule 59 (sentence -> isTrue .)
    SEMICOLON       reduce using rule 59 (sentence -> isTrue .)


state 82

    (60) sentence -> signal .

    RPARENT         reduce using rule 60 (sentence -> signal .)
    NEW             reduce using rule 60 (sentence -> signal .)
    VALUES          reduce using rule 60 (sentence -> signal .)
    CALL            reduce using rule 60 (sentence -> signal .)
    PRINTVALUES     reduce using rule 60 (sentence -> signal .)
    ALTER           reduce using rule 60 (sentence -> signal .)
    ALTERB          reduce using rule 60 (sentence -> signal .)
    ID              reduce using rule 60 (sentence -> signal .)
    ISTRUE          reduce using rule 60 (sentence -> signal .)
    SIGNAL          reduce using rule 60 (sentence -> signal .)
    VIEWSIGNAL      reduce using rule 60 (sentence -> signal .)
    CUT             reduce using rule 60 (sentence -> signal .)
    RECUT           reduce using rule 60 (sentence -> signal .)
    CASE            reduce using rule 60 (sentence -> signal .)
    BREAK           reduce using rule 60 (sentence -> signal .)
    WHILE           reduce using rule 60 (sentence -> signal .)
    UNTIL           reduce using rule 60 (sentence -> signal .)
    REPEAT          reduce using rule 60 (sentence -> signal .)
    LPARENT         reduce using rule 60 (sentence -> signal .)
    SEMICOLON       reduce using rule 60 (sentence -> signal .)


state 83

    (61) sentence -> viewsignal .

    RPARENT         reduce using rule 61 (sentence -> viewsignal .)
    NEW             reduce using rule 61 (sentence -> viewsignal .)
    VALUES          reduce using rule 61 (sentence -> viewsignal .)
    CALL            reduce using rule 61 (sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 61 (sentence -> viewsignal .)
    ALTER           reduce using rule 61 (sentence -> viewsignal .)
    ALTERB          reduce using rule 61 (sentence -> viewsignal .)
    ID              reduce using rule 61 (sentence -> viewsignal .)
    ISTRUE          reduce using rule 61 (sentence -> viewsignal .)
    SIGNAL          reduce using rule 61 (sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 61 (sentence -> viewsignal .)
    CUT             reduce using rule 61 (sentence -> viewsignal .)
    RECUT           reduce using rule 61 (sentence -> viewsignal .)
    CASE            reduce using rule 61 (sentence -> viewsignal .)
    BREAK           reduce using rule 61 (sentence -> viewsignal .)
    WHILE           reduce using rule 61 (sentence -> viewsignal .)
    UNTIL           reduce using rule 61 (sentence -> viewsignal .)
    REPEAT          reduce using rule 61 (sentence -> viewsignal .)
    LPARENT         reduce using rule 61 (sentence -> viewsignal .)
    SEMICOLON       reduce using rule 61 (sentence -> viewsignal .)


state 84

    (62) sentence -> cut .

    RPARENT         reduce using rule 62 (sentence -> cut .)
    NEW             reduce using rule 62 (sentence -> cut .)
    VALUES          reduce using rule 62 (sentence -> cut .)
    CALL            reduce using rule 62 (sentence -> cut .)
    PRINTVALUES     reduce using rule 62 (sentence -> cut .)
    ALTER           reduce using rule 62 (sentence -> cut .)
    ALTERB          reduce using rule 62 (sentence -> cut .)
    ID              reduce using rule 62 (sentence -> cut .)
    ISTRUE          reduce using rule 62 (sentence -> cut .)
    SIGNAL          reduce using rule 62 (sentence -> cut .)
    VIEWSIGNAL      reduce using rule 62 (sentence -> cut .)
    CUT             reduce using rule 62 (sentence -> cut .)
    RECUT           reduce using rule 62 (sentence -> cut .)
    CASE            reduce using rule 62 (sentence -> cut .)
    BREAK           reduce using rule 62 (sentence -> cut .)
    WHILE           reduce using rule 62 (sentence -> cut .)
    UNTIL           reduce using rule 62 (sentence -> cut .)
    REPEAT          reduce using rule 62 (sentence -> cut .)
    LPARENT         reduce using rule 62 (sentence -> cut .)
    SEMICOLON       reduce using rule 62 (sentence -> cut .)


state 85

    (63) sentence -> recut .

    RPARENT         reduce using rule 63 (sentence -> recut .)
    NEW             reduce using rule 63 (sentence -> recut .)
    VALUES          reduce using rule 63 (sentence -> recut .)
    CALL            reduce using rule 63 (sentence -> recut .)
    PRINTVALUES     reduce using rule 63 (sentence -> recut .)
    ALTER           reduce using rule 63 (sentence -> recut .)
    ALTERB          reduce using rule 63 (sentence -> recut .)
    ID              reduce using rule 63 (sentence -> recut .)
    ISTRUE          reduce using rule 63 (sentence -> recut .)
    SIGNAL          reduce using rule 63 (sentence -> recut .)
    VIEWSIGNAL      reduce using rule 63 (sentence -> recut .)
    CUT             reduce using rule 63 (sentence -> recut .)
    RECUT           reduce using rule 63 (sentence -> recut .)
    CASE            reduce using rule 63 (sentence -> recut .)
    BREAK           reduce using rule 63 (sentence -> recut .)
    WHILE           reduce using rule 63 (sentence -> recut .)
    UNTIL           reduce using rule 63 (sentence -> recut .)
    REPEAT          reduce using rule 63 (sentence -> recut .)
    LPARENT         reduce using rule 63 (sentence -> recut .)
    SEMICOLON       reduce using rule 63 (sentence -> recut .)


state 86

    (64) sentence -> case .

    RPARENT         reduce using rule 64 (sentence -> case .)
    NEW             reduce using rule 64 (sentence -> case .)
    VALUES          reduce using rule 64 (sentence -> case .)
    CALL            reduce using rule 64 (sentence -> case .)
    PRINTVALUES     reduce using rule 64 (sentence -> case .)
    ALTER           reduce using rule 64 (sentence -> case .)
    ALTERB          reduce using rule 64 (sentence -> case .)
    ID              reduce using rule 64 (sentence -> case .)
    ISTRUE          reduce using rule 64 (sentence -> case .)
    SIGNAL          reduce using rule 64 (sentence -> case .)
    VIEWSIGNAL      reduce using rule 64 (sentence -> case .)
    CUT             reduce using rule 64 (sentence -> case .)
    RECUT           reduce using rule 64 (sentence -> case .)
    CASE            reduce using rule 64 (sentence -> case .)
    BREAK           reduce using rule 64 (sentence -> case .)
    WHILE           reduce using rule 64 (sentence -> case .)
    UNTIL           reduce using rule 64 (sentence -> case .)
    REPEAT          reduce using rule 64 (sentence -> case .)
    LPARENT         reduce using rule 64 (sentence -> case .)
    SEMICOLON       reduce using rule 64 (sentence -> case .)


state 87

    (65) sentence -> while .

    RPARENT         reduce using rule 65 (sentence -> while .)
    NEW             reduce using rule 65 (sentence -> while .)
    VALUES          reduce using rule 65 (sentence -> while .)
    CALL            reduce using rule 65 (sentence -> while .)
    PRINTVALUES     reduce using rule 65 (sentence -> while .)
    ALTER           reduce using rule 65 (sentence -> while .)
    ALTERB          reduce using rule 65 (sentence -> while .)
    ID              reduce using rule 65 (sentence -> while .)
    ISTRUE          reduce using rule 65 (sentence -> while .)
    SIGNAL          reduce using rule 65 (sentence -> while .)
    VIEWSIGNAL      reduce using rule 65 (sentence -> while .)
    CUT             reduce using rule 65 (sentence -> while .)
    RECUT           reduce using rule 65 (sentence -> while .)
    CASE            reduce using rule 65 (sentence -> while .)
    BREAK           reduce using rule 65 (sentence -> while .)
    WHILE           reduce using rule 65 (sentence -> while .)
    UNTIL           reduce using rule 65 (sentence -> while .)
    REPEAT          reduce using rule 65 (sentence -> while .)
    LPARENT         reduce using rule 65 (sentence -> while .)
    SEMICOLON       reduce using rule 65 (sentence -> while .)


state 88

    (66) sentence -> until .

    RPARENT         reduce using rule 66 (sentence -> until .)
    NEW             reduce using rule 66 (sentence -> until .)
    VALUES          reduce using rule 66 (sentence -> until .)
    CALL            reduce using rule 66 (sentence -> until .)
    PRINTVALUES     reduce using rule 66 (sentence -> until .)
    ALTER           reduce using rule 66 (sentence -> until .)
    ALTERB          reduce using rule 66 (sentence -> until .)
    ID              reduce using rule 66 (sentence -> until .)
    ISTRUE          reduce using rule 66 (sentence -> until .)
    SIGNAL          reduce using rule 66 (sentence -> until .)
    VIEWSIGNAL      reduce using rule 66 (sentence -> until .)
    CUT             reduce using rule 66 (sentence -> until .)
    RECUT           reduce using rule 66 (sentence -> until .)
    CASE            reduce using rule 66 (sentence -> until .)
    BREAK           reduce using rule 66 (sentence -> until .)
    WHILE           reduce using rule 66 (sentence -> until .)
    UNTIL           reduce using rule 66 (sentence -> until .)
    REPEAT          reduce using rule 66 (sentence -> until .)
    LPARENT         reduce using rule 66 (sentence -> until .)
    SEMICOLON       reduce using rule 66 (sentence -> until .)


state 89

    (67) sentence -> repeat .

    RPARENT         reduce using rule 67 (sentence -> repeat .)
    NEW             reduce using rule 67 (sentence -> repeat .)
    VALUES          reduce using rule 67 (sentence -> repeat .)
    CALL            reduce using rule 67 (sentence -> repeat .)
    PRINTVALUES     reduce using rule 67 (sentence -> repeat .)
    ALTER           reduce using rule 67 (sentence -> repeat .)
    ALTERB          reduce using rule 67 (sentence -> repeat .)
    ID              reduce using rule 67 (sentence -> repeat .)
    ISTRUE          reduce using rule 67 (sentence -> repeat .)
    SIGNAL          reduce using rule 67 (sentence -> repeat .)
    VIEWSIGNAL      reduce using rule 67 (sentence -> repeat .)
    CUT             reduce using rule 67 (sentence -> repeat .)
    RECUT           reduce using rule 67 (sentence -> repeat .)
    CASE            reduce using rule 67 (sentence -> repeat .)
    BREAK           reduce using rule 67 (sentence -> repeat .)
    WHILE           reduce using rule 67 (sentence -> repeat .)
    UNTIL           reduce using rule 67 (sentence -> repeat .)
    REPEAT          reduce using rule 67 (sentence -> repeat .)
    LPARENT         reduce using rule 67 (sentence -> repeat .)
    SEMICOLON       reduce using rule 67 (sentence -> repeat .)


state 90

    (68) sentence -> break .

    RPARENT         reduce using rule 68 (sentence -> break .)
    NEW             reduce using rule 68 (sentence -> break .)
    VALUES          reduce using rule 68 (sentence -> break .)
    CALL            reduce using rule 68 (sentence -> break .)
    PRINTVALUES     reduce using rule 68 (sentence -> break .)
    ALTER           reduce using rule 68 (sentence -> break .)
    ALTERB          reduce using rule 68 (sentence -> break .)
    ID              reduce using rule 68 (sentence -> break .)
    ISTRUE          reduce using rule 68 (sentence -> break .)
    SIGNAL          reduce using rule 68 (sentence -> break .)
    VIEWSIGNAL      reduce using rule 68 (sentence -> break .)
    CUT             reduce using rule 68 (sentence -> break .)
    RECUT           reduce using rule 68 (sentence -> break .)
    CASE            reduce using rule 68 (sentence -> break .)
    BREAK           reduce using rule 68 (sentence -> break .)
    WHILE           reduce using rule 68 (sentence -> break .)
    UNTIL           reduce using rule 68 (sentence -> break .)
    REPEAT          reduce using rule 68 (sentence -> break .)
    LPARENT         reduce using rule 68 (sentence -> break .)
    SEMICOLON       reduce using rule 68 (sentence -> break .)


state 91

    (69) sentence -> empty .

    RPARENT         reduce using rule 69 (sentence -> empty .)
    NEW             reduce using rule 69 (sentence -> empty .)
    VALUES          reduce using rule 69 (sentence -> empty .)
    CALL            reduce using rule 69 (sentence -> empty .)
    PRINTVALUES     reduce using rule 69 (sentence -> empty .)
    ALTER           reduce using rule 69 (sentence -> empty .)
    ALTERB          reduce using rule 69 (sentence -> empty .)
    ID              reduce using rule 69 (sentence -> empty .)
    ISTRUE          reduce using rule 69 (sentence -> empty .)
    SIGNAL          reduce using rule 69 (sentence -> empty .)
    VIEWSIGNAL      reduce using rule 69 (sentence -> empty .)
    CUT             reduce using rule 69 (sentence -> empty .)
    RECUT           reduce using rule 69 (sentence -> empty .)
    CASE            reduce using rule 69 (sentence -> empty .)
    BREAK           reduce using rule 69 (sentence -> empty .)
    WHILE           reduce using rule 69 (sentence -> empty .)
    UNTIL           reduce using rule 69 (sentence -> empty .)
    REPEAT          reduce using rule 69 (sentence -> empty .)
    LPARENT         reduce using rule 69 (sentence -> empty .)
    SEMICOLON       reduce using rule 69 (sentence -> empty .)


state 92

    (79) local_variable -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> NEW . ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    ID              shift and go to state 122


state 93

    (6) start -> master_vars master master_vars procedures .
    (7) start -> master_vars master master_vars procedures . master_vars
    (12) procedures -> procedures . procedure
    (40) master_vars -> . master_var
    (41) master_vars -> . master_vars master_var
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (42) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 6 (start -> master_vars master master_vars procedures .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    master_vars                    shift and go to state 123
    procedure                      shift and go to state 16
    master_var                     shift and go to state 5
    declare_procedure              shift and go to state 10

state 94

    (9) start -> master_vars master procedures master_vars .
    (41) master_vars -> master_vars . master_var
    (42) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    $end            reduce using rule 9 (start -> master_vars master procedures master_vars .)
    NEW             shift and go to state 6

    master_var                     shift and go to state 13

state 95

    (14) master -> MASTER LPARENT master_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 124


state 96

    (16) master_sentences -> master_sentences master_sentence .

    RPARENT         reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    NEW             reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    VALUES          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    CALL            reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    PRINTVALUES     reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    ALTER           reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    ALTERB          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    ID              reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    ISTRUE          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    SIGNAL          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    VIEWSIGNAL      reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    CUT             reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    RECUT           reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    CASE            reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    BREAK           reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    WHILE           reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    REPEAT          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    UNTIL           reduce using rule 16 (master_sentences -> master_sentences master_sentence .)


state 97

    (104) comparisson_maq -> ID MAQ . INTEGER

    INTEGER         shift and go to state 125


state 98

    (105) comparisson_meq -> ID MEQ . INTEGER

    INTEGER         shift and go to state 126


state 99

    (106) comparisson_equal -> ID EQUAL . INTEGER

    INTEGER         shift and go to state 127


state 100

    (107) comparisson_dif -> ID DIFFERENT . INTEGER

    INTEGER         shift and go to state 128


state 101

    (108) comparisson_meqequal -> ID MEQEQUAL . INTEGER

    INTEGER         shift and go to state 129


state 102

    (109) comparisson_maqequal -> ID MAQEQUAL . INTEGER

    INTEGER         shift and go to state 130


state 103

    (82) values -> VALUES LPARENT . ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> VALUES LPARENT . ID COMA BOOL RPARENT SEMICOLON
    (84) values -> VALUES LPARENT . ID COMA return_statement RPARENT SEMICOLON

    ID              shift and go to state 131


state 104

    (85) call -> CALL LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 132


state 105

    (86) print_values -> PRINTVALUES LPARENT . printable_sentences RPARENT SEMICOLON
    (87) printable_sentences -> . printable_sentence_var
    (88) printable_sentences -> . printable_sentence_string
    (89) printable_sentences -> . printable_sentence_var COMA printable_sentence_var
    (90) printable_sentences -> . printable_sentence_string COMA printable_sentence_string
    (91) printable_sentences -> . printable_sentence_var COMA printable_sentence_string
    (92) printable_sentences -> . printable_sentence_string COMA printable_sentence_var
    (93) printable_sentences -> . printable_sentences COMA printable_sentence_var
    (94) printable_sentences -> . printable_sentences COMA printable_sentence_string
    (95) printable_sentences -> . COMA printable_sentences COMA printable_sentence_var
    (96) printable_sentences -> . COMA printable_sentences COMA printable_sentence_string
    (97) printable_sentence_var -> . ID
    (98) printable_sentence_string -> . STRING

    COMA            shift and go to state 136
    ID              shift and go to state 137
    STRING          shift and go to state 138

    printable_sentences            shift and go to state 133
    printable_sentence_var         shift and go to state 134
    printable_sentence_string      shift and go to state 135

state 106

    (99) alter -> ALTER LPARENT . ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> ALTER LPARENT . ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> ALTER LPARENT . ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> ALTER LPARENT . ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    ID              shift and go to state 139


state 107

    (103) alterB -> ALTERB LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 140


state 108

    (110) isTrue -> ISTRUE LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 141


state 109

    (111) signal -> SIGNAL LPARENT . INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> SIGNAL LPARENT . ID COMA INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 142
    ID              shift and go to state 143


state 110

    (113) viewsignal -> VIEWSIGNAL LPARENT . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 144


state 111

    (129) cut -> CUT LPARENT . ID COMA STRING RPARENT SEMICOLON
    (130) cut -> CUT LPARENT . ID COMA ID RPARENT SEMICOLON

    ID              shift and go to state 145


state 112

    (131) recut -> RECUT LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 146


state 113

    (121) case -> CASE expression . recursive_conditions SEMICOLON
    (123) recursive_conditions -> . recursive_condition
    (124) recursive_conditions -> . recursive_conditions recursive_condition
    (125) recursive_condition -> . condition LPARENT sentences RPARENT
    (127) condition -> . WHEN INTEGER THEN
    (128) condition -> . WHEN STRING THEN

    WHEN            shift and go to state 150

    recursive_conditions           shift and go to state 147
    recursive_condition            shift and go to state 148
    condition                      shift and go to state 149

state 114

    (126) expression -> ID .

    WHEN            reduce using rule 126 (expression -> ID .)


state 115

    (114) while -> while_handler sentence . LPARENT sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 151


state 116

    (118) repeat -> repeat_handler LPARENT . sentences RPARENT SEMICOLON
    (45) sentences -> . sentence
    (46) sentences -> . sentences sentence
    (47) sentence -> . local_variable
    (48) sentence -> . values
    (49) sentence -> . call
    (50) sentence -> . print_values
    (51) sentence -> . alter
    (52) sentence -> . alterB
    (53) sentence -> . comparisson_maq
    (54) sentence -> . comparisson_meq
    (55) sentence -> . comparisson_equal
    (56) sentence -> . comparisson_dif
    (57) sentence -> . comparisson_meqequal
    (58) sentence -> . comparisson_maqequal
    (59) sentence -> . isTrue
    (60) sentence -> . signal
    (61) sentence -> . viewsignal
    (62) sentence -> . cut
    (63) sentence -> . recut
    (64) sentence -> . case
    (65) sentence -> . while
    (66) sentence -> . until
    (67) sentence -> . repeat
    (68) sentence -> . break
    (69) sentence -> . empty
    (79) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (117) until_handler -> . UNTIL
    (119) repeat_handler -> . REPEAT

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
    NEW             shift and go to state 92
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    RPARENT         reduce using rule 132 (empty -> .)
    WHILE           shift and go to state 63
    UNTIL           shift and go to state 65
    REPEAT          shift and go to state 64

  ! NEW             [ reduce using rule 132 (empty -> .) ]
  ! VALUES          [ reduce using rule 132 (empty -> .) ]
  ! CALL            [ reduce using rule 132 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 132 (empty -> .) ]
  ! ALTER           [ reduce using rule 132 (empty -> .) ]
  ! ALTERB          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 132 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 132 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 132 (empty -> .) ]
  ! CUT             [ reduce using rule 132 (empty -> .) ]
  ! RECUT           [ reduce using rule 132 (empty -> .) ]
  ! CASE            [ reduce using rule 132 (empty -> .) ]
  ! BREAK           [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! UNTIL           [ reduce using rule 132 (empty -> .) ]
  ! REPEAT          [ reduce using rule 132 (empty -> .) ]

    repeat_handler                 shift and go to state 60
    sentences                      shift and go to state 152
    sentence                       shift and go to state 68
    local_variable                 shift and go to state 69
    values                         shift and go to state 70
    call                           shift and go to state 71
    print_values                   shift and go to state 72
    alter                          shift and go to state 73
    alterB                         shift and go to state 74
    comparisson_maq                shift and go to state 75
    comparisson_meq                shift and go to state 76
    comparisson_equal              shift and go to state 77
    comparisson_dif                shift and go to state 78
    comparisson_meqequal           shift and go to state 79
    comparisson_maqequal           shift and go to state 80
    isTrue                         shift and go to state 81
    signal                         shift and go to state 82
    viewsignal                     shift and go to state 83
    cut                            shift and go to state 84
    recut                          shift and go to state 85
    case                           shift and go to state 86
    while                          shift and go to state 87
    until                          shift and go to state 88
    repeat                         shift and go to state 89
    break                          shift and go to state 90
    empty                          shift and go to state 91
    while_handler                  shift and go to state 59
    until_handler                  shift and go to state 61

state 117

    (116) until -> until_handler LPARENT . sentences RPARENT sentence SEMICOLON
    (45) sentences -> . sentence
    (46) sentences -> . sentences sentence
    (47) sentence -> . local_variable
    (48) sentence -> . values
    (49) sentence -> . call
    (50) sentence -> . print_values
    (51) sentence -> . alter
    (52) sentence -> . alterB
    (53) sentence -> . comparisson_maq
    (54) sentence -> . comparisson_meq
    (55) sentence -> . comparisson_equal
    (56) sentence -> . comparisson_dif
    (57) sentence -> . comparisson_meqequal
    (58) sentence -> . comparisson_maqequal
    (59) sentence -> . isTrue
    (60) sentence -> . signal
    (61) sentence -> . viewsignal
    (62) sentence -> . cut
    (63) sentence -> . recut
    (64) sentence -> . case
    (65) sentence -> . while
    (66) sentence -> . until
    (67) sentence -> . repeat
    (68) sentence -> . break
    (69) sentence -> . empty
    (79) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (117) until_handler -> . UNTIL
    (119) repeat_handler -> . REPEAT

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
    NEW             shift and go to state 92
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    RPARENT         reduce using rule 132 (empty -> .)
    WHILE           shift and go to state 63
    UNTIL           shift and go to state 65
    REPEAT          shift and go to state 64

  ! NEW             [ reduce using rule 132 (empty -> .) ]
  ! VALUES          [ reduce using rule 132 (empty -> .) ]
  ! CALL            [ reduce using rule 132 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 132 (empty -> .) ]
  ! ALTER           [ reduce using rule 132 (empty -> .) ]
  ! ALTERB          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 132 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 132 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 132 (empty -> .) ]
  ! CUT             [ reduce using rule 132 (empty -> .) ]
  ! RECUT           [ reduce using rule 132 (empty -> .) ]
  ! CASE            [ reduce using rule 132 (empty -> .) ]
  ! BREAK           [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! UNTIL           [ reduce using rule 132 (empty -> .) ]
  ! REPEAT          [ reduce using rule 132 (empty -> .) ]

    until_handler                  shift and go to state 61
    sentences                      shift and go to state 153
    sentence                       shift and go to state 68
    local_variable                 shift and go to state 69
    values                         shift and go to state 70
    call                           shift and go to state 71
    print_values                   shift and go to state 72
    alter                          shift and go to state 73
    alterB                         shift and go to state 74
    comparisson_maq                shift and go to state 75
    comparisson_meq                shift and go to state 76
    comparisson_equal              shift and go to state 77
    comparisson_dif                shift and go to state 78
    comparisson_meqequal           shift and go to state 79
    comparisson_maqequal           shift and go to state 80
    isTrue                         shift and go to state 81
    signal                         shift and go to state 82
    viewsignal                     shift and go to state 83
    cut                            shift and go to state 84
    recut                          shift and go to state 85
    case                           shift and go to state 86
    while                          shift and go to state 87
    until                          shift and go to state 88
    repeat                         shift and go to state 89
    break                          shift and go to state 90
    empty                          shift and go to state 91
    while_handler                  shift and go to state 59
    repeat_handler                 shift and go to state 60

state 118

    (120) break -> BREAK SEMICOLON .

    RPARENT         reduce using rule 120 (break -> BREAK SEMICOLON .)
    NEW             reduce using rule 120 (break -> BREAK SEMICOLON .)
    VALUES          reduce using rule 120 (break -> BREAK SEMICOLON .)
    CALL            reduce using rule 120 (break -> BREAK SEMICOLON .)
    PRINTVALUES     reduce using rule 120 (break -> BREAK SEMICOLON .)
    ALTER           reduce using rule 120 (break -> BREAK SEMICOLON .)
    ALTERB          reduce using rule 120 (break -> BREAK SEMICOLON .)
    ID              reduce using rule 120 (break -> BREAK SEMICOLON .)
    ISTRUE          reduce using rule 120 (break -> BREAK SEMICOLON .)
    SIGNAL          reduce using rule 120 (break -> BREAK SEMICOLON .)
    VIEWSIGNAL      reduce using rule 120 (break -> BREAK SEMICOLON .)
    CUT             reduce using rule 120 (break -> BREAK SEMICOLON .)
    RECUT           reduce using rule 120 (break -> BREAK SEMICOLON .)
    CASE            reduce using rule 120 (break -> BREAK SEMICOLON .)
    BREAK           reduce using rule 120 (break -> BREAK SEMICOLON .)
    WHILE           reduce using rule 120 (break -> BREAK SEMICOLON .)
    REPEAT          reduce using rule 120 (break -> BREAK SEMICOLON .)
    UNTIL           reduce using rule 120 (break -> BREAK SEMICOLON .)
    LPARENT         reduce using rule 120 (break -> BREAK SEMICOLON .)
    SEMICOLON       reduce using rule 120 (break -> BREAK SEMICOLON .)


state 119

    (42) master_var -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> NEW ID COMA LPARENT . TYPE COMA STRING RPARENT SEMICOLON

    TYPE            shift and go to state 154


state 120

    (13) procedure -> declare_procedure LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 155


state 121

    (46) sentences -> sentences sentence .

    RPARENT         reduce using rule 46 (sentences -> sentences sentence .)
    NEW             reduce using rule 46 (sentences -> sentences sentence .)
    VALUES          reduce using rule 46 (sentences -> sentences sentence .)
    CALL            reduce using rule 46 (sentences -> sentences sentence .)
    PRINTVALUES     reduce using rule 46 (sentences -> sentences sentence .)
    ALTER           reduce using rule 46 (sentences -> sentences sentence .)
    ALTERB          reduce using rule 46 (sentences -> sentences sentence .)
    ID              reduce using rule 46 (sentences -> sentences sentence .)
    ISTRUE          reduce using rule 46 (sentences -> sentences sentence .)
    SIGNAL          reduce using rule 46 (sentences -> sentences sentence .)
    VIEWSIGNAL      reduce using rule 46 (sentences -> sentences sentence .)
    CUT             reduce using rule 46 (sentences -> sentences sentence .)
    RECUT           reduce using rule 46 (sentences -> sentences sentence .)
    CASE            reduce using rule 46 (sentences -> sentences sentence .)
    BREAK           reduce using rule 46 (sentences -> sentences sentence .)
    WHILE           reduce using rule 46 (sentences -> sentences sentence .)
    UNTIL           reduce using rule 46 (sentences -> sentences sentence .)
    REPEAT          reduce using rule 46 (sentences -> sentences sentence .)


state 122

    (79) local_variable -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> NEW ID . COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    COMA            shift and go to state 156


state 123

    (7) start -> master_vars master master_vars procedures master_vars .
    (41) master_vars -> master_vars . master_var
    (42) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (44) master_var -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON

    $end            reduce using rule 7 (start -> master_vars master master_vars procedures master_vars .)
    NEW             shift and go to state 6

    master_var                     shift and go to state 13

state 124

    (14) master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .

    NEW             reduce using rule 14 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)
    PROC            reduce using rule 14 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)
    $end            reduce using rule 14 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)


state 125

    (104) comparisson_maq -> ID MAQ INTEGER .

    RPARENT         reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    NEW             reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    VALUES          reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    CALL            reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    PRINTVALUES     reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    ALTER           reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    ALTERB          reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    ID              reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    ISTRUE          reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    SIGNAL          reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    VIEWSIGNAL      reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    CUT             reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    RECUT           reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    CASE            reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    BREAK           reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    WHILE           reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    REPEAT          reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    UNTIL           reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    LPARENT         reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)
    SEMICOLON       reduce using rule 104 (comparisson_maq -> ID MAQ INTEGER .)


state 126

    (105) comparisson_meq -> ID MEQ INTEGER .

    RPARENT         reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    NEW             reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    VALUES          reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    CALL            reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    PRINTVALUES     reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    ALTER           reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    ALTERB          reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    ID              reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    ISTRUE          reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    SIGNAL          reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    VIEWSIGNAL      reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    CUT             reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    RECUT           reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    CASE            reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    BREAK           reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    WHILE           reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    REPEAT          reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    UNTIL           reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    LPARENT         reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)
    SEMICOLON       reduce using rule 105 (comparisson_meq -> ID MEQ INTEGER .)


state 127

    (106) comparisson_equal -> ID EQUAL INTEGER .

    RPARENT         reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    NEW             reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    VALUES          reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    CALL            reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    PRINTVALUES     reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    ALTER           reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    ALTERB          reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    ID              reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    ISTRUE          reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    SIGNAL          reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    CUT             reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    RECUT           reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    CASE            reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    BREAK           reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    WHILE           reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    REPEAT          reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    UNTIL           reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    LPARENT         reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)
    SEMICOLON       reduce using rule 106 (comparisson_equal -> ID EQUAL INTEGER .)


state 128

    (107) comparisson_dif -> ID DIFFERENT INTEGER .

    RPARENT         reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    NEW             reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    VALUES          reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    CALL            reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    PRINTVALUES     reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    ALTER           reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    ALTERB          reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    ID              reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    ISTRUE          reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    SIGNAL          reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    VIEWSIGNAL      reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    CUT             reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    RECUT           reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    CASE            reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    BREAK           reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    WHILE           reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    REPEAT          reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    UNTIL           reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    LPARENT         reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)
    SEMICOLON       reduce using rule 107 (comparisson_dif -> ID DIFFERENT INTEGER .)


state 129

    (108) comparisson_meqequal -> ID MEQEQUAL INTEGER .

    RPARENT         reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    NEW             reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    VALUES          reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    CALL            reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    ALTER           reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    ALTERB          reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    ID              reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    ISTRUE          reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    SIGNAL          reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    CUT             reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    RECUT           reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    CASE            reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    BREAK           reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    WHILE           reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    REPEAT          reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    UNTIL           reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    LPARENT         reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    SEMICOLON       reduce using rule 108 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)


state 130

    (109) comparisson_maqequal -> ID MAQEQUAL INTEGER .

    RPARENT         reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    NEW             reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    VALUES          reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    CALL            reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    ALTER           reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    ALTERB          reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    ID              reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    ISTRUE          reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    SIGNAL          reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    CUT             reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    RECUT           reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    CASE            reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    BREAK           reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    WHILE           reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    REPEAT          reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    UNTIL           reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    LPARENT         reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    SEMICOLON       reduce using rule 109 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)


state 131

    (82) values -> VALUES LPARENT ID . COMA INTEGER RPARENT SEMICOLON
    (83) values -> VALUES LPARENT ID . COMA BOOL RPARENT SEMICOLON
    (84) values -> VALUES LPARENT ID . COMA return_statement RPARENT SEMICOLON

    COMA            shift and go to state 157


state 132

    (85) call -> CALL LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 158


state 133

    (86) print_values -> PRINTVALUES LPARENT printable_sentences . RPARENT SEMICOLON
    (93) printable_sentences -> printable_sentences . COMA printable_sentence_var
    (94) printable_sentences -> printable_sentences . COMA printable_sentence_string

    RPARENT         shift and go to state 159
    COMA            shift and go to state 160


state 134

    (87) printable_sentences -> printable_sentence_var .
    (89) printable_sentences -> printable_sentence_var . COMA printable_sentence_var
    (91) printable_sentences -> printable_sentence_var . COMA printable_sentence_string

  ! shift/reduce conflict for COMA resolved as shift
    RPARENT         reduce using rule 87 (printable_sentences -> printable_sentence_var .)
    COMA            shift and go to state 161

  ! COMA            [ reduce using rule 87 (printable_sentences -> printable_sentence_var .) ]


state 135

    (88) printable_sentences -> printable_sentence_string .
    (90) printable_sentences -> printable_sentence_string . COMA printable_sentence_string
    (92) printable_sentences -> printable_sentence_string . COMA printable_sentence_var

  ! shift/reduce conflict for COMA resolved as shift
    RPARENT         reduce using rule 88 (printable_sentences -> printable_sentence_string .)
    COMA            shift and go to state 162

  ! COMA            [ reduce using rule 88 (printable_sentences -> printable_sentence_string .) ]


state 136

    (95) printable_sentences -> COMA . printable_sentences COMA printable_sentence_var
    (96) printable_sentences -> COMA . printable_sentences COMA printable_sentence_string
    (87) printable_sentences -> . printable_sentence_var
    (88) printable_sentences -> . printable_sentence_string
    (89) printable_sentences -> . printable_sentence_var COMA printable_sentence_var
    (90) printable_sentences -> . printable_sentence_string COMA printable_sentence_string
    (91) printable_sentences -> . printable_sentence_var COMA printable_sentence_string
    (92) printable_sentences -> . printable_sentence_string COMA printable_sentence_var
    (93) printable_sentences -> . printable_sentences COMA printable_sentence_var
    (94) printable_sentences -> . printable_sentences COMA printable_sentence_string
    (95) printable_sentences -> . COMA printable_sentences COMA printable_sentence_var
    (96) printable_sentences -> . COMA printable_sentences COMA printable_sentence_string
    (97) printable_sentence_var -> . ID
    (98) printable_sentence_string -> . STRING

    COMA            shift and go to state 136
    ID              shift and go to state 137
    STRING          shift and go to state 138

    printable_sentences            shift and go to state 163
    printable_sentence_var         shift and go to state 134
    printable_sentence_string      shift and go to state 135

state 137

    (97) printable_sentence_var -> ID .

    COMA            reduce using rule 97 (printable_sentence_var -> ID .)
    RPARENT         reduce using rule 97 (printable_sentence_var -> ID .)


state 138

    (98) printable_sentence_string -> STRING .

    COMA            reduce using rule 98 (printable_sentence_string -> STRING .)
    RPARENT         reduce using rule 98 (printable_sentence_string -> STRING .)


state 139

    (99) alter -> ALTER LPARENT ID . COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> ALTER LPARENT ID . COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> ALTER LPARENT ID . COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> ALTER LPARENT ID . COMA DIV COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 164


state 140

    (103) alterB -> ALTERB LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 165


state 141

    (110) isTrue -> ISTRUE LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 166


state 142

    (111) signal -> SIGNAL LPARENT INTEGER . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 167


state 143

    (112) signal -> SIGNAL LPARENT ID . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 168


state 144

    (113) viewsignal -> VIEWSIGNAL LPARENT INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 169


state 145

    (129) cut -> CUT LPARENT ID . COMA STRING RPARENT SEMICOLON
    (130) cut -> CUT LPARENT ID . COMA ID RPARENT SEMICOLON

    COMA            shift and go to state 170


state 146

    (131) recut -> RECUT LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 171


state 147

    (121) case -> CASE expression recursive_conditions . SEMICOLON
    (124) recursive_conditions -> recursive_conditions . recursive_condition
    (125) recursive_condition -> . condition LPARENT sentences RPARENT
    (127) condition -> . WHEN INTEGER THEN
    (128) condition -> . WHEN STRING THEN

    SEMICOLON       shift and go to state 172
    WHEN            shift and go to state 150

    recursive_condition            shift and go to state 173
    condition                      shift and go to state 149

state 148

    (123) recursive_conditions -> recursive_condition .

    SEMICOLON       reduce using rule 123 (recursive_conditions -> recursive_condition .)
    WHEN            reduce using rule 123 (recursive_conditions -> recursive_condition .)


state 149

    (125) recursive_condition -> condition . LPARENT sentences RPARENT

    LPARENT         shift and go to state 174


state 150

    (127) condition -> WHEN . INTEGER THEN
    (128) condition -> WHEN . STRING THEN

    INTEGER         shift and go to state 175
    STRING          shift and go to state 176


state 151

    (114) while -> while_handler sentence LPARENT . sentences RPARENT SEMICOLON
    (45) sentences -> . sentence
    (46) sentences -> . sentences sentence
    (47) sentence -> . local_variable
    (48) sentence -> . values
    (49) sentence -> . call
    (50) sentence -> . print_values
    (51) sentence -> . alter
    (52) sentence -> . alterB
    (53) sentence -> . comparisson_maq
    (54) sentence -> . comparisson_meq
    (55) sentence -> . comparisson_equal
    (56) sentence -> . comparisson_dif
    (57) sentence -> . comparisson_meqequal
    (58) sentence -> . comparisson_maqequal
    (59) sentence -> . isTrue
    (60) sentence -> . signal
    (61) sentence -> . viewsignal
    (62) sentence -> . cut
    (63) sentence -> . recut
    (64) sentence -> . case
    (65) sentence -> . while
    (66) sentence -> . until
    (67) sentence -> . repeat
    (68) sentence -> . break
    (69) sentence -> . empty
    (79) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (117) until_handler -> . UNTIL
    (119) repeat_handler -> . REPEAT

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
    NEW             shift and go to state 92
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    RPARENT         reduce using rule 132 (empty -> .)
    WHILE           shift and go to state 63
    UNTIL           shift and go to state 65
    REPEAT          shift and go to state 64

  ! NEW             [ reduce using rule 132 (empty -> .) ]
  ! VALUES          [ reduce using rule 132 (empty -> .) ]
  ! CALL            [ reduce using rule 132 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 132 (empty -> .) ]
  ! ALTER           [ reduce using rule 132 (empty -> .) ]
  ! ALTERB          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 132 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 132 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 132 (empty -> .) ]
  ! CUT             [ reduce using rule 132 (empty -> .) ]
  ! RECUT           [ reduce using rule 132 (empty -> .) ]
  ! CASE            [ reduce using rule 132 (empty -> .) ]
  ! BREAK           [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! UNTIL           [ reduce using rule 132 (empty -> .) ]
  ! REPEAT          [ reduce using rule 132 (empty -> .) ]

    while_handler                  shift and go to state 59
    sentence                       shift and go to state 68
    sentences                      shift and go to state 177
    local_variable                 shift and go to state 69
    values                         shift and go to state 70
    call                           shift and go to state 71
    print_values                   shift and go to state 72
    alter                          shift and go to state 73
    alterB                         shift and go to state 74
    comparisson_maq                shift and go to state 75
    comparisson_meq                shift and go to state 76
    comparisson_equal              shift and go to state 77
    comparisson_dif                shift and go to state 78
    comparisson_meqequal           shift and go to state 79
    comparisson_maqequal           shift and go to state 80
    isTrue                         shift and go to state 81
    signal                         shift and go to state 82
    viewsignal                     shift and go to state 83
    cut                            shift and go to state 84
    recut                          shift and go to state 85
    case                           shift and go to state 86
    while                          shift and go to state 87
    until                          shift and go to state 88
    repeat                         shift and go to state 89
    break                          shift and go to state 90
    empty                          shift and go to state 91
    until_handler                  shift and go to state 61
    repeat_handler                 shift and go to state 60

state 152

    (118) repeat -> repeat_handler LPARENT sentences . RPARENT SEMICOLON
    (46) sentences -> sentences . sentence
    (47) sentence -> . local_variable
    (48) sentence -> . values
    (49) sentence -> . call
    (50) sentence -> . print_values
    (51) sentence -> . alter
    (52) sentence -> . alterB
    (53) sentence -> . comparisson_maq
    (54) sentence -> . comparisson_meq
    (55) sentence -> . comparisson_equal
    (56) sentence -> . comparisson_dif
    (57) sentence -> . comparisson_meqequal
    (58) sentence -> . comparisson_maqequal
    (59) sentence -> . isTrue
    (60) sentence -> . signal
    (61) sentence -> . viewsignal
    (62) sentence -> . cut
    (63) sentence -> . recut
    (64) sentence -> . case
    (65) sentence -> . while
    (66) sentence -> . until
    (67) sentence -> . repeat
    (68) sentence -> . break
    (69) sentence -> . empty
    (79) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (117) until_handler -> . UNTIL
    (119) repeat_handler -> . REPEAT

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
    RPARENT         shift and go to state 178
    NEW             shift and go to state 92
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    WHILE           shift and go to state 63
    UNTIL           shift and go to state 65
    REPEAT          shift and go to state 64

  ! RPARENT         [ reduce using rule 132 (empty -> .) ]
  ! NEW             [ reduce using rule 132 (empty -> .) ]
  ! VALUES          [ reduce using rule 132 (empty -> .) ]
  ! CALL            [ reduce using rule 132 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 132 (empty -> .) ]
  ! ALTER           [ reduce using rule 132 (empty -> .) ]
  ! ALTERB          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 132 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 132 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 132 (empty -> .) ]
  ! CUT             [ reduce using rule 132 (empty -> .) ]
  ! RECUT           [ reduce using rule 132 (empty -> .) ]
  ! CASE            [ reduce using rule 132 (empty -> .) ]
  ! BREAK           [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! UNTIL           [ reduce using rule 132 (empty -> .) ]
  ! REPEAT          [ reduce using rule 132 (empty -> .) ]

    repeat_handler                 shift and go to state 60
    sentence                       shift and go to state 121
    local_variable                 shift and go to state 69
    values                         shift and go to state 70
    call                           shift and go to state 71
    print_values                   shift and go to state 72
    alter                          shift and go to state 73
    alterB                         shift and go to state 74
    comparisson_maq                shift and go to state 75
    comparisson_meq                shift and go to state 76
    comparisson_equal              shift and go to state 77
    comparisson_dif                shift and go to state 78
    comparisson_meqequal           shift and go to state 79
    comparisson_maqequal           shift and go to state 80
    isTrue                         shift and go to state 81
    signal                         shift and go to state 82
    viewsignal                     shift and go to state 83
    cut                            shift and go to state 84
    recut                          shift and go to state 85
    case                           shift and go to state 86
    while                          shift and go to state 87
    until                          shift and go to state 88
    repeat                         shift and go to state 89
    break                          shift and go to state 90
    empty                          shift and go to state 91
    while_handler                  shift and go to state 59
    until_handler                  shift and go to state 61

state 153

    (116) until -> until_handler LPARENT sentences . RPARENT sentence SEMICOLON
    (46) sentences -> sentences . sentence
    (47) sentence -> . local_variable
    (48) sentence -> . values
    (49) sentence -> . call
    (50) sentence -> . print_values
    (51) sentence -> . alter
    (52) sentence -> . alterB
    (53) sentence -> . comparisson_maq
    (54) sentence -> . comparisson_meq
    (55) sentence -> . comparisson_equal
    (56) sentence -> . comparisson_dif
    (57) sentence -> . comparisson_meqequal
    (58) sentence -> . comparisson_maqequal
    (59) sentence -> . isTrue
    (60) sentence -> . signal
    (61) sentence -> . viewsignal
    (62) sentence -> . cut
    (63) sentence -> . recut
    (64) sentence -> . case
    (65) sentence -> . while
    (66) sentence -> . until
    (67) sentence -> . repeat
    (68) sentence -> . break
    (69) sentence -> . empty
    (79) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (117) until_handler -> . UNTIL
    (119) repeat_handler -> . REPEAT

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
    RPARENT         shift and go to state 179
    NEW             shift and go to state 92
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    WHILE           shift and go to state 63
    UNTIL           shift and go to state 65
    REPEAT          shift and go to state 64

  ! RPARENT         [ reduce using rule 132 (empty -> .) ]
  ! NEW             [ reduce using rule 132 (empty -> .) ]
  ! VALUES          [ reduce using rule 132 (empty -> .) ]
  ! CALL            [ reduce using rule 132 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 132 (empty -> .) ]
  ! ALTER           [ reduce using rule 132 (empty -> .) ]
  ! ALTERB          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 132 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 132 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 132 (empty -> .) ]
  ! CUT             [ reduce using rule 132 (empty -> .) ]
  ! RECUT           [ reduce using rule 132 (empty -> .) ]
  ! CASE            [ reduce using rule 132 (empty -> .) ]
  ! BREAK           [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! UNTIL           [ reduce using rule 132 (empty -> .) ]
  ! REPEAT          [ reduce using rule 132 (empty -> .) ]

    until_handler                  shift and go to state 61
    sentence                       shift and go to state 121
    local_variable                 shift and go to state 69
    values                         shift and go to state 70
    call                           shift and go to state 71
    print_values                   shift and go to state 72
    alter                          shift and go to state 73
    alterB                         shift and go to state 74
    comparisson_maq                shift and go to state 75
    comparisson_meq                shift and go to state 76
    comparisson_equal              shift and go to state 77
    comparisson_dif                shift and go to state 78
    comparisson_meqequal           shift and go to state 79
    comparisson_maqequal           shift and go to state 80
    isTrue                         shift and go to state 81
    signal                         shift and go to state 82
    viewsignal                     shift and go to state 83
    cut                            shift and go to state 84
    recut                          shift and go to state 85
    case                           shift and go to state 86
    while                          shift and go to state 87
    until                          shift and go to state 88
    repeat                         shift and go to state 89
    break                          shift and go to state 90
    empty                          shift and go to state 91
    while_handler                  shift and go to state 59
    repeat_handler                 shift and go to state 60

state 154

    (42) master_var -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (43) master_var -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON
    (44) master_var -> NEW ID COMA LPARENT TYPE . COMA STRING RPARENT SEMICOLON

    COMA            shift and go to state 180


state 155

    (13) procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .

    PROC            reduce using rule 13 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)
    $end            reduce using rule 13 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 13 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)


state 156

    (79) local_variable -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> NEW ID COMA . LPARENT TYPE COMA STRING RPARENT SEMICOLON

    LPARENT         shift and go to state 181


state 157

    (82) values -> VALUES LPARENT ID COMA . INTEGER RPARENT SEMICOLON
    (83) values -> VALUES LPARENT ID COMA . BOOL RPARENT SEMICOLON
    (84) values -> VALUES LPARENT ID COMA . return_statement RPARENT SEMICOLON
    (70) return_statement -> . isTrue
    (71) return_statement -> . comparisson_maqequal
    (72) return_statement -> . comparisson_meqequal
    (73) return_statement -> . comparisson_dif
    (74) return_statement -> . comparisson_equal
    (75) return_statement -> . comparisson_meq
    (76) return_statement -> . comparisson_maq
    (77) return_statement -> . alterB
    (78) return_statement -> . alter
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (104) comparisson_maq -> . ID MAQ INTEGER
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 183
    BOOL            shift and go to state 184
    ISTRUE          shift and go to state 53
    ID              shift and go to state 182
    ALTERB          shift and go to state 52
    ALTER           shift and go to state 51

    return_statement               shift and go to state 185
    isTrue                         shift and go to state 186
    comparisson_maqequal           shift and go to state 187
    comparisson_meqequal           shift and go to state 188
    comparisson_dif                shift and go to state 189
    comparisson_equal              shift and go to state 190
    comparisson_meq                shift and go to state 191
    comparisson_maq                shift and go to state 192
    alterB                         shift and go to state 193
    alter                          shift and go to state 194

state 158

    (85) call -> CALL LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 195


state 159

    (86) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 196


state 160

    (93) printable_sentences -> printable_sentences COMA . printable_sentence_var
    (94) printable_sentences -> printable_sentences COMA . printable_sentence_string
    (97) printable_sentence_var -> . ID
    (98) printable_sentence_string -> . STRING

    ID              shift and go to state 137
    STRING          shift and go to state 138

    printable_sentence_var         shift and go to state 197
    printable_sentence_string      shift and go to state 198

state 161

    (89) printable_sentences -> printable_sentence_var COMA . printable_sentence_var
    (91) printable_sentences -> printable_sentence_var COMA . printable_sentence_string
    (97) printable_sentence_var -> . ID
    (98) printable_sentence_string -> . STRING

    ID              shift and go to state 137
    STRING          shift and go to state 138

    printable_sentence_var         shift and go to state 199
    printable_sentence_string      shift and go to state 200

state 162

    (90) printable_sentences -> printable_sentence_string COMA . printable_sentence_string
    (92) printable_sentences -> printable_sentence_string COMA . printable_sentence_var
    (98) printable_sentence_string -> . STRING
    (97) printable_sentence_var -> . ID

    STRING          shift and go to state 138
    ID              shift and go to state 137

    printable_sentence_string      shift and go to state 201
    printable_sentence_var         shift and go to state 202

state 163

    (95) printable_sentences -> COMA printable_sentences . COMA printable_sentence_var
    (96) printable_sentences -> COMA printable_sentences . COMA printable_sentence_string
    (93) printable_sentences -> printable_sentences . COMA printable_sentence_var
    (94) printable_sentences -> printable_sentences . COMA printable_sentence_string

    COMA            shift and go to state 203


state 164

    (99) alter -> ALTER LPARENT ID COMA . ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> ALTER LPARENT ID COMA . SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> ALTER LPARENT ID COMA . MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> ALTER LPARENT ID COMA . DIV COMA INTEGER RPARENT SEMICOLON

    ADD             shift and go to state 204
    SUB             shift and go to state 205
    MUL             shift and go to state 206
    DIV             shift and go to state 207


state 165

    (103) alterB -> ALTERB LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 208


state 166

    (110) isTrue -> ISTRUE LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 209


state 167

    (111) signal -> SIGNAL LPARENT INTEGER COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 210


state 168

    (112) signal -> SIGNAL LPARENT ID COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 211


state 169

    (113) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 212


state 170

    (129) cut -> CUT LPARENT ID COMA . STRING RPARENT SEMICOLON
    (130) cut -> CUT LPARENT ID COMA . ID RPARENT SEMICOLON

    STRING          shift and go to state 214
    ID              shift and go to state 213


state 171

    (131) recut -> RECUT LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 215


state 172

    (121) case -> CASE expression recursive_conditions SEMICOLON .

    RPARENT         reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    NEW             reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    VALUES          reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    CALL            reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    PRINTVALUES     reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    ALTER           reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    ALTERB          reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    ID              reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    ISTRUE          reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    SIGNAL          reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    VIEWSIGNAL      reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    CUT             reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    RECUT           reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    CASE            reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    BREAK           reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    WHILE           reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    REPEAT          reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    UNTIL           reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    LPARENT         reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)
    SEMICOLON       reduce using rule 121 (case -> CASE expression recursive_conditions SEMICOLON .)


state 173

    (124) recursive_conditions -> recursive_conditions recursive_condition .

    SEMICOLON       reduce using rule 124 (recursive_conditions -> recursive_conditions recursive_condition .)
    WHEN            reduce using rule 124 (recursive_conditions -> recursive_conditions recursive_condition .)


state 174

    (125) recursive_condition -> condition LPARENT . sentences RPARENT
    (45) sentences -> . sentence
    (46) sentences -> . sentences sentence
    (47) sentence -> . local_variable
    (48) sentence -> . values
    (49) sentence -> . call
    (50) sentence -> . print_values
    (51) sentence -> . alter
    (52) sentence -> . alterB
    (53) sentence -> . comparisson_maq
    (54) sentence -> . comparisson_meq
    (55) sentence -> . comparisson_equal
    (56) sentence -> . comparisson_dif
    (57) sentence -> . comparisson_meqequal
    (58) sentence -> . comparisson_maqequal
    (59) sentence -> . isTrue
    (60) sentence -> . signal
    (61) sentence -> . viewsignal
    (62) sentence -> . cut
    (63) sentence -> . recut
    (64) sentence -> . case
    (65) sentence -> . while
    (66) sentence -> . until
    (67) sentence -> . repeat
    (68) sentence -> . break
    (69) sentence -> . empty
    (79) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (117) until_handler -> . UNTIL
    (119) repeat_handler -> . REPEAT

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
    NEW             shift and go to state 92
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    RPARENT         reduce using rule 132 (empty -> .)
    WHILE           shift and go to state 63
    UNTIL           shift and go to state 65
    REPEAT          shift and go to state 64

  ! NEW             [ reduce using rule 132 (empty -> .) ]
  ! VALUES          [ reduce using rule 132 (empty -> .) ]
  ! CALL            [ reduce using rule 132 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 132 (empty -> .) ]
  ! ALTER           [ reduce using rule 132 (empty -> .) ]
  ! ALTERB          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 132 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 132 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 132 (empty -> .) ]
  ! CUT             [ reduce using rule 132 (empty -> .) ]
  ! RECUT           [ reduce using rule 132 (empty -> .) ]
  ! CASE            [ reduce using rule 132 (empty -> .) ]
  ! BREAK           [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! UNTIL           [ reduce using rule 132 (empty -> .) ]
  ! REPEAT          [ reduce using rule 132 (empty -> .) ]

    sentences                      shift and go to state 216
    sentence                       shift and go to state 68
    local_variable                 shift and go to state 69
    values                         shift and go to state 70
    call                           shift and go to state 71
    print_values                   shift and go to state 72
    alter                          shift and go to state 73
    alterB                         shift and go to state 74
    comparisson_maq                shift and go to state 75
    comparisson_meq                shift and go to state 76
    comparisson_equal              shift and go to state 77
    comparisson_dif                shift and go to state 78
    comparisson_meqequal           shift and go to state 79
    comparisson_maqequal           shift and go to state 80
    isTrue                         shift and go to state 81
    signal                         shift and go to state 82
    viewsignal                     shift and go to state 83
    cut                            shift and go to state 84
    recut                          shift and go to state 85
    case                           shift and go to state 86
    while                          shift and go to state 87
    until                          shift and go to state 88
    repeat                         shift and go to state 89
    break                          shift and go to state 90
    empty                          shift and go to state 91
    while_handler                  shift and go to state 59
    until_handler                  shift and go to state 61
    repeat_handler                 shift and go to state 60

state 175

    (127) condition -> WHEN INTEGER . THEN

    THEN            shift and go to state 217


state 176

    (128) condition -> WHEN STRING . THEN

    THEN            shift and go to state 218


state 177

    (114) while -> while_handler sentence LPARENT sentences . RPARENT SEMICOLON
    (46) sentences -> sentences . sentence
    (47) sentence -> . local_variable
    (48) sentence -> . values
    (49) sentence -> . call
    (50) sentence -> . print_values
    (51) sentence -> . alter
    (52) sentence -> . alterB
    (53) sentence -> . comparisson_maq
    (54) sentence -> . comparisson_meq
    (55) sentence -> . comparisson_equal
    (56) sentence -> . comparisson_dif
    (57) sentence -> . comparisson_meqequal
    (58) sentence -> . comparisson_maqequal
    (59) sentence -> . isTrue
    (60) sentence -> . signal
    (61) sentence -> . viewsignal
    (62) sentence -> . cut
    (63) sentence -> . recut
    (64) sentence -> . case
    (65) sentence -> . while
    (66) sentence -> . until
    (67) sentence -> . repeat
    (68) sentence -> . break
    (69) sentence -> . empty
    (79) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (117) until_handler -> . UNTIL
    (119) repeat_handler -> . REPEAT

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
    RPARENT         shift and go to state 219
    NEW             shift and go to state 92
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    WHILE           shift and go to state 63
    UNTIL           shift and go to state 65
    REPEAT          shift and go to state 64

  ! RPARENT         [ reduce using rule 132 (empty -> .) ]
  ! NEW             [ reduce using rule 132 (empty -> .) ]
  ! VALUES          [ reduce using rule 132 (empty -> .) ]
  ! CALL            [ reduce using rule 132 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 132 (empty -> .) ]
  ! ALTER           [ reduce using rule 132 (empty -> .) ]
  ! ALTERB          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 132 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 132 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 132 (empty -> .) ]
  ! CUT             [ reduce using rule 132 (empty -> .) ]
  ! RECUT           [ reduce using rule 132 (empty -> .) ]
  ! CASE            [ reduce using rule 132 (empty -> .) ]
  ! BREAK           [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! UNTIL           [ reduce using rule 132 (empty -> .) ]
  ! REPEAT          [ reduce using rule 132 (empty -> .) ]

    while_handler                  shift and go to state 59
    sentence                       shift and go to state 121
    local_variable                 shift and go to state 69
    values                         shift and go to state 70
    call                           shift and go to state 71
    print_values                   shift and go to state 72
    alter                          shift and go to state 73
    alterB                         shift and go to state 74
    comparisson_maq                shift and go to state 75
    comparisson_meq                shift and go to state 76
    comparisson_equal              shift and go to state 77
    comparisson_dif                shift and go to state 78
    comparisson_meqequal           shift and go to state 79
    comparisson_maqequal           shift and go to state 80
    isTrue                         shift and go to state 81
    signal                         shift and go to state 82
    viewsignal                     shift and go to state 83
    cut                            shift and go to state 84
    recut                          shift and go to state 85
    case                           shift and go to state 86
    while                          shift and go to state 87
    until                          shift and go to state 88
    repeat                         shift and go to state 89
    break                          shift and go to state 90
    empty                          shift and go to state 91
    until_handler                  shift and go to state 61
    repeat_handler                 shift and go to state 60

state 178

    (118) repeat -> repeat_handler LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 220


state 179

    (116) until -> until_handler LPARENT sentences RPARENT . sentence SEMICOLON
    (47) sentence -> . local_variable
    (48) sentence -> . values
    (49) sentence -> . call
    (50) sentence -> . print_values
    (51) sentence -> . alter
    (52) sentence -> . alterB
    (53) sentence -> . comparisson_maq
    (54) sentence -> . comparisson_meq
    (55) sentence -> . comparisson_equal
    (56) sentence -> . comparisson_dif
    (57) sentence -> . comparisson_meqequal
    (58) sentence -> . comparisson_maqequal
    (59) sentence -> . isTrue
    (60) sentence -> . signal
    (61) sentence -> . viewsignal
    (62) sentence -> . cut
    (63) sentence -> . recut
    (64) sentence -> . case
    (65) sentence -> . while
    (66) sentence -> . until
    (67) sentence -> . repeat
    (68) sentence -> . break
    (69) sentence -> . empty
    (79) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (117) until_handler -> . UNTIL
    (119) repeat_handler -> . REPEAT

    NEW             shift and go to state 92
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    SEMICOLON       reduce using rule 132 (empty -> .)
    WHILE           shift and go to state 63
    UNTIL           shift and go to state 65
    REPEAT          shift and go to state 64

    until_handler                  shift and go to state 61
    sentence                       shift and go to state 221
    local_variable                 shift and go to state 69
    values                         shift and go to state 70
    call                           shift and go to state 71
    print_values                   shift and go to state 72
    alter                          shift and go to state 73
    alterB                         shift and go to state 74
    comparisson_maq                shift and go to state 75
    comparisson_meq                shift and go to state 76
    comparisson_equal              shift and go to state 77
    comparisson_dif                shift and go to state 78
    comparisson_meqequal           shift and go to state 79
    comparisson_maqequal           shift and go to state 80
    isTrue                         shift and go to state 81
    signal                         shift and go to state 82
    viewsignal                     shift and go to state 83
    cut                            shift and go to state 84
    recut                          shift and go to state 85
    case                           shift and go to state 86
    while                          shift and go to state 87
    until                          shift and go to state 88
    repeat                         shift and go to state 89
    break                          shift and go to state 90
    empty                          shift and go to state 91
    while_handler                  shift and go to state 59
    repeat_handler                 shift and go to state 60

state 180

    (42) master_var -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (43) master_var -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON
    (44) master_var -> NEW ID COMA LPARENT TYPE COMA . STRING RPARENT SEMICOLON

    INTEGER         shift and go to state 222
    BOOL            shift and go to state 223
    STRING          shift and go to state 224


state 181

    (79) local_variable -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> NEW ID COMA LPARENT . TYPE COMA STRING RPARENT SEMICOLON

    TYPE            shift and go to state 225


state 182

    (109) comparisson_maqequal -> ID . MAQEQUAL INTEGER
    (108) comparisson_meqequal -> ID . MEQEQUAL INTEGER
    (107) comparisson_dif -> ID . DIFFERENT INTEGER
    (106) comparisson_equal -> ID . EQUAL INTEGER
    (105) comparisson_meq -> ID . MEQ INTEGER
    (104) comparisson_maq -> ID . MAQ INTEGER

    MAQEQUAL        shift and go to state 102
    MEQEQUAL        shift and go to state 101
    DIFFERENT       shift and go to state 100
    EQUAL           shift and go to state 99
    MEQ             shift and go to state 98
    MAQ             shift and go to state 97


state 183

    (82) values -> VALUES LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 226


state 184

    (83) values -> VALUES LPARENT ID COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 227


state 185

    (84) values -> VALUES LPARENT ID COMA return_statement . RPARENT SEMICOLON

    RPARENT         shift and go to state 228


state 186

    (70) return_statement -> isTrue .

    RPARENT         reduce using rule 70 (return_statement -> isTrue .)


state 187

    (71) return_statement -> comparisson_maqequal .

    RPARENT         reduce using rule 71 (return_statement -> comparisson_maqequal .)


state 188

    (72) return_statement -> comparisson_meqequal .

    RPARENT         reduce using rule 72 (return_statement -> comparisson_meqequal .)


state 189

    (73) return_statement -> comparisson_dif .

    RPARENT         reduce using rule 73 (return_statement -> comparisson_dif .)


state 190

    (74) return_statement -> comparisson_equal .

    RPARENT         reduce using rule 74 (return_statement -> comparisson_equal .)


state 191

    (75) return_statement -> comparisson_meq .

    RPARENT         reduce using rule 75 (return_statement -> comparisson_meq .)


state 192

    (76) return_statement -> comparisson_maq .

    RPARENT         reduce using rule 76 (return_statement -> comparisson_maq .)


state 193

    (77) return_statement -> alterB .

    RPARENT         reduce using rule 77 (return_statement -> alterB .)


state 194

    (78) return_statement -> alter .

    RPARENT         reduce using rule 78 (return_statement -> alter .)


state 195

    (85) call -> CALL LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CUT             reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    BREAK           reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    REPEAT          reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    UNTIL           reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 85 (call -> CALL LPARENT ID RPARENT SEMICOLON .)


state 196

    (86) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .

    RPARENT         reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VALUES          reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CALL            reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTER           reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTERB          reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ID              reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CUT             reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    RECUT           reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CASE            reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    BREAK           reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    WHILE           reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    REPEAT          reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    UNTIL           reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    LPARENT         reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 86 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)


state 197

    (93) printable_sentences -> printable_sentences COMA printable_sentence_var .

    RPARENT         reduce using rule 93 (printable_sentences -> printable_sentences COMA printable_sentence_var .)
    COMA            reduce using rule 93 (printable_sentences -> printable_sentences COMA printable_sentence_var .)


state 198

    (94) printable_sentences -> printable_sentences COMA printable_sentence_string .

    RPARENT         reduce using rule 94 (printable_sentences -> printable_sentences COMA printable_sentence_string .)
    COMA            reduce using rule 94 (printable_sentences -> printable_sentences COMA printable_sentence_string .)


state 199

    (89) printable_sentences -> printable_sentence_var COMA printable_sentence_var .

    RPARENT         reduce using rule 89 (printable_sentences -> printable_sentence_var COMA printable_sentence_var .)
    COMA            reduce using rule 89 (printable_sentences -> printable_sentence_var COMA printable_sentence_var .)


state 200

    (91) printable_sentences -> printable_sentence_var COMA printable_sentence_string .

    RPARENT         reduce using rule 91 (printable_sentences -> printable_sentence_var COMA printable_sentence_string .)
    COMA            reduce using rule 91 (printable_sentences -> printable_sentence_var COMA printable_sentence_string .)


state 201

    (90) printable_sentences -> printable_sentence_string COMA printable_sentence_string .

    RPARENT         reduce using rule 90 (printable_sentences -> printable_sentence_string COMA printable_sentence_string .)
    COMA            reduce using rule 90 (printable_sentences -> printable_sentence_string COMA printable_sentence_string .)


state 202

    (92) printable_sentences -> printable_sentence_string COMA printable_sentence_var .

    RPARENT         reduce using rule 92 (printable_sentences -> printable_sentence_string COMA printable_sentence_var .)
    COMA            reduce using rule 92 (printable_sentences -> printable_sentence_string COMA printable_sentence_var .)


state 203

    (95) printable_sentences -> COMA printable_sentences COMA . printable_sentence_var
    (96) printable_sentences -> COMA printable_sentences COMA . printable_sentence_string
    (93) printable_sentences -> printable_sentences COMA . printable_sentence_var
    (94) printable_sentences -> printable_sentences COMA . printable_sentence_string
    (97) printable_sentence_var -> . ID
    (98) printable_sentence_string -> . STRING

    ID              shift and go to state 137
    STRING          shift and go to state 138

    printable_sentence_var         shift and go to state 229
    printable_sentence_string      shift and go to state 230

state 204

    (99) alter -> ALTER LPARENT ID COMA ADD . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 231


state 205

    (100) alter -> ALTER LPARENT ID COMA SUB . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 232


state 206

    (101) alter -> ALTER LPARENT ID COMA MUL . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 233


state 207

    (102) alter -> ALTER LPARENT ID COMA DIV . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 234


state 208

    (103) alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CUT             reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    BREAK           reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    REPEAT          reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    UNTIL           reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 103 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)


state 209

    (110) isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CUT             reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    BREAK           reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    REPEAT          reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    UNTIL           reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 110 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)


state 210

    (111) signal -> SIGNAL LPARENT INTEGER COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 235


state 211

    (112) signal -> SIGNAL LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 236


state 212

    (113) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 113 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)


state 213

    (130) cut -> CUT LPARENT ID COMA ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 237


state 214

    (129) cut -> CUT LPARENT ID COMA STRING . RPARENT SEMICOLON

    RPARENT         shift and go to state 238


state 215

    (131) recut -> RECUT LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    CUT             reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    BREAK           reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    REPEAT          reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    UNTIL           reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 131 (recut -> RECUT LPARENT ID RPARENT SEMICOLON .)


state 216

    (125) recursive_condition -> condition LPARENT sentences . RPARENT
    (46) sentences -> sentences . sentence
    (47) sentence -> . local_variable
    (48) sentence -> . values
    (49) sentence -> . call
    (50) sentence -> . print_values
    (51) sentence -> . alter
    (52) sentence -> . alterB
    (53) sentence -> . comparisson_maq
    (54) sentence -> . comparisson_meq
    (55) sentence -> . comparisson_equal
    (56) sentence -> . comparisson_dif
    (57) sentence -> . comparisson_meqequal
    (58) sentence -> . comparisson_maqequal
    (59) sentence -> . isTrue
    (60) sentence -> . signal
    (61) sentence -> . viewsignal
    (62) sentence -> . cut
    (63) sentence -> . recut
    (64) sentence -> . case
    (65) sentence -> . while
    (66) sentence -> . until
    (67) sentence -> . repeat
    (68) sentence -> . break
    (69) sentence -> . empty
    (79) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> . NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON
    (82) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (83) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (85) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (86) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (99) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (100) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (101) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (102) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (103) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (104) comparisson_maq -> . ID MAQ INTEGER
    (105) comparisson_meq -> . ID MEQ INTEGER
    (106) comparisson_equal -> . ID EQUAL INTEGER
    (107) comparisson_dif -> . ID DIFFERENT INTEGER
    (108) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (109) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (110) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (111) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (112) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (113) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (129) cut -> . CUT LPARENT ID COMA STRING RPARENT SEMICOLON
    (130) cut -> . CUT LPARENT ID COMA ID RPARENT SEMICOLON
    (131) recut -> . RECUT LPARENT ID RPARENT SEMICOLON
    (121) case -> . CASE expression recursive_conditions SEMICOLON
    (114) while -> . while_handler sentence LPARENT sentences RPARENT SEMICOLON
    (116) until -> . until_handler LPARENT sentences RPARENT sentence SEMICOLON
    (118) repeat -> . repeat_handler LPARENT sentences RPARENT SEMICOLON
    (120) break -> . BREAK SEMICOLON
    (132) empty -> .
    (115) while_handler -> . WHILE
    (117) until_handler -> . UNTIL
    (119) repeat_handler -> . REPEAT

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for CUT resolved as shift
  ! shift/reduce conflict for RECUT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
    RPARENT         shift and go to state 239
    NEW             shift and go to state 92
    VALUES          shift and go to state 48
    CALL            shift and go to state 49
    PRINTVALUES     shift and go to state 50
    ALTER           shift and go to state 51
    ALTERB          shift and go to state 52
    ID              shift and go to state 47
    ISTRUE          shift and go to state 53
    SIGNAL          shift and go to state 54
    VIEWSIGNAL      shift and go to state 55
    CUT             shift and go to state 56
    RECUT           shift and go to state 57
    CASE            shift and go to state 58
    BREAK           shift and go to state 62
    WHILE           shift and go to state 63
    UNTIL           shift and go to state 65
    REPEAT          shift and go to state 64

  ! RPARENT         [ reduce using rule 132 (empty -> .) ]
  ! NEW             [ reduce using rule 132 (empty -> .) ]
  ! VALUES          [ reduce using rule 132 (empty -> .) ]
  ! CALL            [ reduce using rule 132 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 132 (empty -> .) ]
  ! ALTER           [ reduce using rule 132 (empty -> .) ]
  ! ALTERB          [ reduce using rule 132 (empty -> .) ]
  ! ID              [ reduce using rule 132 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 132 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 132 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 132 (empty -> .) ]
  ! CUT             [ reduce using rule 132 (empty -> .) ]
  ! RECUT           [ reduce using rule 132 (empty -> .) ]
  ! CASE            [ reduce using rule 132 (empty -> .) ]
  ! BREAK           [ reduce using rule 132 (empty -> .) ]
  ! WHILE           [ reduce using rule 132 (empty -> .) ]
  ! UNTIL           [ reduce using rule 132 (empty -> .) ]
  ! REPEAT          [ reduce using rule 132 (empty -> .) ]

    sentence                       shift and go to state 121
    local_variable                 shift and go to state 69
    values                         shift and go to state 70
    call                           shift and go to state 71
    print_values                   shift and go to state 72
    alter                          shift and go to state 73
    alterB                         shift and go to state 74
    comparisson_maq                shift and go to state 75
    comparisson_meq                shift and go to state 76
    comparisson_equal              shift and go to state 77
    comparisson_dif                shift and go to state 78
    comparisson_meqequal           shift and go to state 79
    comparisson_maqequal           shift and go to state 80
    isTrue                         shift and go to state 81
    signal                         shift and go to state 82
    viewsignal                     shift and go to state 83
    cut                            shift and go to state 84
    recut                          shift and go to state 85
    case                           shift and go to state 86
    while                          shift and go to state 87
    until                          shift and go to state 88
    repeat                         shift and go to state 89
    break                          shift and go to state 90
    empty                          shift and go to state 91
    while_handler                  shift and go to state 59
    until_handler                  shift and go to state 61
    repeat_handler                 shift and go to state 60

state 217

    (127) condition -> WHEN INTEGER THEN .

    LPARENT         reduce using rule 127 (condition -> WHEN INTEGER THEN .)


state 218

    (128) condition -> WHEN STRING THEN .

    LPARENT         reduce using rule 128 (condition -> WHEN STRING THEN .)


state 219

    (114) while -> while_handler sentence LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 240


state 220

    (118) repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .

    RPARENT         reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    VALUES          reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    CALL            reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    ALTER           reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    ALTERB          reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    ID              reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    CUT             reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    RECUT           reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    CASE            reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    BREAK           reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    WHILE           reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    REPEAT          reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    UNTIL           reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    LPARENT         reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 118 (repeat -> repeat_handler LPARENT sentences RPARENT SEMICOLON .)


state 221

    (116) until -> until_handler LPARENT sentences RPARENT sentence . SEMICOLON

    SEMICOLON       shift and go to state 241


state 222

    (42) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 242


state 223

    (43) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 243


state 224

    (44) master_var -> NEW ID COMA LPARENT TYPE COMA STRING . RPARENT SEMICOLON

    RPARENT         shift and go to state 244


state 225

    (79) local_variable -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (80) local_variable -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON
    (81) local_variable -> NEW ID COMA LPARENT TYPE . COMA STRING RPARENT SEMICOLON

    COMA            shift and go to state 245


state 226

    (82) values -> VALUES LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 246


state 227

    (83) values -> VALUES LPARENT ID COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 247


state 228

    (84) values -> VALUES LPARENT ID COMA return_statement RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 248


state 229

    (95) printable_sentences -> COMA printable_sentences COMA printable_sentence_var .
    (93) printable_sentences -> printable_sentences COMA printable_sentence_var .

  ! reduce/reduce conflict for COMA resolved using rule 93 (printable_sentences -> printable_sentences COMA printable_sentence_var .)
    RPARENT         reduce using rule 95 (printable_sentences -> COMA printable_sentences COMA printable_sentence_var .)
    COMA            reduce using rule 93 (printable_sentences -> printable_sentences COMA printable_sentence_var .)

  ! COMA            [ reduce using rule 95 (printable_sentences -> COMA printable_sentences COMA printable_sentence_var .) ]


state 230

    (96) printable_sentences -> COMA printable_sentences COMA printable_sentence_string .
    (94) printable_sentences -> printable_sentences COMA printable_sentence_string .

  ! reduce/reduce conflict for COMA resolved using rule 94 (printable_sentences -> printable_sentences COMA printable_sentence_string .)
    RPARENT         reduce using rule 96 (printable_sentences -> COMA printable_sentences COMA printable_sentence_string .)
    COMA            reduce using rule 94 (printable_sentences -> printable_sentences COMA printable_sentence_string .)

  ! COMA            [ reduce using rule 96 (printable_sentences -> COMA printable_sentences COMA printable_sentence_string .) ]


state 231

    (99) alter -> ALTER LPARENT ID COMA ADD COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 249


state 232

    (100) alter -> ALTER LPARENT ID COMA SUB COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 250


state 233

    (101) alter -> ALTER LPARENT ID COMA MUL COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 251


state 234

    (102) alter -> ALTER LPARENT ID COMA DIV COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 252


state 235

    (111) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 253


state 236

    (112) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 254


state 237

    (130) cut -> CUT LPARENT ID COMA ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 255


state 238

    (129) cut -> CUT LPARENT ID COMA STRING RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 256


state 239

    (125) recursive_condition -> condition LPARENT sentences RPARENT .

    SEMICOLON       reduce using rule 125 (recursive_condition -> condition LPARENT sentences RPARENT .)
    WHEN            reduce using rule 125 (recursive_condition -> condition LPARENT sentences RPARENT .)


state 240

    (114) while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .

    RPARENT         reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    VALUES          reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    CALL            reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    ALTER           reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    ALTERB          reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    ID              reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    CUT             reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    RECUT           reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    CASE            reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    BREAK           reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    WHILE           reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    REPEAT          reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    UNTIL           reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    LPARENT         reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 114 (while -> while_handler sentence LPARENT sentences RPARENT SEMICOLON .)


state 241

    (116) until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .

    RPARENT         reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    NEW             reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    VALUES          reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    CALL            reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    PRINTVALUES     reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    ALTER           reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    ALTERB          reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    ID              reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    ISTRUE          reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    SIGNAL          reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    VIEWSIGNAL      reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    CUT             reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    RECUT           reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    CASE            reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    BREAK           reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    WHILE           reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    REPEAT          reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    UNTIL           reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    LPARENT         reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)
    SEMICOLON       reduce using rule 116 (until -> until_handler LPARENT sentences RPARENT sentence SEMICOLON .)


state 242

    (42) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 257


state 243

    (43) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 258


state 244

    (44) master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 259


state 245

    (79) local_variable -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (80) local_variable -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON
    (81) local_variable -> NEW ID COMA LPARENT TYPE COMA . STRING RPARENT SEMICOLON

    INTEGER         shift and go to state 260
    BOOL            shift and go to state 261
    STRING          shift and go to state 262


state 246

    (82) values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 82 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 247

    (83) values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CUT             reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    RECUT           reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    BREAK           reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    WHILE           reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    REPEAT          reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    UNTIL           reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    LPARENT         reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 83 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)


state 248

    (84) values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .

    RPARENT         reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    NEW             reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    VALUES          reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    CALL            reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    ALTER           reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    ALTERB          reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    ID              reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    CUT             reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    RECUT           reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    CASE            reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    BREAK           reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    WHILE           reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    REPEAT          reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    UNTIL           reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    LPARENT         reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 84 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)


state 249

    (99) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 263


state 250

    (100) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 264


state 251

    (101) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 265


state 252

    (102) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 266


state 253

    (111) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 111 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)


state 254

    (112) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 112 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 255

    (130) cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    NEW             reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    CALL            reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    ID              reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    CUT             reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    RECUT           reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    CASE            reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    BREAK           reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    REPEAT          reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    UNTIL           reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 130 (cut -> CUT LPARENT ID COMA ID RPARENT SEMICOLON .)


state 256

    (129) cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .

    RPARENT         reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    NEW             reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    VALUES          reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    CALL            reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    ALTER           reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    ALTERB          reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    ID              reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    CUT             reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    RECUT           reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    CASE            reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    BREAK           reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    WHILE           reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    REPEAT          reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    UNTIL           reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    LPARENT         reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 129 (cut -> CUT LPARENT ID COMA STRING RPARENT SEMICOLON .)


state 257

    (42) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    MASTER          reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PROC            reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    $end            reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    RPARENT         reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 42 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 258

    (43) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    MASTER          reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PROC            reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    $end            reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    RPARENT         reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CUT             reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    RECUT           reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    BREAK           reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    WHILE           reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    REPEAT          reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    UNTIL           reduce using rule 43 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)


state 259

    (44) master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .

    MASTER          reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    NEW             reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    PROC            reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    $end            reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    RPARENT         reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    VALUES          reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CALL            reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ALTER           reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ALTERB          reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ID              reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CUT             reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    RECUT           reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CASE            reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    BREAK           reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    WHILE           reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    REPEAT          reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    UNTIL           reduce using rule 44 (master_var -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)


state 260

    (79) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 267


state 261

    (80) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 268


state 262

    (81) local_variable -> NEW ID COMA LPARENT TYPE COMA STRING . RPARENT SEMICOLON

    RPARENT         shift and go to state 269


state 263

    (99) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 270


state 264

    (100) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 271


state 265

    (101) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 272


state 266

    (102) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 273


state 267

    (79) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 274


state 268

    (80) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 275


state 269

    (81) local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 276


state 270

    (99) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 99 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)


state 271

    (100) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 100 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)


state 272

    (101) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 101 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)


state 273

    (102) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 102 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)


state 274

    (79) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CUT             reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    RECUT           reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 79 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 275

    (80) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CUT             reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    RECUT           reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    BREAK           reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    WHILE           reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    UNTIL           reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    REPEAT          reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    LPARENT         reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 80 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)


state 276

    (81) local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .

    RPARENT         reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    NEW             reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    VALUES          reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CALL            reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ALTER           reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ALTERB          reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ID              reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CUT             reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    RECUT           reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    CASE            reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    BREAK           reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    WHILE           reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    UNTIL           reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    REPEAT          reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    LPARENT         reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 81 (local_variable -> NEW ID COMA LPARENT TYPE COMA STRING RPARENT SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEW in state 14 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 14 resolved as shift
WARNING: shift/reduce conflict for CALL in state 14 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 14 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 14 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 14 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 14 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 14 resolved as shift
WARNING: shift/reduce conflict for CUT in state 14 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 14 resolved as shift
WARNING: shift/reduce conflict for CASE in state 14 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 14 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 14 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 14 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 14 resolved as shift
WARNING: shift/reduce conflict for NEW in state 18 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 18 resolved as shift
WARNING: shift/reduce conflict for CALL in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 18 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 18 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 18 resolved as shift
WARNING: shift/reduce conflict for ID in state 18 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 18 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 18 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 18 resolved as shift
WARNING: shift/reduce conflict for CUT in state 18 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 18 resolved as shift
WARNING: shift/reduce conflict for CASE in state 18 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 18 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 18 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 22 resolved as shift
WARNING: shift/reduce conflict for NEW in state 22 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 22 resolved as shift
WARNING: shift/reduce conflict for CALL in state 22 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 22 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 22 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 22 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 22 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 22 resolved as shift
WARNING: shift/reduce conflict for CUT in state 22 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 22 resolved as shift
WARNING: shift/reduce conflict for CASE in state 22 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 22 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 22 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 22 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 22 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 67 resolved as shift
WARNING: shift/reduce conflict for NEW in state 67 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 67 resolved as shift
WARNING: shift/reduce conflict for CALL in state 67 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 67 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 67 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 67 resolved as shift
WARNING: shift/reduce conflict for ID in state 67 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 67 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 67 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 67 resolved as shift
WARNING: shift/reduce conflict for CUT in state 67 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 67 resolved as shift
WARNING: shift/reduce conflict for CASE in state 67 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 67 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 67 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 67 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 67 resolved as shift
WARNING: shift/reduce conflict for NEW in state 116 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 116 resolved as shift
WARNING: shift/reduce conflict for CALL in state 116 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 116 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 116 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 116 resolved as shift
WARNING: shift/reduce conflict for ID in state 116 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 116 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 116 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 116 resolved as shift
WARNING: shift/reduce conflict for CUT in state 116 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 116 resolved as shift
WARNING: shift/reduce conflict for CASE in state 116 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 116 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 116 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 116 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 116 resolved as shift
WARNING: shift/reduce conflict for NEW in state 117 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 117 resolved as shift
WARNING: shift/reduce conflict for CALL in state 117 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 117 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 117 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 117 resolved as shift
WARNING: shift/reduce conflict for ID in state 117 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 117 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 117 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 117 resolved as shift
WARNING: shift/reduce conflict for CUT in state 117 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 117 resolved as shift
WARNING: shift/reduce conflict for CASE in state 117 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 117 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 117 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 117 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 117 resolved as shift
WARNING: shift/reduce conflict for COMA in state 134 resolved as shift
WARNING: shift/reduce conflict for COMA in state 135 resolved as shift
WARNING: shift/reduce conflict for NEW in state 151 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 151 resolved as shift
WARNING: shift/reduce conflict for CALL in state 151 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 151 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 151 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 151 resolved as shift
WARNING: shift/reduce conflict for ID in state 151 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 151 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 151 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 151 resolved as shift
WARNING: shift/reduce conflict for CUT in state 151 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 151 resolved as shift
WARNING: shift/reduce conflict for CASE in state 151 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 151 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 151 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 151 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 151 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 152 resolved as shift
WARNING: shift/reduce conflict for NEW in state 152 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 152 resolved as shift
WARNING: shift/reduce conflict for CALL in state 152 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 152 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 152 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 152 resolved as shift
WARNING: shift/reduce conflict for ID in state 152 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 152 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 152 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 152 resolved as shift
WARNING: shift/reduce conflict for CUT in state 152 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 152 resolved as shift
WARNING: shift/reduce conflict for CASE in state 152 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 152 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 152 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 152 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 152 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 153 resolved as shift
WARNING: shift/reduce conflict for NEW in state 153 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 153 resolved as shift
WARNING: shift/reduce conflict for CALL in state 153 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 153 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 153 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 153 resolved as shift
WARNING: shift/reduce conflict for ID in state 153 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 153 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 153 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 153 resolved as shift
WARNING: shift/reduce conflict for CUT in state 153 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 153 resolved as shift
WARNING: shift/reduce conflict for CASE in state 153 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 153 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 153 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 153 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 153 resolved as shift
WARNING: shift/reduce conflict for NEW in state 174 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 174 resolved as shift
WARNING: shift/reduce conflict for CALL in state 174 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 174 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 174 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 174 resolved as shift
WARNING: shift/reduce conflict for ID in state 174 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 174 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 174 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 174 resolved as shift
WARNING: shift/reduce conflict for CUT in state 174 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 174 resolved as shift
WARNING: shift/reduce conflict for CASE in state 174 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 174 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 174 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 174 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 174 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 177 resolved as shift
WARNING: shift/reduce conflict for NEW in state 177 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 177 resolved as shift
WARNING: shift/reduce conflict for CALL in state 177 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 177 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 177 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 177 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 177 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 177 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 177 resolved as shift
WARNING: shift/reduce conflict for CUT in state 177 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 177 resolved as shift
WARNING: shift/reduce conflict for CASE in state 177 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 177 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 177 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 177 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 177 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 216 resolved as shift
WARNING: shift/reduce conflict for NEW in state 216 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 216 resolved as shift
WARNING: shift/reduce conflict for CALL in state 216 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 216 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 216 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 216 resolved as shift
WARNING: shift/reduce conflict for ID in state 216 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 216 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 216 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 216 resolved as shift
WARNING: shift/reduce conflict for CUT in state 216 resolved as shift
WARNING: shift/reduce conflict for RECUT in state 216 resolved as shift
WARNING: shift/reduce conflict for CASE in state 216 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 216 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 216 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 216 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 216 resolved as shift
WARNING: reduce/reduce conflict in state 229 resolved using rule (printable_sentences -> printable_sentences COMA printable_sentence_var)
WARNING: rejected rule (printable_sentences -> COMA printable_sentences COMA printable_sentence_var) in state 229
WARNING: reduce/reduce conflict in state 230 resolved using rule (printable_sentences -> printable_sentences COMA printable_sentence_string)
WARNING: rejected rule (printable_sentences -> COMA printable_sentences COMA printable_sentence_string) in state 230
