Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROBA
    COMMENT
    ELSE
    NEWLINE
    WHILE

Grammar

Rule 0     S' -> start
Rule 1     start -> master procedures
Rule 2     start -> master
Rule 3     declare_procedure -> PROC ID
Rule 4     procedures -> procedure
Rule 5     procedures -> procedures procedure
Rule 6     procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON
Rule 7     master -> MASTER LPARENT master_sentences RPARENT SEMICOLON
Rule 8     master_sentences -> master_sentence
Rule 9     master_sentences -> master_sentences master_sentence
Rule 10    master_sentence -> master_var
Rule 11    master_sentence -> values
Rule 12    master_sentence -> case
Rule 13    master_sentence -> call
Rule 14    master_sentence -> print_values
Rule 15    master_sentence -> alter
Rule 16    master_sentence -> alterB
Rule 17    master_sentence -> signal
Rule 18    master_sentence -> viewsignal
Rule 19    master_sentence -> sentence7
Rule 20    master_sentence -> sentence8
Rule 21    master_sentence -> sentence9
Rule 22    master_sentence -> sentence10
Rule 23    master_sentence -> sentence11
Rule 24    master_sentence -> sentence12
Rule 25    master_sentence -> isTrue
Rule 26    master_sentence -> sentence14
Rule 27    master_sentence -> sentence15
Rule 28    master_sentence -> empty
Rule 29    master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 30    master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 31    sentences -> sentence
Rule 32    sentences -> sentences sentence
Rule 33    sentence -> local_variable
Rule 34    sentence -> values
Rule 35    sentence -> case
Rule 36    sentence -> call
Rule 37    sentence -> print_values
Rule 38    sentence -> alter
Rule 39    sentence -> alterB
Rule 40    sentence -> signal
Rule 41    sentence -> viewsignal
Rule 42    sentence -> sentence7
Rule 43    sentence -> sentence8
Rule 44    sentence -> sentence9
Rule 45    sentence -> sentence10
Rule 46    sentence -> sentence11
Rule 47    sentence -> sentence12
Rule 48    sentence -> isTrue
Rule 49    sentence -> sentence14
Rule 50    sentence -> sentence15
Rule 51    sentence -> empty
Rule 52    local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 53    local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 54    values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 55    values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
Rule 56    call -> CALL LPARENT ID RPARENT SEMICOLON
Rule 57    print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
Rule 58    printable_sentences -> printable_sentence_var
Rule 59    printable_sentences -> printable_sentence_string
Rule 60    printable_sentences -> printable_sentence_var PLUS printable_sentence_var
Rule 61    printable_sentences -> printable_sentence_string PLUS printable_sentence_string
Rule 62    printable_sentences -> printable_sentence_var PLUS printable_sentence_string
Rule 63    printable_sentences -> printable_sentence_string PLUS printable_sentence_var
Rule 64    printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var
Rule 65    printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string
Rule 66    printable_sentence_var -> ID
Rule 67    printable_sentence_string -> STRING
Rule 68    alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
Rule 69    alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
Rule 70    alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
Rule 71    alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
Rule 72    alterB -> ALTERB LPARENT ID RPARENT SEMICOLON
Rule 73    sentence7 -> ID MAQ INTEGER
Rule 74    sentence8 -> ID MEQ INTEGER
Rule 75    sentence9 -> ID EQUAL INTEGER
Rule 76    sentence10 -> ID DIFFERENT INTEGER
Rule 77    sentence11 -> ID MEQEQUAL INTEGER
Rule 78    sentence12 -> ID MAQEQUAL INTEGER
Rule 79    isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON
Rule 80    sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
Rule 81    sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON
Rule 82    instructions -> sentence
Rule 83    instructions -> sentence sentences
Rule 84    case -> CASE expression recursive_conditions SEMICOLON
Rule 85    else_condition -> LPARENT sentences RPARENT
Rule 86    recursive_conditions -> recursive_condition
Rule 87    recursive_conditions -> recursive_conditions recursive_condition
Rule 88    recursive_condition -> condition LPARENT sentences RPARENT
Rule 89    expression -> ID
Rule 90    condition -> WHEN INTEGER THEN
Rule 91    signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
Rule 92    signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 93    viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
Rule 94    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 68
ALTER                : 68 69 70 71
ALTERB               : 72
ARROBA               : 
BOOL                 : 30 53 55
BREAK                : 80
CALL                 : 56
CASE                 : 84
COMA                 : 29 29 30 30 52 52 53 53 54 55 68 68 69 69 70 70 71 71 91 92
COMMENT              : 
DIFFERENT            : 76
DIV                  : 71
ELSE                 : 
EQUAL                : 75
ID                   : 3 29 30 52 53 54 55 56 66 68 69 70 71 72 73 74 75 76 77 78 79 89 92
INTEGER              : 29 52 54 68 69 70 71 73 74 75 76 77 78 90 91 91 92 93
ISTRUE               : 79
LPARENT              : 6 7 29 30 52 53 54 55 56 57 68 69 70 71 72 79 80 81 85 88 91 92 93
MAQ                  : 73
MAQEQUAL             : 78
MASTER               : 7
MEQ                  : 74
MEQEQUAL             : 77
MUL                  : 70
NEW                  : 29 30 52 53
NEWLINE              : 
PLUS                 : 60 61 62 63 64 64 65 65
PRINTVALUES          : 57
PROC                 : 3
REPEAT               : 80
RPARENT              : 6 7 29 30 52 53 54 55 56 57 68 69 70 71 72 79 80 81 85 88 91 92 93
SEMICOLON            : 6 7 29 30 52 53 54 55 56 57 68 69 70 71 72 79 80 81 84 91 92 93
SIGNAL               : 91 92
STRING               : 67
SUB                  : 69
THEN                 : 90
TYPE                 : 29 30 52 53
UNTIL                : 81
VALUES               : 54 55
VIEWSIGNAL           : 93
WHEN                 : 90
WHILE                : 
error                : 

Nonterminals, with rules where they appear

alter                : 15 38
alterB               : 16 39
call                 : 13 36
case                 : 12 35
condition            : 88
declare_procedure    : 6
else_condition       : 
empty                : 28 51
expression           : 84
instructions         : 81
isTrue               : 25 48
local_variable       : 33
master               : 1 2
master_sentence      : 8 9
master_sentences     : 7 9
master_var           : 10
print_values         : 14 37
printable_sentence_string : 59 61 61 62 63 65
printable_sentence_var : 58 60 60 62 63 64
printable_sentences  : 57 64 65
procedure            : 4 5
procedures           : 1 5
recursive_condition  : 86 87
recursive_conditions : 84 87
sentence             : 31 32 82 83
sentence10           : 22 45
sentence11           : 23 46
sentence12           : 24 47
sentence14           : 26 49
sentence15           : 27 50
sentence7            : 19 42
sentence8            : 20 43
sentence9            : 21 44
sentences            : 6 32 80 81 83 85 88
signal               : 17 40
start                : 0
values               : 11 34
viewsignal           : 18 41

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . master procedures
    (2) start -> . master
    (7) master -> . MASTER LPARENT master_sentences RPARENT SEMICOLON

    MASTER          shift and go to state 3

    start                          shift and go to state 1
    master                         shift and go to state 2

state 1

    (0) S' -> start .



state 2

    (1) start -> master . procedures
    (2) start -> master .
    (4) procedures -> . procedure
    (5) procedures -> . procedures procedure
    (6) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (3) declare_procedure -> . PROC ID

    $end            reduce using rule 2 (start -> master .)
    PROC            shift and go to state 7

    procedures                     shift and go to state 4
    procedure                      shift and go to state 5
    declare_procedure              shift and go to state 6

state 3

    (7) master -> MASTER . LPARENT master_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 8


state 4

    (1) start -> master procedures .
    (5) procedures -> procedures . procedure
    (6) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (3) declare_procedure -> . PROC ID

    $end            reduce using rule 1 (start -> master procedures .)
    PROC            shift and go to state 7

    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 6

state 5

    (4) procedures -> procedure .

    PROC            reduce using rule 4 (procedures -> procedure .)
    $end            reduce using rule 4 (procedures -> procedure .)


state 6

    (6) procedure -> declare_procedure . LPARENT sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 10


state 7

    (3) declare_procedure -> PROC . ID

    ID              shift and go to state 11


state 8

    (7) master -> MASTER LPARENT . master_sentences RPARENT SEMICOLON
    (8) master_sentences -> . master_sentence
    (9) master_sentences -> . master_sentences master_sentence
    (10) master_sentence -> . master_var
    (11) master_sentence -> . values
    (12) master_sentence -> . case
    (13) master_sentence -> . call
    (14) master_sentence -> . print_values
    (15) master_sentence -> . alter
    (16) master_sentence -> . alterB
    (17) master_sentence -> . signal
    (18) master_sentence -> . viewsignal
    (19) master_sentence -> . sentence7
    (20) master_sentence -> . sentence8
    (21) master_sentence -> . sentence9
    (22) master_sentence -> . sentence10
    (23) master_sentence -> . sentence11
    (24) master_sentence -> . sentence12
    (25) master_sentence -> . isTrue
    (26) master_sentence -> . sentence14
    (27) master_sentence -> . sentence15
    (28) master_sentence -> . empty
    (29) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (30) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    NEW             shift and go to state 33
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    RPARENT         reduce using rule 94 (empty -> .)

  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]

    master_sentences               shift and go to state 12
    master_sentence                shift and go to state 13
    master_var                     shift and go to state 14
    values                         shift and go to state 15
    case                           shift and go to state 16
    call                           shift and go to state 17
    print_values                   shift and go to state 18
    alter                          shift and go to state 19
    alterB                         shift and go to state 20
    signal                         shift and go to state 21
    viewsignal                     shift and go to state 22
    sentence7                      shift and go to state 23
    sentence8                      shift and go to state 24
    sentence9                      shift and go to state 25
    sentence10                     shift and go to state 26
    sentence11                     shift and go to state 27
    sentence12                     shift and go to state 28
    isTrue                         shift and go to state 29
    sentence14                     shift and go to state 30
    sentence15                     shift and go to state 31
    empty                          shift and go to state 32

state 9

    (5) procedures -> procedures procedure .

    PROC            reduce using rule 5 (procedures -> procedures procedure .)
    $end            reduce using rule 5 (procedures -> procedures procedure .)


state 10

    (6) procedure -> declare_procedure LPARENT . sentences RPARENT SEMICOLON
    (31) sentences -> . sentence
    (32) sentences -> . sentences sentence
    (33) sentence -> . local_variable
    (34) sentence -> . values
    (35) sentence -> . case
    (36) sentence -> . call
    (37) sentence -> . print_values
    (38) sentence -> . alter
    (39) sentence -> . alterB
    (40) sentence -> . signal
    (41) sentence -> . viewsignal
    (42) sentence -> . sentence7
    (43) sentence -> . sentence8
    (44) sentence -> . sentence9
    (45) sentence -> . sentence10
    (46) sentence -> . sentence11
    (47) sentence -> . sentence12
    (48) sentence -> . isTrue
    (49) sentence -> . sentence14
    (50) sentence -> . sentence15
    (51) sentence -> . empty
    (52) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    NEW             shift and go to state 67
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    RPARENT         reduce using rule 94 (empty -> .)

  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]

    sentences                      shift and go to state 46
    sentence                       shift and go to state 47
    local_variable                 shift and go to state 48
    values                         shift and go to state 49
    case                           shift and go to state 50
    call                           shift and go to state 51
    print_values                   shift and go to state 52
    alter                          shift and go to state 53
    alterB                         shift and go to state 54
    signal                         shift and go to state 55
    viewsignal                     shift and go to state 56
    sentence7                      shift and go to state 57
    sentence8                      shift and go to state 58
    sentence9                      shift and go to state 59
    sentence10                     shift and go to state 60
    sentence11                     shift and go to state 61
    sentence12                     shift and go to state 62
    isTrue                         shift and go to state 63
    sentence14                     shift and go to state 64
    sentence15                     shift and go to state 65
    empty                          shift and go to state 66

state 11

    (3) declare_procedure -> PROC ID .

    LPARENT         reduce using rule 3 (declare_procedure -> PROC ID .)


state 12

    (7) master -> MASTER LPARENT master_sentences . RPARENT SEMICOLON
    (9) master_sentences -> master_sentences . master_sentence
    (10) master_sentence -> . master_var
    (11) master_sentence -> . values
    (12) master_sentence -> . case
    (13) master_sentence -> . call
    (14) master_sentence -> . print_values
    (15) master_sentence -> . alter
    (16) master_sentence -> . alterB
    (17) master_sentence -> . signal
    (18) master_sentence -> . viewsignal
    (19) master_sentence -> . sentence7
    (20) master_sentence -> . sentence8
    (21) master_sentence -> . sentence9
    (22) master_sentence -> . sentence10
    (23) master_sentence -> . sentence11
    (24) master_sentence -> . sentence12
    (25) master_sentence -> . isTrue
    (26) master_sentence -> . sentence14
    (27) master_sentence -> . sentence15
    (28) master_sentence -> . empty
    (29) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (30) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    RPARENT         shift and go to state 68
    NEW             shift and go to state 33
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45

  ! RPARENT         [ reduce using rule 94 (empty -> .) ]
  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]

    master_sentence                shift and go to state 69
    master_var                     shift and go to state 14
    values                         shift and go to state 15
    case                           shift and go to state 16
    call                           shift and go to state 17
    print_values                   shift and go to state 18
    alter                          shift and go to state 19
    alterB                         shift and go to state 20
    signal                         shift and go to state 21
    viewsignal                     shift and go to state 22
    sentence7                      shift and go to state 23
    sentence8                      shift and go to state 24
    sentence9                      shift and go to state 25
    sentence10                     shift and go to state 26
    sentence11                     shift and go to state 27
    sentence12                     shift and go to state 28
    isTrue                         shift and go to state 29
    sentence14                     shift and go to state 30
    sentence15                     shift and go to state 31
    empty                          shift and go to state 32

state 13

    (8) master_sentences -> master_sentence .

    RPARENT         reduce using rule 8 (master_sentences -> master_sentence .)
    NEW             reduce using rule 8 (master_sentences -> master_sentence .)
    VALUES          reduce using rule 8 (master_sentences -> master_sentence .)
    CASE            reduce using rule 8 (master_sentences -> master_sentence .)
    CALL            reduce using rule 8 (master_sentences -> master_sentence .)
    PRINTVALUES     reduce using rule 8 (master_sentences -> master_sentence .)
    ALTER           reduce using rule 8 (master_sentences -> master_sentence .)
    ALTERB          reduce using rule 8 (master_sentences -> master_sentence .)
    SIGNAL          reduce using rule 8 (master_sentences -> master_sentence .)
    VIEWSIGNAL      reduce using rule 8 (master_sentences -> master_sentence .)
    ID              reduce using rule 8 (master_sentences -> master_sentence .)
    ISTRUE          reduce using rule 8 (master_sentences -> master_sentence .)
    REPEAT          reduce using rule 8 (master_sentences -> master_sentence .)
    UNTIL           reduce using rule 8 (master_sentences -> master_sentence .)


state 14

    (10) master_sentence -> master_var .

    RPARENT         reduce using rule 10 (master_sentence -> master_var .)
    NEW             reduce using rule 10 (master_sentence -> master_var .)
    VALUES          reduce using rule 10 (master_sentence -> master_var .)
    CASE            reduce using rule 10 (master_sentence -> master_var .)
    CALL            reduce using rule 10 (master_sentence -> master_var .)
    PRINTVALUES     reduce using rule 10 (master_sentence -> master_var .)
    ALTER           reduce using rule 10 (master_sentence -> master_var .)
    ALTERB          reduce using rule 10 (master_sentence -> master_var .)
    SIGNAL          reduce using rule 10 (master_sentence -> master_var .)
    VIEWSIGNAL      reduce using rule 10 (master_sentence -> master_var .)
    ID              reduce using rule 10 (master_sentence -> master_var .)
    ISTRUE          reduce using rule 10 (master_sentence -> master_var .)
    REPEAT          reduce using rule 10 (master_sentence -> master_var .)
    UNTIL           reduce using rule 10 (master_sentence -> master_var .)


state 15

    (11) master_sentence -> values .

    RPARENT         reduce using rule 11 (master_sentence -> values .)
    NEW             reduce using rule 11 (master_sentence -> values .)
    VALUES          reduce using rule 11 (master_sentence -> values .)
    CASE            reduce using rule 11 (master_sentence -> values .)
    CALL            reduce using rule 11 (master_sentence -> values .)
    PRINTVALUES     reduce using rule 11 (master_sentence -> values .)
    ALTER           reduce using rule 11 (master_sentence -> values .)
    ALTERB          reduce using rule 11 (master_sentence -> values .)
    SIGNAL          reduce using rule 11 (master_sentence -> values .)
    VIEWSIGNAL      reduce using rule 11 (master_sentence -> values .)
    ID              reduce using rule 11 (master_sentence -> values .)
    ISTRUE          reduce using rule 11 (master_sentence -> values .)
    REPEAT          reduce using rule 11 (master_sentence -> values .)
    UNTIL           reduce using rule 11 (master_sentence -> values .)


state 16

    (12) master_sentence -> case .

    RPARENT         reduce using rule 12 (master_sentence -> case .)
    NEW             reduce using rule 12 (master_sentence -> case .)
    VALUES          reduce using rule 12 (master_sentence -> case .)
    CASE            reduce using rule 12 (master_sentence -> case .)
    CALL            reduce using rule 12 (master_sentence -> case .)
    PRINTVALUES     reduce using rule 12 (master_sentence -> case .)
    ALTER           reduce using rule 12 (master_sentence -> case .)
    ALTERB          reduce using rule 12 (master_sentence -> case .)
    SIGNAL          reduce using rule 12 (master_sentence -> case .)
    VIEWSIGNAL      reduce using rule 12 (master_sentence -> case .)
    ID              reduce using rule 12 (master_sentence -> case .)
    ISTRUE          reduce using rule 12 (master_sentence -> case .)
    REPEAT          reduce using rule 12 (master_sentence -> case .)
    UNTIL           reduce using rule 12 (master_sentence -> case .)


state 17

    (13) master_sentence -> call .

    RPARENT         reduce using rule 13 (master_sentence -> call .)
    NEW             reduce using rule 13 (master_sentence -> call .)
    VALUES          reduce using rule 13 (master_sentence -> call .)
    CASE            reduce using rule 13 (master_sentence -> call .)
    CALL            reduce using rule 13 (master_sentence -> call .)
    PRINTVALUES     reduce using rule 13 (master_sentence -> call .)
    ALTER           reduce using rule 13 (master_sentence -> call .)
    ALTERB          reduce using rule 13 (master_sentence -> call .)
    SIGNAL          reduce using rule 13 (master_sentence -> call .)
    VIEWSIGNAL      reduce using rule 13 (master_sentence -> call .)
    ID              reduce using rule 13 (master_sentence -> call .)
    ISTRUE          reduce using rule 13 (master_sentence -> call .)
    REPEAT          reduce using rule 13 (master_sentence -> call .)
    UNTIL           reduce using rule 13 (master_sentence -> call .)


state 18

    (14) master_sentence -> print_values .

    RPARENT         reduce using rule 14 (master_sentence -> print_values .)
    NEW             reduce using rule 14 (master_sentence -> print_values .)
    VALUES          reduce using rule 14 (master_sentence -> print_values .)
    CASE            reduce using rule 14 (master_sentence -> print_values .)
    CALL            reduce using rule 14 (master_sentence -> print_values .)
    PRINTVALUES     reduce using rule 14 (master_sentence -> print_values .)
    ALTER           reduce using rule 14 (master_sentence -> print_values .)
    ALTERB          reduce using rule 14 (master_sentence -> print_values .)
    SIGNAL          reduce using rule 14 (master_sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 14 (master_sentence -> print_values .)
    ID              reduce using rule 14 (master_sentence -> print_values .)
    ISTRUE          reduce using rule 14 (master_sentence -> print_values .)
    REPEAT          reduce using rule 14 (master_sentence -> print_values .)
    UNTIL           reduce using rule 14 (master_sentence -> print_values .)


state 19

    (15) master_sentence -> alter .

    RPARENT         reduce using rule 15 (master_sentence -> alter .)
    NEW             reduce using rule 15 (master_sentence -> alter .)
    VALUES          reduce using rule 15 (master_sentence -> alter .)
    CASE            reduce using rule 15 (master_sentence -> alter .)
    CALL            reduce using rule 15 (master_sentence -> alter .)
    PRINTVALUES     reduce using rule 15 (master_sentence -> alter .)
    ALTER           reduce using rule 15 (master_sentence -> alter .)
    ALTERB          reduce using rule 15 (master_sentence -> alter .)
    SIGNAL          reduce using rule 15 (master_sentence -> alter .)
    VIEWSIGNAL      reduce using rule 15 (master_sentence -> alter .)
    ID              reduce using rule 15 (master_sentence -> alter .)
    ISTRUE          reduce using rule 15 (master_sentence -> alter .)
    REPEAT          reduce using rule 15 (master_sentence -> alter .)
    UNTIL           reduce using rule 15 (master_sentence -> alter .)


state 20

    (16) master_sentence -> alterB .

    RPARENT         reduce using rule 16 (master_sentence -> alterB .)
    NEW             reduce using rule 16 (master_sentence -> alterB .)
    VALUES          reduce using rule 16 (master_sentence -> alterB .)
    CASE            reduce using rule 16 (master_sentence -> alterB .)
    CALL            reduce using rule 16 (master_sentence -> alterB .)
    PRINTVALUES     reduce using rule 16 (master_sentence -> alterB .)
    ALTER           reduce using rule 16 (master_sentence -> alterB .)
    ALTERB          reduce using rule 16 (master_sentence -> alterB .)
    SIGNAL          reduce using rule 16 (master_sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 16 (master_sentence -> alterB .)
    ID              reduce using rule 16 (master_sentence -> alterB .)
    ISTRUE          reduce using rule 16 (master_sentence -> alterB .)
    REPEAT          reduce using rule 16 (master_sentence -> alterB .)
    UNTIL           reduce using rule 16 (master_sentence -> alterB .)


state 21

    (17) master_sentence -> signal .

    RPARENT         reduce using rule 17 (master_sentence -> signal .)
    NEW             reduce using rule 17 (master_sentence -> signal .)
    VALUES          reduce using rule 17 (master_sentence -> signal .)
    CASE            reduce using rule 17 (master_sentence -> signal .)
    CALL            reduce using rule 17 (master_sentence -> signal .)
    PRINTVALUES     reduce using rule 17 (master_sentence -> signal .)
    ALTER           reduce using rule 17 (master_sentence -> signal .)
    ALTERB          reduce using rule 17 (master_sentence -> signal .)
    SIGNAL          reduce using rule 17 (master_sentence -> signal .)
    VIEWSIGNAL      reduce using rule 17 (master_sentence -> signal .)
    ID              reduce using rule 17 (master_sentence -> signal .)
    ISTRUE          reduce using rule 17 (master_sentence -> signal .)
    REPEAT          reduce using rule 17 (master_sentence -> signal .)
    UNTIL           reduce using rule 17 (master_sentence -> signal .)


state 22

    (18) master_sentence -> viewsignal .

    RPARENT         reduce using rule 18 (master_sentence -> viewsignal .)
    NEW             reduce using rule 18 (master_sentence -> viewsignal .)
    VALUES          reduce using rule 18 (master_sentence -> viewsignal .)
    CASE            reduce using rule 18 (master_sentence -> viewsignal .)
    CALL            reduce using rule 18 (master_sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 18 (master_sentence -> viewsignal .)
    ALTER           reduce using rule 18 (master_sentence -> viewsignal .)
    ALTERB          reduce using rule 18 (master_sentence -> viewsignal .)
    SIGNAL          reduce using rule 18 (master_sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 18 (master_sentence -> viewsignal .)
    ID              reduce using rule 18 (master_sentence -> viewsignal .)
    ISTRUE          reduce using rule 18 (master_sentence -> viewsignal .)
    REPEAT          reduce using rule 18 (master_sentence -> viewsignal .)
    UNTIL           reduce using rule 18 (master_sentence -> viewsignal .)


state 23

    (19) master_sentence -> sentence7 .

    RPARENT         reduce using rule 19 (master_sentence -> sentence7 .)
    NEW             reduce using rule 19 (master_sentence -> sentence7 .)
    VALUES          reduce using rule 19 (master_sentence -> sentence7 .)
    CASE            reduce using rule 19 (master_sentence -> sentence7 .)
    CALL            reduce using rule 19 (master_sentence -> sentence7 .)
    PRINTVALUES     reduce using rule 19 (master_sentence -> sentence7 .)
    ALTER           reduce using rule 19 (master_sentence -> sentence7 .)
    ALTERB          reduce using rule 19 (master_sentence -> sentence7 .)
    SIGNAL          reduce using rule 19 (master_sentence -> sentence7 .)
    VIEWSIGNAL      reduce using rule 19 (master_sentence -> sentence7 .)
    ID              reduce using rule 19 (master_sentence -> sentence7 .)
    ISTRUE          reduce using rule 19 (master_sentence -> sentence7 .)
    REPEAT          reduce using rule 19 (master_sentence -> sentence7 .)
    UNTIL           reduce using rule 19 (master_sentence -> sentence7 .)


state 24

    (20) master_sentence -> sentence8 .

    RPARENT         reduce using rule 20 (master_sentence -> sentence8 .)
    NEW             reduce using rule 20 (master_sentence -> sentence8 .)
    VALUES          reduce using rule 20 (master_sentence -> sentence8 .)
    CASE            reduce using rule 20 (master_sentence -> sentence8 .)
    CALL            reduce using rule 20 (master_sentence -> sentence8 .)
    PRINTVALUES     reduce using rule 20 (master_sentence -> sentence8 .)
    ALTER           reduce using rule 20 (master_sentence -> sentence8 .)
    ALTERB          reduce using rule 20 (master_sentence -> sentence8 .)
    SIGNAL          reduce using rule 20 (master_sentence -> sentence8 .)
    VIEWSIGNAL      reduce using rule 20 (master_sentence -> sentence8 .)
    ID              reduce using rule 20 (master_sentence -> sentence8 .)
    ISTRUE          reduce using rule 20 (master_sentence -> sentence8 .)
    REPEAT          reduce using rule 20 (master_sentence -> sentence8 .)
    UNTIL           reduce using rule 20 (master_sentence -> sentence8 .)


state 25

    (21) master_sentence -> sentence9 .

    RPARENT         reduce using rule 21 (master_sentence -> sentence9 .)
    NEW             reduce using rule 21 (master_sentence -> sentence9 .)
    VALUES          reduce using rule 21 (master_sentence -> sentence9 .)
    CASE            reduce using rule 21 (master_sentence -> sentence9 .)
    CALL            reduce using rule 21 (master_sentence -> sentence9 .)
    PRINTVALUES     reduce using rule 21 (master_sentence -> sentence9 .)
    ALTER           reduce using rule 21 (master_sentence -> sentence9 .)
    ALTERB          reduce using rule 21 (master_sentence -> sentence9 .)
    SIGNAL          reduce using rule 21 (master_sentence -> sentence9 .)
    VIEWSIGNAL      reduce using rule 21 (master_sentence -> sentence9 .)
    ID              reduce using rule 21 (master_sentence -> sentence9 .)
    ISTRUE          reduce using rule 21 (master_sentence -> sentence9 .)
    REPEAT          reduce using rule 21 (master_sentence -> sentence9 .)
    UNTIL           reduce using rule 21 (master_sentence -> sentence9 .)


state 26

    (22) master_sentence -> sentence10 .

    RPARENT         reduce using rule 22 (master_sentence -> sentence10 .)
    NEW             reduce using rule 22 (master_sentence -> sentence10 .)
    VALUES          reduce using rule 22 (master_sentence -> sentence10 .)
    CASE            reduce using rule 22 (master_sentence -> sentence10 .)
    CALL            reduce using rule 22 (master_sentence -> sentence10 .)
    PRINTVALUES     reduce using rule 22 (master_sentence -> sentence10 .)
    ALTER           reduce using rule 22 (master_sentence -> sentence10 .)
    ALTERB          reduce using rule 22 (master_sentence -> sentence10 .)
    SIGNAL          reduce using rule 22 (master_sentence -> sentence10 .)
    VIEWSIGNAL      reduce using rule 22 (master_sentence -> sentence10 .)
    ID              reduce using rule 22 (master_sentence -> sentence10 .)
    ISTRUE          reduce using rule 22 (master_sentence -> sentence10 .)
    REPEAT          reduce using rule 22 (master_sentence -> sentence10 .)
    UNTIL           reduce using rule 22 (master_sentence -> sentence10 .)


state 27

    (23) master_sentence -> sentence11 .

    RPARENT         reduce using rule 23 (master_sentence -> sentence11 .)
    NEW             reduce using rule 23 (master_sentence -> sentence11 .)
    VALUES          reduce using rule 23 (master_sentence -> sentence11 .)
    CASE            reduce using rule 23 (master_sentence -> sentence11 .)
    CALL            reduce using rule 23 (master_sentence -> sentence11 .)
    PRINTVALUES     reduce using rule 23 (master_sentence -> sentence11 .)
    ALTER           reduce using rule 23 (master_sentence -> sentence11 .)
    ALTERB          reduce using rule 23 (master_sentence -> sentence11 .)
    SIGNAL          reduce using rule 23 (master_sentence -> sentence11 .)
    VIEWSIGNAL      reduce using rule 23 (master_sentence -> sentence11 .)
    ID              reduce using rule 23 (master_sentence -> sentence11 .)
    ISTRUE          reduce using rule 23 (master_sentence -> sentence11 .)
    REPEAT          reduce using rule 23 (master_sentence -> sentence11 .)
    UNTIL           reduce using rule 23 (master_sentence -> sentence11 .)


state 28

    (24) master_sentence -> sentence12 .

    RPARENT         reduce using rule 24 (master_sentence -> sentence12 .)
    NEW             reduce using rule 24 (master_sentence -> sentence12 .)
    VALUES          reduce using rule 24 (master_sentence -> sentence12 .)
    CASE            reduce using rule 24 (master_sentence -> sentence12 .)
    CALL            reduce using rule 24 (master_sentence -> sentence12 .)
    PRINTVALUES     reduce using rule 24 (master_sentence -> sentence12 .)
    ALTER           reduce using rule 24 (master_sentence -> sentence12 .)
    ALTERB          reduce using rule 24 (master_sentence -> sentence12 .)
    SIGNAL          reduce using rule 24 (master_sentence -> sentence12 .)
    VIEWSIGNAL      reduce using rule 24 (master_sentence -> sentence12 .)
    ID              reduce using rule 24 (master_sentence -> sentence12 .)
    ISTRUE          reduce using rule 24 (master_sentence -> sentence12 .)
    REPEAT          reduce using rule 24 (master_sentence -> sentence12 .)
    UNTIL           reduce using rule 24 (master_sentence -> sentence12 .)


state 29

    (25) master_sentence -> isTrue .

    RPARENT         reduce using rule 25 (master_sentence -> isTrue .)
    NEW             reduce using rule 25 (master_sentence -> isTrue .)
    VALUES          reduce using rule 25 (master_sentence -> isTrue .)
    CASE            reduce using rule 25 (master_sentence -> isTrue .)
    CALL            reduce using rule 25 (master_sentence -> isTrue .)
    PRINTVALUES     reduce using rule 25 (master_sentence -> isTrue .)
    ALTER           reduce using rule 25 (master_sentence -> isTrue .)
    ALTERB          reduce using rule 25 (master_sentence -> isTrue .)
    SIGNAL          reduce using rule 25 (master_sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 25 (master_sentence -> isTrue .)
    ID              reduce using rule 25 (master_sentence -> isTrue .)
    ISTRUE          reduce using rule 25 (master_sentence -> isTrue .)
    REPEAT          reduce using rule 25 (master_sentence -> isTrue .)
    UNTIL           reduce using rule 25 (master_sentence -> isTrue .)


state 30

    (26) master_sentence -> sentence14 .

    RPARENT         reduce using rule 26 (master_sentence -> sentence14 .)
    NEW             reduce using rule 26 (master_sentence -> sentence14 .)
    VALUES          reduce using rule 26 (master_sentence -> sentence14 .)
    CASE            reduce using rule 26 (master_sentence -> sentence14 .)
    CALL            reduce using rule 26 (master_sentence -> sentence14 .)
    PRINTVALUES     reduce using rule 26 (master_sentence -> sentence14 .)
    ALTER           reduce using rule 26 (master_sentence -> sentence14 .)
    ALTERB          reduce using rule 26 (master_sentence -> sentence14 .)
    SIGNAL          reduce using rule 26 (master_sentence -> sentence14 .)
    VIEWSIGNAL      reduce using rule 26 (master_sentence -> sentence14 .)
    ID              reduce using rule 26 (master_sentence -> sentence14 .)
    ISTRUE          reduce using rule 26 (master_sentence -> sentence14 .)
    REPEAT          reduce using rule 26 (master_sentence -> sentence14 .)
    UNTIL           reduce using rule 26 (master_sentence -> sentence14 .)


state 31

    (27) master_sentence -> sentence15 .

    RPARENT         reduce using rule 27 (master_sentence -> sentence15 .)
    NEW             reduce using rule 27 (master_sentence -> sentence15 .)
    VALUES          reduce using rule 27 (master_sentence -> sentence15 .)
    CASE            reduce using rule 27 (master_sentence -> sentence15 .)
    CALL            reduce using rule 27 (master_sentence -> sentence15 .)
    PRINTVALUES     reduce using rule 27 (master_sentence -> sentence15 .)
    ALTER           reduce using rule 27 (master_sentence -> sentence15 .)
    ALTERB          reduce using rule 27 (master_sentence -> sentence15 .)
    SIGNAL          reduce using rule 27 (master_sentence -> sentence15 .)
    VIEWSIGNAL      reduce using rule 27 (master_sentence -> sentence15 .)
    ID              reduce using rule 27 (master_sentence -> sentence15 .)
    ISTRUE          reduce using rule 27 (master_sentence -> sentence15 .)
    REPEAT          reduce using rule 27 (master_sentence -> sentence15 .)
    UNTIL           reduce using rule 27 (master_sentence -> sentence15 .)


state 32

    (28) master_sentence -> empty .

    RPARENT         reduce using rule 28 (master_sentence -> empty .)
    NEW             reduce using rule 28 (master_sentence -> empty .)
    VALUES          reduce using rule 28 (master_sentence -> empty .)
    CASE            reduce using rule 28 (master_sentence -> empty .)
    CALL            reduce using rule 28 (master_sentence -> empty .)
    PRINTVALUES     reduce using rule 28 (master_sentence -> empty .)
    ALTER           reduce using rule 28 (master_sentence -> empty .)
    ALTERB          reduce using rule 28 (master_sentence -> empty .)
    SIGNAL          reduce using rule 28 (master_sentence -> empty .)
    VIEWSIGNAL      reduce using rule 28 (master_sentence -> empty .)
    ID              reduce using rule 28 (master_sentence -> empty .)
    ISTRUE          reduce using rule 28 (master_sentence -> empty .)
    REPEAT          reduce using rule 28 (master_sentence -> empty .)
    UNTIL           reduce using rule 28 (master_sentence -> empty .)


state 33

    (29) master_var -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (30) master_var -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 70


state 34

    (73) sentence7 -> ID . MAQ INTEGER
    (74) sentence8 -> ID . MEQ INTEGER
    (75) sentence9 -> ID . EQUAL INTEGER
    (76) sentence10 -> ID . DIFFERENT INTEGER
    (77) sentence11 -> ID . MEQEQUAL INTEGER
    (78) sentence12 -> ID . MAQEQUAL INTEGER

    MAQ             shift and go to state 71
    MEQ             shift and go to state 72
    EQUAL           shift and go to state 73
    DIFFERENT       shift and go to state 74
    MEQEQUAL        shift and go to state 75
    MAQEQUAL        shift and go to state 76


state 35

    (54) values -> VALUES . LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> VALUES . LPARENT ID COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 77


state 36

    (84) case -> CASE . expression recursive_conditions SEMICOLON
    (89) expression -> . ID

    ID              shift and go to state 79

    expression                     shift and go to state 78

state 37

    (56) call -> CALL . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 80


state 38

    (57) print_values -> PRINTVALUES . LPARENT printable_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 81


state 39

    (68) alter -> ALTER . LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> ALTER . LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> ALTER . LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> ALTER . LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 82


state 40

    (72) alterB -> ALTERB . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 83


state 41

    (91) signal -> SIGNAL . LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> SIGNAL . LPARENT ID COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 84


state 42

    (93) viewsignal -> VIEWSIGNAL . LPARENT INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 85


state 43

    (79) isTrue -> ISTRUE . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 86


state 44

    (80) sentence14 -> REPEAT . LPARENT sentences BREAK RPARENT SEMICOLON

    LPARENT         shift and go to state 87


state 45

    (81) sentence15 -> UNTIL . LPARENT instructions RPARENT sentences SEMICOLON

    LPARENT         shift and go to state 88


state 46

    (6) procedure -> declare_procedure LPARENT sentences . RPARENT SEMICOLON
    (32) sentences -> sentences . sentence
    (33) sentence -> . local_variable
    (34) sentence -> . values
    (35) sentence -> . case
    (36) sentence -> . call
    (37) sentence -> . print_values
    (38) sentence -> . alter
    (39) sentence -> . alterB
    (40) sentence -> . signal
    (41) sentence -> . viewsignal
    (42) sentence -> . sentence7
    (43) sentence -> . sentence8
    (44) sentence -> . sentence9
    (45) sentence -> . sentence10
    (46) sentence -> . sentence11
    (47) sentence -> . sentence12
    (48) sentence -> . isTrue
    (49) sentence -> . sentence14
    (50) sentence -> . sentence15
    (51) sentence -> . empty
    (52) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    RPARENT         shift and go to state 89
    NEW             shift and go to state 67
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45

  ! RPARENT         [ reduce using rule 94 (empty -> .) ]
  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]

    sentence                       shift and go to state 90
    local_variable                 shift and go to state 48
    values                         shift and go to state 49
    case                           shift and go to state 50
    call                           shift and go to state 51
    print_values                   shift and go to state 52
    alter                          shift and go to state 53
    alterB                         shift and go to state 54
    signal                         shift and go to state 55
    viewsignal                     shift and go to state 56
    sentence7                      shift and go to state 57
    sentence8                      shift and go to state 58
    sentence9                      shift and go to state 59
    sentence10                     shift and go to state 60
    sentence11                     shift and go to state 61
    sentence12                     shift and go to state 62
    isTrue                         shift and go to state 63
    sentence14                     shift and go to state 64
    sentence15                     shift and go to state 65
    empty                          shift and go to state 66

state 47

    (31) sentences -> sentence .

    RPARENT         reduce using rule 31 (sentences -> sentence .)
    NEW             reduce using rule 31 (sentences -> sentence .)
    VALUES          reduce using rule 31 (sentences -> sentence .)
    CASE            reduce using rule 31 (sentences -> sentence .)
    CALL            reduce using rule 31 (sentences -> sentence .)
    PRINTVALUES     reduce using rule 31 (sentences -> sentence .)
    ALTER           reduce using rule 31 (sentences -> sentence .)
    ALTERB          reduce using rule 31 (sentences -> sentence .)
    SIGNAL          reduce using rule 31 (sentences -> sentence .)
    VIEWSIGNAL      reduce using rule 31 (sentences -> sentence .)
    ID              reduce using rule 31 (sentences -> sentence .)
    ISTRUE          reduce using rule 31 (sentences -> sentence .)
    REPEAT          reduce using rule 31 (sentences -> sentence .)
    UNTIL           reduce using rule 31 (sentences -> sentence .)
    BREAK           reduce using rule 31 (sentences -> sentence .)
    SEMICOLON       reduce using rule 31 (sentences -> sentence .)


state 48

    (33) sentence -> local_variable .

    RPARENT         reduce using rule 33 (sentence -> local_variable .)
    NEW             reduce using rule 33 (sentence -> local_variable .)
    VALUES          reduce using rule 33 (sentence -> local_variable .)
    CASE            reduce using rule 33 (sentence -> local_variable .)
    CALL            reduce using rule 33 (sentence -> local_variable .)
    PRINTVALUES     reduce using rule 33 (sentence -> local_variable .)
    ALTER           reduce using rule 33 (sentence -> local_variable .)
    ALTERB          reduce using rule 33 (sentence -> local_variable .)
    SIGNAL          reduce using rule 33 (sentence -> local_variable .)
    VIEWSIGNAL      reduce using rule 33 (sentence -> local_variable .)
    ID              reduce using rule 33 (sentence -> local_variable .)
    ISTRUE          reduce using rule 33 (sentence -> local_variable .)
    REPEAT          reduce using rule 33 (sentence -> local_variable .)
    UNTIL           reduce using rule 33 (sentence -> local_variable .)
    BREAK           reduce using rule 33 (sentence -> local_variable .)
    SEMICOLON       reduce using rule 33 (sentence -> local_variable .)


state 49

    (34) sentence -> values .

    RPARENT         reduce using rule 34 (sentence -> values .)
    NEW             reduce using rule 34 (sentence -> values .)
    VALUES          reduce using rule 34 (sentence -> values .)
    CASE            reduce using rule 34 (sentence -> values .)
    CALL            reduce using rule 34 (sentence -> values .)
    PRINTVALUES     reduce using rule 34 (sentence -> values .)
    ALTER           reduce using rule 34 (sentence -> values .)
    ALTERB          reduce using rule 34 (sentence -> values .)
    SIGNAL          reduce using rule 34 (sentence -> values .)
    VIEWSIGNAL      reduce using rule 34 (sentence -> values .)
    ID              reduce using rule 34 (sentence -> values .)
    ISTRUE          reduce using rule 34 (sentence -> values .)
    REPEAT          reduce using rule 34 (sentence -> values .)
    UNTIL           reduce using rule 34 (sentence -> values .)
    BREAK           reduce using rule 34 (sentence -> values .)
    SEMICOLON       reduce using rule 34 (sentence -> values .)


state 50

    (35) sentence -> case .

    RPARENT         reduce using rule 35 (sentence -> case .)
    NEW             reduce using rule 35 (sentence -> case .)
    VALUES          reduce using rule 35 (sentence -> case .)
    CASE            reduce using rule 35 (sentence -> case .)
    CALL            reduce using rule 35 (sentence -> case .)
    PRINTVALUES     reduce using rule 35 (sentence -> case .)
    ALTER           reduce using rule 35 (sentence -> case .)
    ALTERB          reduce using rule 35 (sentence -> case .)
    SIGNAL          reduce using rule 35 (sentence -> case .)
    VIEWSIGNAL      reduce using rule 35 (sentence -> case .)
    ID              reduce using rule 35 (sentence -> case .)
    ISTRUE          reduce using rule 35 (sentence -> case .)
    REPEAT          reduce using rule 35 (sentence -> case .)
    UNTIL           reduce using rule 35 (sentence -> case .)
    BREAK           reduce using rule 35 (sentence -> case .)
    SEMICOLON       reduce using rule 35 (sentence -> case .)


state 51

    (36) sentence -> call .

    RPARENT         reduce using rule 36 (sentence -> call .)
    NEW             reduce using rule 36 (sentence -> call .)
    VALUES          reduce using rule 36 (sentence -> call .)
    CASE            reduce using rule 36 (sentence -> call .)
    CALL            reduce using rule 36 (sentence -> call .)
    PRINTVALUES     reduce using rule 36 (sentence -> call .)
    ALTER           reduce using rule 36 (sentence -> call .)
    ALTERB          reduce using rule 36 (sentence -> call .)
    SIGNAL          reduce using rule 36 (sentence -> call .)
    VIEWSIGNAL      reduce using rule 36 (sentence -> call .)
    ID              reduce using rule 36 (sentence -> call .)
    ISTRUE          reduce using rule 36 (sentence -> call .)
    REPEAT          reduce using rule 36 (sentence -> call .)
    UNTIL           reduce using rule 36 (sentence -> call .)
    BREAK           reduce using rule 36 (sentence -> call .)
    SEMICOLON       reduce using rule 36 (sentence -> call .)


state 52

    (37) sentence -> print_values .

    RPARENT         reduce using rule 37 (sentence -> print_values .)
    NEW             reduce using rule 37 (sentence -> print_values .)
    VALUES          reduce using rule 37 (sentence -> print_values .)
    CASE            reduce using rule 37 (sentence -> print_values .)
    CALL            reduce using rule 37 (sentence -> print_values .)
    PRINTVALUES     reduce using rule 37 (sentence -> print_values .)
    ALTER           reduce using rule 37 (sentence -> print_values .)
    ALTERB          reduce using rule 37 (sentence -> print_values .)
    SIGNAL          reduce using rule 37 (sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 37 (sentence -> print_values .)
    ID              reduce using rule 37 (sentence -> print_values .)
    ISTRUE          reduce using rule 37 (sentence -> print_values .)
    REPEAT          reduce using rule 37 (sentence -> print_values .)
    UNTIL           reduce using rule 37 (sentence -> print_values .)
    BREAK           reduce using rule 37 (sentence -> print_values .)
    SEMICOLON       reduce using rule 37 (sentence -> print_values .)


state 53

    (38) sentence -> alter .

    RPARENT         reduce using rule 38 (sentence -> alter .)
    NEW             reduce using rule 38 (sentence -> alter .)
    VALUES          reduce using rule 38 (sentence -> alter .)
    CASE            reduce using rule 38 (sentence -> alter .)
    CALL            reduce using rule 38 (sentence -> alter .)
    PRINTVALUES     reduce using rule 38 (sentence -> alter .)
    ALTER           reduce using rule 38 (sentence -> alter .)
    ALTERB          reduce using rule 38 (sentence -> alter .)
    SIGNAL          reduce using rule 38 (sentence -> alter .)
    VIEWSIGNAL      reduce using rule 38 (sentence -> alter .)
    ID              reduce using rule 38 (sentence -> alter .)
    ISTRUE          reduce using rule 38 (sentence -> alter .)
    REPEAT          reduce using rule 38 (sentence -> alter .)
    UNTIL           reduce using rule 38 (sentence -> alter .)
    BREAK           reduce using rule 38 (sentence -> alter .)
    SEMICOLON       reduce using rule 38 (sentence -> alter .)


state 54

    (39) sentence -> alterB .

    RPARENT         reduce using rule 39 (sentence -> alterB .)
    NEW             reduce using rule 39 (sentence -> alterB .)
    VALUES          reduce using rule 39 (sentence -> alterB .)
    CASE            reduce using rule 39 (sentence -> alterB .)
    CALL            reduce using rule 39 (sentence -> alterB .)
    PRINTVALUES     reduce using rule 39 (sentence -> alterB .)
    ALTER           reduce using rule 39 (sentence -> alterB .)
    ALTERB          reduce using rule 39 (sentence -> alterB .)
    SIGNAL          reduce using rule 39 (sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 39 (sentence -> alterB .)
    ID              reduce using rule 39 (sentence -> alterB .)
    ISTRUE          reduce using rule 39 (sentence -> alterB .)
    REPEAT          reduce using rule 39 (sentence -> alterB .)
    UNTIL           reduce using rule 39 (sentence -> alterB .)
    BREAK           reduce using rule 39 (sentence -> alterB .)
    SEMICOLON       reduce using rule 39 (sentence -> alterB .)


state 55

    (40) sentence -> signal .

    RPARENT         reduce using rule 40 (sentence -> signal .)
    NEW             reduce using rule 40 (sentence -> signal .)
    VALUES          reduce using rule 40 (sentence -> signal .)
    CASE            reduce using rule 40 (sentence -> signal .)
    CALL            reduce using rule 40 (sentence -> signal .)
    PRINTVALUES     reduce using rule 40 (sentence -> signal .)
    ALTER           reduce using rule 40 (sentence -> signal .)
    ALTERB          reduce using rule 40 (sentence -> signal .)
    SIGNAL          reduce using rule 40 (sentence -> signal .)
    VIEWSIGNAL      reduce using rule 40 (sentence -> signal .)
    ID              reduce using rule 40 (sentence -> signal .)
    ISTRUE          reduce using rule 40 (sentence -> signal .)
    REPEAT          reduce using rule 40 (sentence -> signal .)
    UNTIL           reduce using rule 40 (sentence -> signal .)
    BREAK           reduce using rule 40 (sentence -> signal .)
    SEMICOLON       reduce using rule 40 (sentence -> signal .)


state 56

    (41) sentence -> viewsignal .

    RPARENT         reduce using rule 41 (sentence -> viewsignal .)
    NEW             reduce using rule 41 (sentence -> viewsignal .)
    VALUES          reduce using rule 41 (sentence -> viewsignal .)
    CASE            reduce using rule 41 (sentence -> viewsignal .)
    CALL            reduce using rule 41 (sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 41 (sentence -> viewsignal .)
    ALTER           reduce using rule 41 (sentence -> viewsignal .)
    ALTERB          reduce using rule 41 (sentence -> viewsignal .)
    SIGNAL          reduce using rule 41 (sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 41 (sentence -> viewsignal .)
    ID              reduce using rule 41 (sentence -> viewsignal .)
    ISTRUE          reduce using rule 41 (sentence -> viewsignal .)
    REPEAT          reduce using rule 41 (sentence -> viewsignal .)
    UNTIL           reduce using rule 41 (sentence -> viewsignal .)
    BREAK           reduce using rule 41 (sentence -> viewsignal .)
    SEMICOLON       reduce using rule 41 (sentence -> viewsignal .)


state 57

    (42) sentence -> sentence7 .

    RPARENT         reduce using rule 42 (sentence -> sentence7 .)
    NEW             reduce using rule 42 (sentence -> sentence7 .)
    VALUES          reduce using rule 42 (sentence -> sentence7 .)
    CASE            reduce using rule 42 (sentence -> sentence7 .)
    CALL            reduce using rule 42 (sentence -> sentence7 .)
    PRINTVALUES     reduce using rule 42 (sentence -> sentence7 .)
    ALTER           reduce using rule 42 (sentence -> sentence7 .)
    ALTERB          reduce using rule 42 (sentence -> sentence7 .)
    SIGNAL          reduce using rule 42 (sentence -> sentence7 .)
    VIEWSIGNAL      reduce using rule 42 (sentence -> sentence7 .)
    ID              reduce using rule 42 (sentence -> sentence7 .)
    ISTRUE          reduce using rule 42 (sentence -> sentence7 .)
    REPEAT          reduce using rule 42 (sentence -> sentence7 .)
    UNTIL           reduce using rule 42 (sentence -> sentence7 .)
    BREAK           reduce using rule 42 (sentence -> sentence7 .)
    SEMICOLON       reduce using rule 42 (sentence -> sentence7 .)


state 58

    (43) sentence -> sentence8 .

    RPARENT         reduce using rule 43 (sentence -> sentence8 .)
    NEW             reduce using rule 43 (sentence -> sentence8 .)
    VALUES          reduce using rule 43 (sentence -> sentence8 .)
    CASE            reduce using rule 43 (sentence -> sentence8 .)
    CALL            reduce using rule 43 (sentence -> sentence8 .)
    PRINTVALUES     reduce using rule 43 (sentence -> sentence8 .)
    ALTER           reduce using rule 43 (sentence -> sentence8 .)
    ALTERB          reduce using rule 43 (sentence -> sentence8 .)
    SIGNAL          reduce using rule 43 (sentence -> sentence8 .)
    VIEWSIGNAL      reduce using rule 43 (sentence -> sentence8 .)
    ID              reduce using rule 43 (sentence -> sentence8 .)
    ISTRUE          reduce using rule 43 (sentence -> sentence8 .)
    REPEAT          reduce using rule 43 (sentence -> sentence8 .)
    UNTIL           reduce using rule 43 (sentence -> sentence8 .)
    BREAK           reduce using rule 43 (sentence -> sentence8 .)
    SEMICOLON       reduce using rule 43 (sentence -> sentence8 .)


state 59

    (44) sentence -> sentence9 .

    RPARENT         reduce using rule 44 (sentence -> sentence9 .)
    NEW             reduce using rule 44 (sentence -> sentence9 .)
    VALUES          reduce using rule 44 (sentence -> sentence9 .)
    CASE            reduce using rule 44 (sentence -> sentence9 .)
    CALL            reduce using rule 44 (sentence -> sentence9 .)
    PRINTVALUES     reduce using rule 44 (sentence -> sentence9 .)
    ALTER           reduce using rule 44 (sentence -> sentence9 .)
    ALTERB          reduce using rule 44 (sentence -> sentence9 .)
    SIGNAL          reduce using rule 44 (sentence -> sentence9 .)
    VIEWSIGNAL      reduce using rule 44 (sentence -> sentence9 .)
    ID              reduce using rule 44 (sentence -> sentence9 .)
    ISTRUE          reduce using rule 44 (sentence -> sentence9 .)
    REPEAT          reduce using rule 44 (sentence -> sentence9 .)
    UNTIL           reduce using rule 44 (sentence -> sentence9 .)
    BREAK           reduce using rule 44 (sentence -> sentence9 .)
    SEMICOLON       reduce using rule 44 (sentence -> sentence9 .)


state 60

    (45) sentence -> sentence10 .

    RPARENT         reduce using rule 45 (sentence -> sentence10 .)
    NEW             reduce using rule 45 (sentence -> sentence10 .)
    VALUES          reduce using rule 45 (sentence -> sentence10 .)
    CASE            reduce using rule 45 (sentence -> sentence10 .)
    CALL            reduce using rule 45 (sentence -> sentence10 .)
    PRINTVALUES     reduce using rule 45 (sentence -> sentence10 .)
    ALTER           reduce using rule 45 (sentence -> sentence10 .)
    ALTERB          reduce using rule 45 (sentence -> sentence10 .)
    SIGNAL          reduce using rule 45 (sentence -> sentence10 .)
    VIEWSIGNAL      reduce using rule 45 (sentence -> sentence10 .)
    ID              reduce using rule 45 (sentence -> sentence10 .)
    ISTRUE          reduce using rule 45 (sentence -> sentence10 .)
    REPEAT          reduce using rule 45 (sentence -> sentence10 .)
    UNTIL           reduce using rule 45 (sentence -> sentence10 .)
    BREAK           reduce using rule 45 (sentence -> sentence10 .)
    SEMICOLON       reduce using rule 45 (sentence -> sentence10 .)


state 61

    (46) sentence -> sentence11 .

    RPARENT         reduce using rule 46 (sentence -> sentence11 .)
    NEW             reduce using rule 46 (sentence -> sentence11 .)
    VALUES          reduce using rule 46 (sentence -> sentence11 .)
    CASE            reduce using rule 46 (sentence -> sentence11 .)
    CALL            reduce using rule 46 (sentence -> sentence11 .)
    PRINTVALUES     reduce using rule 46 (sentence -> sentence11 .)
    ALTER           reduce using rule 46 (sentence -> sentence11 .)
    ALTERB          reduce using rule 46 (sentence -> sentence11 .)
    SIGNAL          reduce using rule 46 (sentence -> sentence11 .)
    VIEWSIGNAL      reduce using rule 46 (sentence -> sentence11 .)
    ID              reduce using rule 46 (sentence -> sentence11 .)
    ISTRUE          reduce using rule 46 (sentence -> sentence11 .)
    REPEAT          reduce using rule 46 (sentence -> sentence11 .)
    UNTIL           reduce using rule 46 (sentence -> sentence11 .)
    BREAK           reduce using rule 46 (sentence -> sentence11 .)
    SEMICOLON       reduce using rule 46 (sentence -> sentence11 .)


state 62

    (47) sentence -> sentence12 .

    RPARENT         reduce using rule 47 (sentence -> sentence12 .)
    NEW             reduce using rule 47 (sentence -> sentence12 .)
    VALUES          reduce using rule 47 (sentence -> sentence12 .)
    CASE            reduce using rule 47 (sentence -> sentence12 .)
    CALL            reduce using rule 47 (sentence -> sentence12 .)
    PRINTVALUES     reduce using rule 47 (sentence -> sentence12 .)
    ALTER           reduce using rule 47 (sentence -> sentence12 .)
    ALTERB          reduce using rule 47 (sentence -> sentence12 .)
    SIGNAL          reduce using rule 47 (sentence -> sentence12 .)
    VIEWSIGNAL      reduce using rule 47 (sentence -> sentence12 .)
    ID              reduce using rule 47 (sentence -> sentence12 .)
    ISTRUE          reduce using rule 47 (sentence -> sentence12 .)
    REPEAT          reduce using rule 47 (sentence -> sentence12 .)
    UNTIL           reduce using rule 47 (sentence -> sentence12 .)
    BREAK           reduce using rule 47 (sentence -> sentence12 .)
    SEMICOLON       reduce using rule 47 (sentence -> sentence12 .)


state 63

    (48) sentence -> isTrue .

    RPARENT         reduce using rule 48 (sentence -> isTrue .)
    NEW             reduce using rule 48 (sentence -> isTrue .)
    VALUES          reduce using rule 48 (sentence -> isTrue .)
    CASE            reduce using rule 48 (sentence -> isTrue .)
    CALL            reduce using rule 48 (sentence -> isTrue .)
    PRINTVALUES     reduce using rule 48 (sentence -> isTrue .)
    ALTER           reduce using rule 48 (sentence -> isTrue .)
    ALTERB          reduce using rule 48 (sentence -> isTrue .)
    SIGNAL          reduce using rule 48 (sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 48 (sentence -> isTrue .)
    ID              reduce using rule 48 (sentence -> isTrue .)
    ISTRUE          reduce using rule 48 (sentence -> isTrue .)
    REPEAT          reduce using rule 48 (sentence -> isTrue .)
    UNTIL           reduce using rule 48 (sentence -> isTrue .)
    BREAK           reduce using rule 48 (sentence -> isTrue .)
    SEMICOLON       reduce using rule 48 (sentence -> isTrue .)


state 64

    (49) sentence -> sentence14 .

    RPARENT         reduce using rule 49 (sentence -> sentence14 .)
    NEW             reduce using rule 49 (sentence -> sentence14 .)
    VALUES          reduce using rule 49 (sentence -> sentence14 .)
    CASE            reduce using rule 49 (sentence -> sentence14 .)
    CALL            reduce using rule 49 (sentence -> sentence14 .)
    PRINTVALUES     reduce using rule 49 (sentence -> sentence14 .)
    ALTER           reduce using rule 49 (sentence -> sentence14 .)
    ALTERB          reduce using rule 49 (sentence -> sentence14 .)
    SIGNAL          reduce using rule 49 (sentence -> sentence14 .)
    VIEWSIGNAL      reduce using rule 49 (sentence -> sentence14 .)
    ID              reduce using rule 49 (sentence -> sentence14 .)
    ISTRUE          reduce using rule 49 (sentence -> sentence14 .)
    REPEAT          reduce using rule 49 (sentence -> sentence14 .)
    UNTIL           reduce using rule 49 (sentence -> sentence14 .)
    BREAK           reduce using rule 49 (sentence -> sentence14 .)
    SEMICOLON       reduce using rule 49 (sentence -> sentence14 .)


state 65

    (50) sentence -> sentence15 .

    RPARENT         reduce using rule 50 (sentence -> sentence15 .)
    NEW             reduce using rule 50 (sentence -> sentence15 .)
    VALUES          reduce using rule 50 (sentence -> sentence15 .)
    CASE            reduce using rule 50 (sentence -> sentence15 .)
    CALL            reduce using rule 50 (sentence -> sentence15 .)
    PRINTVALUES     reduce using rule 50 (sentence -> sentence15 .)
    ALTER           reduce using rule 50 (sentence -> sentence15 .)
    ALTERB          reduce using rule 50 (sentence -> sentence15 .)
    SIGNAL          reduce using rule 50 (sentence -> sentence15 .)
    VIEWSIGNAL      reduce using rule 50 (sentence -> sentence15 .)
    ID              reduce using rule 50 (sentence -> sentence15 .)
    ISTRUE          reduce using rule 50 (sentence -> sentence15 .)
    REPEAT          reduce using rule 50 (sentence -> sentence15 .)
    UNTIL           reduce using rule 50 (sentence -> sentence15 .)
    BREAK           reduce using rule 50 (sentence -> sentence15 .)
    SEMICOLON       reduce using rule 50 (sentence -> sentence15 .)


state 66

    (51) sentence -> empty .

    RPARENT         reduce using rule 51 (sentence -> empty .)
    NEW             reduce using rule 51 (sentence -> empty .)
    VALUES          reduce using rule 51 (sentence -> empty .)
    CASE            reduce using rule 51 (sentence -> empty .)
    CALL            reduce using rule 51 (sentence -> empty .)
    PRINTVALUES     reduce using rule 51 (sentence -> empty .)
    ALTER           reduce using rule 51 (sentence -> empty .)
    ALTERB          reduce using rule 51 (sentence -> empty .)
    SIGNAL          reduce using rule 51 (sentence -> empty .)
    VIEWSIGNAL      reduce using rule 51 (sentence -> empty .)
    ID              reduce using rule 51 (sentence -> empty .)
    ISTRUE          reduce using rule 51 (sentence -> empty .)
    REPEAT          reduce using rule 51 (sentence -> empty .)
    UNTIL           reduce using rule 51 (sentence -> empty .)
    BREAK           reduce using rule 51 (sentence -> empty .)
    SEMICOLON       reduce using rule 51 (sentence -> empty .)


state 67

    (52) local_variable -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 91


state 68

    (7) master -> MASTER LPARENT master_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 92


state 69

    (9) master_sentences -> master_sentences master_sentence .

    RPARENT         reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    NEW             reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    VALUES          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    CASE            reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    CALL            reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    PRINTVALUES     reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ALTER           reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ALTERB          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    SIGNAL          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    VIEWSIGNAL      reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ID              reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ISTRUE          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    REPEAT          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    UNTIL           reduce using rule 9 (master_sentences -> master_sentences master_sentence .)


state 70

    (29) master_var -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (30) master_var -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 93


state 71

    (73) sentence7 -> ID MAQ . INTEGER

    INTEGER         shift and go to state 94


state 72

    (74) sentence8 -> ID MEQ . INTEGER

    INTEGER         shift and go to state 95


state 73

    (75) sentence9 -> ID EQUAL . INTEGER

    INTEGER         shift and go to state 96


state 74

    (76) sentence10 -> ID DIFFERENT . INTEGER

    INTEGER         shift and go to state 97


state 75

    (77) sentence11 -> ID MEQEQUAL . INTEGER

    INTEGER         shift and go to state 98


state 76

    (78) sentence12 -> ID MAQEQUAL . INTEGER

    INTEGER         shift and go to state 99


state 77

    (54) values -> VALUES LPARENT . ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> VALUES LPARENT . ID COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 100


state 78

    (84) case -> CASE expression . recursive_conditions SEMICOLON
    (86) recursive_conditions -> . recursive_condition
    (87) recursive_conditions -> . recursive_conditions recursive_condition
    (88) recursive_condition -> . condition LPARENT sentences RPARENT
    (90) condition -> . WHEN INTEGER THEN

    WHEN            shift and go to state 104

    recursive_conditions           shift and go to state 101
    recursive_condition            shift and go to state 102
    condition                      shift and go to state 103

state 79

    (89) expression -> ID .

    WHEN            reduce using rule 89 (expression -> ID .)


state 80

    (56) call -> CALL LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 105


state 81

    (57) print_values -> PRINTVALUES LPARENT . printable_sentences RPARENT SEMICOLON
    (58) printable_sentences -> . printable_sentence_var
    (59) printable_sentences -> . printable_sentence_string
    (60) printable_sentences -> . printable_sentence_var PLUS printable_sentence_var
    (61) printable_sentences -> . printable_sentence_string PLUS printable_sentence_string
    (62) printable_sentences -> . printable_sentence_var PLUS printable_sentence_string
    (63) printable_sentences -> . printable_sentence_string PLUS printable_sentence_var
    (64) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_var
    (65) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_string
    (66) printable_sentence_var -> . ID
    (67) printable_sentence_string -> . STRING

    PLUS            shift and go to state 109
    ID              shift and go to state 110
    STRING          shift and go to state 111

    printable_sentences            shift and go to state 106
    printable_sentence_var         shift and go to state 107
    printable_sentence_string      shift and go to state 108

state 82

    (68) alter -> ALTER LPARENT . ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> ALTER LPARENT . ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> ALTER LPARENT . ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> ALTER LPARENT . ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    ID              shift and go to state 112


state 83

    (72) alterB -> ALTERB LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 113


state 84

    (91) signal -> SIGNAL LPARENT . INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> SIGNAL LPARENT . ID COMA INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 114
    ID              shift and go to state 115


state 85

    (93) viewsignal -> VIEWSIGNAL LPARENT . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 116


state 86

    (79) isTrue -> ISTRUE LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 117


state 87

    (80) sentence14 -> REPEAT LPARENT . sentences BREAK RPARENT SEMICOLON
    (31) sentences -> . sentence
    (32) sentences -> . sentences sentence
    (33) sentence -> . local_variable
    (34) sentence -> . values
    (35) sentence -> . case
    (36) sentence -> . call
    (37) sentence -> . print_values
    (38) sentence -> . alter
    (39) sentence -> . alterB
    (40) sentence -> . signal
    (41) sentence -> . viewsignal
    (42) sentence -> . sentence7
    (43) sentence -> . sentence8
    (44) sentence -> . sentence9
    (45) sentence -> . sentence10
    (46) sentence -> . sentence11
    (47) sentence -> . sentence12
    (48) sentence -> . isTrue
    (49) sentence -> . sentence14
    (50) sentence -> . sentence15
    (51) sentence -> . empty
    (52) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    NEW             shift and go to state 67
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    BREAK           reduce using rule 94 (empty -> .)

  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]

    sentences                      shift and go to state 118
    sentence                       shift and go to state 47
    local_variable                 shift and go to state 48
    values                         shift and go to state 49
    case                           shift and go to state 50
    call                           shift and go to state 51
    print_values                   shift and go to state 52
    alter                          shift and go to state 53
    alterB                         shift and go to state 54
    signal                         shift and go to state 55
    viewsignal                     shift and go to state 56
    sentence7                      shift and go to state 57
    sentence8                      shift and go to state 58
    sentence9                      shift and go to state 59
    sentence10                     shift and go to state 60
    sentence11                     shift and go to state 61
    sentence12                     shift and go to state 62
    isTrue                         shift and go to state 63
    sentence14                     shift and go to state 64
    sentence15                     shift and go to state 65
    empty                          shift and go to state 66

state 88

    (81) sentence15 -> UNTIL LPARENT . instructions RPARENT sentences SEMICOLON
    (82) instructions -> . sentence
    (83) instructions -> . sentence sentences
    (33) sentence -> . local_variable
    (34) sentence -> . values
    (35) sentence -> . case
    (36) sentence -> . call
    (37) sentence -> . print_values
    (38) sentence -> . alter
    (39) sentence -> . alterB
    (40) sentence -> . signal
    (41) sentence -> . viewsignal
    (42) sentence -> . sentence7
    (43) sentence -> . sentence8
    (44) sentence -> . sentence9
    (45) sentence -> . sentence10
    (46) sentence -> . sentence11
    (47) sentence -> . sentence12
    (48) sentence -> . isTrue
    (49) sentence -> . sentence14
    (50) sentence -> . sentence15
    (51) sentence -> . empty
    (52) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    NEW             shift and go to state 67
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    RPARENT         reduce using rule 94 (empty -> .)

  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]

    instructions                   shift and go to state 119
    sentence                       shift and go to state 120
    local_variable                 shift and go to state 48
    values                         shift and go to state 49
    case                           shift and go to state 50
    call                           shift and go to state 51
    print_values                   shift and go to state 52
    alter                          shift and go to state 53
    alterB                         shift and go to state 54
    signal                         shift and go to state 55
    viewsignal                     shift and go to state 56
    sentence7                      shift and go to state 57
    sentence8                      shift and go to state 58
    sentence9                      shift and go to state 59
    sentence10                     shift and go to state 60
    sentence11                     shift and go to state 61
    sentence12                     shift and go to state 62
    isTrue                         shift and go to state 63
    sentence14                     shift and go to state 64
    sentence15                     shift and go to state 65
    empty                          shift and go to state 66

state 89

    (6) procedure -> declare_procedure LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 121


state 90

    (32) sentences -> sentences sentence .

    RPARENT         reduce using rule 32 (sentences -> sentences sentence .)
    NEW             reduce using rule 32 (sentences -> sentences sentence .)
    VALUES          reduce using rule 32 (sentences -> sentences sentence .)
    CASE            reduce using rule 32 (sentences -> sentences sentence .)
    CALL            reduce using rule 32 (sentences -> sentences sentence .)
    PRINTVALUES     reduce using rule 32 (sentences -> sentences sentence .)
    ALTER           reduce using rule 32 (sentences -> sentences sentence .)
    ALTERB          reduce using rule 32 (sentences -> sentences sentence .)
    SIGNAL          reduce using rule 32 (sentences -> sentences sentence .)
    VIEWSIGNAL      reduce using rule 32 (sentences -> sentences sentence .)
    ID              reduce using rule 32 (sentences -> sentences sentence .)
    ISTRUE          reduce using rule 32 (sentences -> sentences sentence .)
    REPEAT          reduce using rule 32 (sentences -> sentences sentence .)
    UNTIL           reduce using rule 32 (sentences -> sentences sentence .)
    BREAK           reduce using rule 32 (sentences -> sentences sentence .)
    SEMICOLON       reduce using rule 32 (sentences -> sentences sentence .)


state 91

    (52) local_variable -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 122


state 92

    (7) master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .

    PROC            reduce using rule 7 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)
    $end            reduce using rule 7 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)


state 93

    (29) master_var -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (30) master_var -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 123


state 94

    (73) sentence7 -> ID MAQ INTEGER .

    RPARENT         reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    NEW             reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    VALUES          reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    CASE            reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    CALL            reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    PRINTVALUES     reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    ALTER           reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    ALTERB          reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    SIGNAL          reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    VIEWSIGNAL      reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    ID              reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    ISTRUE          reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    REPEAT          reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    UNTIL           reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    BREAK           reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)
    SEMICOLON       reduce using rule 73 (sentence7 -> ID MAQ INTEGER .)


state 95

    (74) sentence8 -> ID MEQ INTEGER .

    RPARENT         reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    NEW             reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    VALUES          reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    CASE            reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    CALL            reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    PRINTVALUES     reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    ALTER           reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    ALTERB          reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    SIGNAL          reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    VIEWSIGNAL      reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    ID              reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    ISTRUE          reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    REPEAT          reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    UNTIL           reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    BREAK           reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)
    SEMICOLON       reduce using rule 74 (sentence8 -> ID MEQ INTEGER .)


state 96

    (75) sentence9 -> ID EQUAL INTEGER .

    RPARENT         reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    NEW             reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    VALUES          reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    CASE            reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    CALL            reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    PRINTVALUES     reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    ALTER           reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    ALTERB          reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    SIGNAL          reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    ID              reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    ISTRUE          reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    REPEAT          reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    UNTIL           reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    BREAK           reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)
    SEMICOLON       reduce using rule 75 (sentence9 -> ID EQUAL INTEGER .)


state 97

    (76) sentence10 -> ID DIFFERENT INTEGER .

    RPARENT         reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    NEW             reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    VALUES          reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    CASE            reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    CALL            reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    PRINTVALUES     reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    ALTER           reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    ALTERB          reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    SIGNAL          reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    VIEWSIGNAL      reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    ID              reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    ISTRUE          reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    REPEAT          reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    UNTIL           reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    BREAK           reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)
    SEMICOLON       reduce using rule 76 (sentence10 -> ID DIFFERENT INTEGER .)


state 98

    (77) sentence11 -> ID MEQEQUAL INTEGER .

    RPARENT         reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    NEW             reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    VALUES          reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    CASE            reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    CALL            reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    ALTER           reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    ALTERB          reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    SIGNAL          reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    ID              reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    ISTRUE          reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    REPEAT          reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    UNTIL           reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    BREAK           reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)
    SEMICOLON       reduce using rule 77 (sentence11 -> ID MEQEQUAL INTEGER .)


state 99

    (78) sentence12 -> ID MAQEQUAL INTEGER .

    RPARENT         reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    NEW             reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    VALUES          reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    CASE            reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    CALL            reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    ALTER           reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    ALTERB          reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    SIGNAL          reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    ID              reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    ISTRUE          reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    REPEAT          reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    UNTIL           reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    BREAK           reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)
    SEMICOLON       reduce using rule 78 (sentence12 -> ID MAQEQUAL INTEGER .)


state 100

    (54) values -> VALUES LPARENT ID . COMA INTEGER RPARENT SEMICOLON
    (55) values -> VALUES LPARENT ID . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 124


state 101

    (84) case -> CASE expression recursive_conditions . SEMICOLON
    (87) recursive_conditions -> recursive_conditions . recursive_condition
    (88) recursive_condition -> . condition LPARENT sentences RPARENT
    (90) condition -> . WHEN INTEGER THEN

    SEMICOLON       shift and go to state 125
    WHEN            shift and go to state 104

    recursive_condition            shift and go to state 126
    condition                      shift and go to state 103

state 102

    (86) recursive_conditions -> recursive_condition .

    SEMICOLON       reduce using rule 86 (recursive_conditions -> recursive_condition .)
    WHEN            reduce using rule 86 (recursive_conditions -> recursive_condition .)


state 103

    (88) recursive_condition -> condition . LPARENT sentences RPARENT

    LPARENT         shift and go to state 127


state 104

    (90) condition -> WHEN . INTEGER THEN

    INTEGER         shift and go to state 128


state 105

    (56) call -> CALL LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 129


state 106

    (57) print_values -> PRINTVALUES LPARENT printable_sentences . RPARENT SEMICOLON

    RPARENT         shift and go to state 130


state 107

    (58) printable_sentences -> printable_sentence_var .
    (60) printable_sentences -> printable_sentence_var . PLUS printable_sentence_var
    (62) printable_sentences -> printable_sentence_var . PLUS printable_sentence_string

  ! shift/reduce conflict for PLUS resolved as shift
    RPARENT         reduce using rule 58 (printable_sentences -> printable_sentence_var .)
    PLUS            shift and go to state 131

  ! PLUS            [ reduce using rule 58 (printable_sentences -> printable_sentence_var .) ]


state 108

    (59) printable_sentences -> printable_sentence_string .
    (61) printable_sentences -> printable_sentence_string . PLUS printable_sentence_string
    (63) printable_sentences -> printable_sentence_string . PLUS printable_sentence_var

  ! shift/reduce conflict for PLUS resolved as shift
    RPARENT         reduce using rule 59 (printable_sentences -> printable_sentence_string .)
    PLUS            shift and go to state 132

  ! PLUS            [ reduce using rule 59 (printable_sentences -> printable_sentence_string .) ]


state 109

    (64) printable_sentences -> PLUS . printable_sentences PLUS printable_sentence_var
    (65) printable_sentences -> PLUS . printable_sentences PLUS printable_sentence_string
    (58) printable_sentences -> . printable_sentence_var
    (59) printable_sentences -> . printable_sentence_string
    (60) printable_sentences -> . printable_sentence_var PLUS printable_sentence_var
    (61) printable_sentences -> . printable_sentence_string PLUS printable_sentence_string
    (62) printable_sentences -> . printable_sentence_var PLUS printable_sentence_string
    (63) printable_sentences -> . printable_sentence_string PLUS printable_sentence_var
    (64) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_var
    (65) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_string
    (66) printable_sentence_var -> . ID
    (67) printable_sentence_string -> . STRING

    PLUS            shift and go to state 109
    ID              shift and go to state 110
    STRING          shift and go to state 111

    printable_sentences            shift and go to state 133
    printable_sentence_var         shift and go to state 107
    printable_sentence_string      shift and go to state 108

state 110

    (66) printable_sentence_var -> ID .

    PLUS            reduce using rule 66 (printable_sentence_var -> ID .)
    RPARENT         reduce using rule 66 (printable_sentence_var -> ID .)


state 111

    (67) printable_sentence_string -> STRING .

    PLUS            reduce using rule 67 (printable_sentence_string -> STRING .)
    RPARENT         reduce using rule 67 (printable_sentence_string -> STRING .)


state 112

    (68) alter -> ALTER LPARENT ID . COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> ALTER LPARENT ID . COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> ALTER LPARENT ID . COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> ALTER LPARENT ID . COMA DIV COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 134


state 113

    (72) alterB -> ALTERB LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 135


state 114

    (91) signal -> SIGNAL LPARENT INTEGER . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 136


state 115

    (92) signal -> SIGNAL LPARENT ID . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 137


state 116

    (93) viewsignal -> VIEWSIGNAL LPARENT INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 138


state 117

    (79) isTrue -> ISTRUE LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 139


state 118

    (80) sentence14 -> REPEAT LPARENT sentences . BREAK RPARENT SEMICOLON
    (32) sentences -> sentences . sentence
    (33) sentence -> . local_variable
    (34) sentence -> . values
    (35) sentence -> . case
    (36) sentence -> . call
    (37) sentence -> . print_values
    (38) sentence -> . alter
    (39) sentence -> . alterB
    (40) sentence -> . signal
    (41) sentence -> . viewsignal
    (42) sentence -> . sentence7
    (43) sentence -> . sentence8
    (44) sentence -> . sentence9
    (45) sentence -> . sentence10
    (46) sentence -> . sentence11
    (47) sentence -> . sentence12
    (48) sentence -> . isTrue
    (49) sentence -> . sentence14
    (50) sentence -> . sentence15
    (51) sentence -> . empty
    (52) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    BREAK           shift and go to state 140
    NEW             shift and go to state 67
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45

  ! BREAK           [ reduce using rule 94 (empty -> .) ]
  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]

    sentence                       shift and go to state 90
    local_variable                 shift and go to state 48
    values                         shift and go to state 49
    case                           shift and go to state 50
    call                           shift and go to state 51
    print_values                   shift and go to state 52
    alter                          shift and go to state 53
    alterB                         shift and go to state 54
    signal                         shift and go to state 55
    viewsignal                     shift and go to state 56
    sentence7                      shift and go to state 57
    sentence8                      shift and go to state 58
    sentence9                      shift and go to state 59
    sentence10                     shift and go to state 60
    sentence11                     shift and go to state 61
    sentence12                     shift and go to state 62
    isTrue                         shift and go to state 63
    sentence14                     shift and go to state 64
    sentence15                     shift and go to state 65
    empty                          shift and go to state 66

state 119

    (81) sentence15 -> UNTIL LPARENT instructions . RPARENT sentences SEMICOLON

    RPARENT         shift and go to state 141


state 120

    (82) instructions -> sentence .
    (83) instructions -> sentence . sentences
    (31) sentences -> . sentence
    (32) sentences -> . sentences sentence
    (33) sentence -> . local_variable
    (34) sentence -> . values
    (35) sentence -> . case
    (36) sentence -> . call
    (37) sentence -> . print_values
    (38) sentence -> . alter
    (39) sentence -> . alterB
    (40) sentence -> . signal
    (41) sentence -> . viewsignal
    (42) sentence -> . sentence7
    (43) sentence -> . sentence8
    (44) sentence -> . sentence9
    (45) sentence -> . sentence10
    (46) sentence -> . sentence11
    (47) sentence -> . sentence12
    (48) sentence -> . isTrue
    (49) sentence -> . sentence14
    (50) sentence -> . sentence15
    (51) sentence -> . empty
    (52) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! reduce/reduce conflict for RPARENT resolved using rule 82 (instructions -> sentence .)
    RPARENT         reduce using rule 82 (instructions -> sentence .)
    NEW             shift and go to state 67
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45

  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]
  ! RPARENT         [ reduce using rule 94 (empty -> .) ]

    sentence                       shift and go to state 47
    sentences                      shift and go to state 142
    local_variable                 shift and go to state 48
    values                         shift and go to state 49
    case                           shift and go to state 50
    call                           shift and go to state 51
    print_values                   shift and go to state 52
    alter                          shift and go to state 53
    alterB                         shift and go to state 54
    signal                         shift and go to state 55
    viewsignal                     shift and go to state 56
    sentence7                      shift and go to state 57
    sentence8                      shift and go to state 58
    sentence9                      shift and go to state 59
    sentence10                     shift and go to state 60
    sentence11                     shift and go to state 61
    sentence12                     shift and go to state 62
    isTrue                         shift and go to state 63
    sentence14                     shift and go to state 64
    sentence15                     shift and go to state 65
    empty                          shift and go to state 66

state 121

    (6) procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .

    PROC            reduce using rule 6 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)
    $end            reduce using rule 6 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)


state 122

    (52) local_variable -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 143


state 123

    (29) master_var -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (30) master_var -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON

    TYPE            shift and go to state 144


state 124

    (54) values -> VALUES LPARENT ID COMA . INTEGER RPARENT SEMICOLON
    (55) values -> VALUES LPARENT ID COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 145
    BOOL            shift and go to state 146


state 125

    (84) case -> CASE expression recursive_conditions SEMICOLON .

    RPARENT         reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    NEW             reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    VALUES          reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    CASE            reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    CALL            reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    PRINTVALUES     reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    ALTER           reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    ALTERB          reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    SIGNAL          reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    VIEWSIGNAL      reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    ID              reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    ISTRUE          reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    REPEAT          reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    UNTIL           reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    BREAK           reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)
    SEMICOLON       reduce using rule 84 (case -> CASE expression recursive_conditions SEMICOLON .)


state 126

    (87) recursive_conditions -> recursive_conditions recursive_condition .

    SEMICOLON       reduce using rule 87 (recursive_conditions -> recursive_conditions recursive_condition .)
    WHEN            reduce using rule 87 (recursive_conditions -> recursive_conditions recursive_condition .)


state 127

    (88) recursive_condition -> condition LPARENT . sentences RPARENT
    (31) sentences -> . sentence
    (32) sentences -> . sentences sentence
    (33) sentence -> . local_variable
    (34) sentence -> . values
    (35) sentence -> . case
    (36) sentence -> . call
    (37) sentence -> . print_values
    (38) sentence -> . alter
    (39) sentence -> . alterB
    (40) sentence -> . signal
    (41) sentence -> . viewsignal
    (42) sentence -> . sentence7
    (43) sentence -> . sentence8
    (44) sentence -> . sentence9
    (45) sentence -> . sentence10
    (46) sentence -> . sentence11
    (47) sentence -> . sentence12
    (48) sentence -> . isTrue
    (49) sentence -> . sentence14
    (50) sentence -> . sentence15
    (51) sentence -> . empty
    (52) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    NEW             shift and go to state 67
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    RPARENT         reduce using rule 94 (empty -> .)

  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]

    sentences                      shift and go to state 147
    sentence                       shift and go to state 47
    local_variable                 shift and go to state 48
    values                         shift and go to state 49
    case                           shift and go to state 50
    call                           shift and go to state 51
    print_values                   shift and go to state 52
    alter                          shift and go to state 53
    alterB                         shift and go to state 54
    signal                         shift and go to state 55
    viewsignal                     shift and go to state 56
    sentence7                      shift and go to state 57
    sentence8                      shift and go to state 58
    sentence9                      shift and go to state 59
    sentence10                     shift and go to state 60
    sentence11                     shift and go to state 61
    sentence12                     shift and go to state 62
    isTrue                         shift and go to state 63
    sentence14                     shift and go to state 64
    sentence15                     shift and go to state 65
    empty                          shift and go to state 66

state 128

    (90) condition -> WHEN INTEGER . THEN

    THEN            shift and go to state 148


state 129

    (56) call -> CALL LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 149


state 130

    (57) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 150


state 131

    (60) printable_sentences -> printable_sentence_var PLUS . printable_sentence_var
    (62) printable_sentences -> printable_sentence_var PLUS . printable_sentence_string
    (66) printable_sentence_var -> . ID
    (67) printable_sentence_string -> . STRING

    ID              shift and go to state 110
    STRING          shift and go to state 111

    printable_sentence_var         shift and go to state 151
    printable_sentence_string      shift and go to state 152

state 132

    (61) printable_sentences -> printable_sentence_string PLUS . printable_sentence_string
    (63) printable_sentences -> printable_sentence_string PLUS . printable_sentence_var
    (67) printable_sentence_string -> . STRING
    (66) printable_sentence_var -> . ID

    STRING          shift and go to state 111
    ID              shift and go to state 110

    printable_sentence_string      shift and go to state 153
    printable_sentence_var         shift and go to state 154

state 133

    (64) printable_sentences -> PLUS printable_sentences . PLUS printable_sentence_var
    (65) printable_sentences -> PLUS printable_sentences . PLUS printable_sentence_string

    PLUS            shift and go to state 155


state 134

    (68) alter -> ALTER LPARENT ID COMA . ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> ALTER LPARENT ID COMA . SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> ALTER LPARENT ID COMA . MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> ALTER LPARENT ID COMA . DIV COMA INTEGER RPARENT SEMICOLON

    ADD             shift and go to state 156
    SUB             shift and go to state 157
    MUL             shift and go to state 158
    DIV             shift and go to state 159


state 135

    (72) alterB -> ALTERB LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 160


state 136

    (91) signal -> SIGNAL LPARENT INTEGER COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 161


state 137

    (92) signal -> SIGNAL LPARENT ID COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 162


state 138

    (93) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 163


state 139

    (79) isTrue -> ISTRUE LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 164


state 140

    (80) sentence14 -> REPEAT LPARENT sentences BREAK . RPARENT SEMICOLON

    RPARENT         shift and go to state 165


state 141

    (81) sentence15 -> UNTIL LPARENT instructions RPARENT . sentences SEMICOLON
    (31) sentences -> . sentence
    (32) sentences -> . sentences sentence
    (33) sentence -> . local_variable
    (34) sentence -> . values
    (35) sentence -> . case
    (36) sentence -> . call
    (37) sentence -> . print_values
    (38) sentence -> . alter
    (39) sentence -> . alterB
    (40) sentence -> . signal
    (41) sentence -> . viewsignal
    (42) sentence -> . sentence7
    (43) sentence -> . sentence8
    (44) sentence -> . sentence9
    (45) sentence -> . sentence10
    (46) sentence -> . sentence11
    (47) sentence -> . sentence12
    (48) sentence -> . isTrue
    (49) sentence -> . sentence14
    (50) sentence -> . sentence15
    (51) sentence -> . empty
    (52) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    NEW             shift and go to state 67
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45
    SEMICOLON       reduce using rule 94 (empty -> .)

  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]

    sentences                      shift and go to state 166
    sentence                       shift and go to state 47
    local_variable                 shift and go to state 48
    values                         shift and go to state 49
    case                           shift and go to state 50
    call                           shift and go to state 51
    print_values                   shift and go to state 52
    alter                          shift and go to state 53
    alterB                         shift and go to state 54
    signal                         shift and go to state 55
    viewsignal                     shift and go to state 56
    sentence7                      shift and go to state 57
    sentence8                      shift and go to state 58
    sentence9                      shift and go to state 59
    sentence10                     shift and go to state 60
    sentence11                     shift and go to state 61
    sentence12                     shift and go to state 62
    isTrue                         shift and go to state 63
    sentence14                     shift and go to state 64
    sentence15                     shift and go to state 65
    empty                          shift and go to state 66

state 142

    (83) instructions -> sentence sentences .
    (32) sentences -> sentences . sentence
    (33) sentence -> . local_variable
    (34) sentence -> . values
    (35) sentence -> . case
    (36) sentence -> . call
    (37) sentence -> . print_values
    (38) sentence -> . alter
    (39) sentence -> . alterB
    (40) sentence -> . signal
    (41) sentence -> . viewsignal
    (42) sentence -> . sentence7
    (43) sentence -> . sentence8
    (44) sentence -> . sentence9
    (45) sentence -> . sentence10
    (46) sentence -> . sentence11
    (47) sentence -> . sentence12
    (48) sentence -> . isTrue
    (49) sentence -> . sentence14
    (50) sentence -> . sentence15
    (51) sentence -> . empty
    (52) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! reduce/reduce conflict for RPARENT resolved using rule 83 (instructions -> sentence sentences .)
    RPARENT         reduce using rule 83 (instructions -> sentence sentences .)
    NEW             shift and go to state 67
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45

  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]
  ! RPARENT         [ reduce using rule 94 (empty -> .) ]

    sentence                       shift and go to state 90
    local_variable                 shift and go to state 48
    values                         shift and go to state 49
    case                           shift and go to state 50
    call                           shift and go to state 51
    print_values                   shift and go to state 52
    alter                          shift and go to state 53
    alterB                         shift and go to state 54
    signal                         shift and go to state 55
    viewsignal                     shift and go to state 56
    sentence7                      shift and go to state 57
    sentence8                      shift and go to state 58
    sentence9                      shift and go to state 59
    sentence10                     shift and go to state 60
    sentence11                     shift and go to state 61
    sentence12                     shift and go to state 62
    isTrue                         shift and go to state 63
    sentence14                     shift and go to state 64
    sentence15                     shift and go to state 65
    empty                          shift and go to state 66

state 143

    (52) local_variable -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON

    TYPE            shift and go to state 167


state 144

    (29) master_var -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (30) master_var -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 168


state 145

    (54) values -> VALUES LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 169


state 146

    (55) values -> VALUES LPARENT ID COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 170


state 147

    (88) recursive_condition -> condition LPARENT sentences . RPARENT
    (32) sentences -> sentences . sentence
    (33) sentence -> . local_variable
    (34) sentence -> . values
    (35) sentence -> . case
    (36) sentence -> . call
    (37) sentence -> . print_values
    (38) sentence -> . alter
    (39) sentence -> . alterB
    (40) sentence -> . signal
    (41) sentence -> . viewsignal
    (42) sentence -> . sentence7
    (43) sentence -> . sentence8
    (44) sentence -> . sentence9
    (45) sentence -> . sentence10
    (46) sentence -> . sentence11
    (47) sentence -> . sentence12
    (48) sentence -> . isTrue
    (49) sentence -> . sentence14
    (50) sentence -> . sentence15
    (51) sentence -> . empty
    (52) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    RPARENT         shift and go to state 171
    NEW             shift and go to state 67
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45

  ! RPARENT         [ reduce using rule 94 (empty -> .) ]
  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]

    sentence                       shift and go to state 90
    local_variable                 shift and go to state 48
    values                         shift and go to state 49
    case                           shift and go to state 50
    call                           shift and go to state 51
    print_values                   shift and go to state 52
    alter                          shift and go to state 53
    alterB                         shift and go to state 54
    signal                         shift and go to state 55
    viewsignal                     shift and go to state 56
    sentence7                      shift and go to state 57
    sentence8                      shift and go to state 58
    sentence9                      shift and go to state 59
    sentence10                     shift and go to state 60
    sentence11                     shift and go to state 61
    sentence12                     shift and go to state 62
    isTrue                         shift and go to state 63
    sentence14                     shift and go to state 64
    sentence15                     shift and go to state 65
    empty                          shift and go to state 66

state 148

    (90) condition -> WHEN INTEGER THEN .

    LPARENT         reduce using rule 90 (condition -> WHEN INTEGER THEN .)


state 149

    (56) call -> CALL LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    REPEAT          reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    UNTIL           reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    BREAK           reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 56 (call -> CALL LPARENT ID RPARENT SEMICOLON .)


state 150

    (57) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .

    RPARENT         reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VALUES          reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CASE            reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CALL            reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTER           reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTERB          reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ID              reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    REPEAT          reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    UNTIL           reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    BREAK           reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 57 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)


state 151

    (60) printable_sentences -> printable_sentence_var PLUS printable_sentence_var .

    RPARENT         reduce using rule 60 (printable_sentences -> printable_sentence_var PLUS printable_sentence_var .)
    PLUS            reduce using rule 60 (printable_sentences -> printable_sentence_var PLUS printable_sentence_var .)


state 152

    (62) printable_sentences -> printable_sentence_var PLUS printable_sentence_string .

    RPARENT         reduce using rule 62 (printable_sentences -> printable_sentence_var PLUS printable_sentence_string .)
    PLUS            reduce using rule 62 (printable_sentences -> printable_sentence_var PLUS printable_sentence_string .)


state 153

    (61) printable_sentences -> printable_sentence_string PLUS printable_sentence_string .

    RPARENT         reduce using rule 61 (printable_sentences -> printable_sentence_string PLUS printable_sentence_string .)
    PLUS            reduce using rule 61 (printable_sentences -> printable_sentence_string PLUS printable_sentence_string .)


state 154

    (63) printable_sentences -> printable_sentence_string PLUS printable_sentence_var .

    RPARENT         reduce using rule 63 (printable_sentences -> printable_sentence_string PLUS printable_sentence_var .)
    PLUS            reduce using rule 63 (printable_sentences -> printable_sentence_string PLUS printable_sentence_var .)


state 155

    (64) printable_sentences -> PLUS printable_sentences PLUS . printable_sentence_var
    (65) printable_sentences -> PLUS printable_sentences PLUS . printable_sentence_string
    (66) printable_sentence_var -> . ID
    (67) printable_sentence_string -> . STRING

    ID              shift and go to state 110
    STRING          shift and go to state 111

    printable_sentence_var         shift and go to state 172
    printable_sentence_string      shift and go to state 173

state 156

    (68) alter -> ALTER LPARENT ID COMA ADD . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 174


state 157

    (69) alter -> ALTER LPARENT ID COMA SUB . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 175


state 158

    (70) alter -> ALTER LPARENT ID COMA MUL . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 176


state 159

    (71) alter -> ALTER LPARENT ID COMA DIV . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 177


state 160

    (72) alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    REPEAT          reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    UNTIL           reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    BREAK           reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 72 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)


state 161

    (91) signal -> SIGNAL LPARENT INTEGER COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 178


state 162

    (92) signal -> SIGNAL LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 179


state 163

    (93) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 93 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)


state 164

    (79) isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    REPEAT          reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    UNTIL           reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    BREAK           reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 79 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)


state 165

    (80) sentence14 -> REPEAT LPARENT sentences BREAK RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 180


state 166

    (81) sentence15 -> UNTIL LPARENT instructions RPARENT sentences . SEMICOLON
    (32) sentences -> sentences . sentence
    (33) sentence -> . local_variable
    (34) sentence -> . values
    (35) sentence -> . case
    (36) sentence -> . call
    (37) sentence -> . print_values
    (38) sentence -> . alter
    (39) sentence -> . alterB
    (40) sentence -> . signal
    (41) sentence -> . viewsignal
    (42) sentence -> . sentence7
    (43) sentence -> . sentence8
    (44) sentence -> . sentence9
    (45) sentence -> . sentence10
    (46) sentence -> . sentence11
    (47) sentence -> . sentence12
    (48) sentence -> . isTrue
    (49) sentence -> . sentence14
    (50) sentence -> . sentence15
    (51) sentence -> . empty
    (52) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (54) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (55) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (84) case -> . CASE expression recursive_conditions SEMICOLON
    (56) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (57) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (72) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (91) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (92) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (93) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (73) sentence7 -> . ID MAQ INTEGER
    (74) sentence8 -> . ID MEQ INTEGER
    (75) sentence9 -> . ID EQUAL INTEGER
    (76) sentence10 -> . ID DIFFERENT INTEGER
    (77) sentence11 -> . ID MEQEQUAL INTEGER
    (78) sentence12 -> . ID MAQEQUAL INTEGER
    (79) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (80) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (81) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (94) empty -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    SEMICOLON       shift and go to state 181
    NEW             shift and go to state 67
    VALUES          shift and go to state 35
    CASE            shift and go to state 36
    CALL            shift and go to state 37
    PRINTVALUES     shift and go to state 38
    ALTER           shift and go to state 39
    ALTERB          shift and go to state 40
    SIGNAL          shift and go to state 41
    VIEWSIGNAL      shift and go to state 42
    ID              shift and go to state 34
    ISTRUE          shift and go to state 43
    REPEAT          shift and go to state 44
    UNTIL           shift and go to state 45

  ! SEMICOLON       [ reduce using rule 94 (empty -> .) ]
  ! NEW             [ reduce using rule 94 (empty -> .) ]
  ! VALUES          [ reduce using rule 94 (empty -> .) ]
  ! CASE            [ reduce using rule 94 (empty -> .) ]
  ! CALL            [ reduce using rule 94 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 94 (empty -> .) ]
  ! ALTER           [ reduce using rule 94 (empty -> .) ]
  ! ALTERB          [ reduce using rule 94 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 94 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 94 (empty -> .) ]
  ! ID              [ reduce using rule 94 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 94 (empty -> .) ]
  ! REPEAT          [ reduce using rule 94 (empty -> .) ]
  ! UNTIL           [ reduce using rule 94 (empty -> .) ]

    sentence                       shift and go to state 90
    local_variable                 shift and go to state 48
    values                         shift and go to state 49
    case                           shift and go to state 50
    call                           shift and go to state 51
    print_values                   shift and go to state 52
    alter                          shift and go to state 53
    alterB                         shift and go to state 54
    signal                         shift and go to state 55
    viewsignal                     shift and go to state 56
    sentence7                      shift and go to state 57
    sentence8                      shift and go to state 58
    sentence9                      shift and go to state 59
    sentence10                     shift and go to state 60
    sentence11                     shift and go to state 61
    sentence12                     shift and go to state 62
    isTrue                         shift and go to state 63
    sentence14                     shift and go to state 64
    sentence15                     shift and go to state 65
    empty                          shift and go to state 66

state 167

    (52) local_variable -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (53) local_variable -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 182


state 168

    (29) master_var -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (30) master_var -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 183
    BOOL            shift and go to state 184


state 169

    (54) values -> VALUES LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 185


state 170

    (55) values -> VALUES LPARENT ID COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 186


state 171

    (88) recursive_condition -> condition LPARENT sentences RPARENT .

    SEMICOLON       reduce using rule 88 (recursive_condition -> condition LPARENT sentences RPARENT .)
    WHEN            reduce using rule 88 (recursive_condition -> condition LPARENT sentences RPARENT .)


state 172

    (64) printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var .

    RPARENT         reduce using rule 64 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var .)
    PLUS            reduce using rule 64 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var .)


state 173

    (65) printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string .

    RPARENT         reduce using rule 65 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string .)
    PLUS            reduce using rule 65 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string .)


state 174

    (68) alter -> ALTER LPARENT ID COMA ADD COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 187


state 175

    (69) alter -> ALTER LPARENT ID COMA SUB COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 188


state 176

    (70) alter -> ALTER LPARENT ID COMA MUL COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 189


state 177

    (71) alter -> ALTER LPARENT ID COMA DIV COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 190


state 178

    (91) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 191


state 179

    (92) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 192


state 180

    (80) sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .

    RPARENT         reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    NEW             reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    VALUES          reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    CASE            reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    CALL            reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    ALTER           reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    ALTERB          reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    ID              reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    REPEAT          reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    UNTIL           reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    BREAK           reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 80 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)


state 181

    (81) sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .

    RPARENT         reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    NEW             reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    VALUES          reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    CASE            reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    CALL            reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    PRINTVALUES     reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    ALTER           reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    ALTERB          reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    SIGNAL          reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    VIEWSIGNAL      reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    ID              reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    ISTRUE          reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    REPEAT          reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    UNTIL           reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    BREAK           reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    SEMICOLON       reduce using rule 81 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)


state 182

    (52) local_variable -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (53) local_variable -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 193
    BOOL            shift and go to state 194


state 183

    (29) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 195


state 184

    (30) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 196


state 185

    (54) values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 54 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 186

    (55) values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    REPEAT          reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    UNTIL           reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    BREAK           reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 55 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)


state 187

    (68) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 197


state 188

    (69) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 198


state 189

    (70) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 199


state 190

    (71) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 200


state 191

    (91) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 91 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)


state 192

    (92) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 92 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 193

    (52) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 201


state 194

    (53) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 202


state 195

    (29) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 203


state 196

    (30) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 204


state 197

    (68) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 205


state 198

    (69) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 206


state 199

    (70) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 207


state 200

    (71) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 208


state 201

    (52) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 209


state 202

    (53) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 210


state 203

    (29) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 204

    (30) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    REPEAT          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    UNTIL           reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)


state 205

    (68) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 68 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)


state 206

    (69) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 69 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)


state 207

    (70) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 70 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)


state 208

    (71) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 71 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)


state 209

    (52) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 52 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 210

    (53) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    REPEAT          reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    UNTIL           reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    BREAK           reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 53 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEW in state 8 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 8 resolved as shift
WARNING: shift/reduce conflict for CASE in state 8 resolved as shift
WARNING: shift/reduce conflict for CALL in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 8 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 8 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 8 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 8 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 8 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 8 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 8 resolved as shift
WARNING: shift/reduce conflict for NEW in state 10 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 10 resolved as shift
WARNING: shift/reduce conflict for CASE in state 10 resolved as shift
WARNING: shift/reduce conflict for CALL in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 10 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 10 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 10 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 10 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 10 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 10 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 10 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 12 resolved as shift
WARNING: shift/reduce conflict for NEW in state 12 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 12 resolved as shift
WARNING: shift/reduce conflict for CASE in state 12 resolved as shift
WARNING: shift/reduce conflict for CALL in state 12 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 12 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 12 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 12 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 12 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 12 resolved as shift
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 12 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 12 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 12 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 46 resolved as shift
WARNING: shift/reduce conflict for NEW in state 46 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 46 resolved as shift
WARNING: shift/reduce conflict for CASE in state 46 resolved as shift
WARNING: shift/reduce conflict for CALL in state 46 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 46 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 46 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 46 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 46 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 46 resolved as shift
WARNING: shift/reduce conflict for ID in state 46 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 46 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 46 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 46 resolved as shift
WARNING: shift/reduce conflict for NEW in state 87 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 87 resolved as shift
WARNING: shift/reduce conflict for CASE in state 87 resolved as shift
WARNING: shift/reduce conflict for CALL in state 87 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 87 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 87 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 87 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 87 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 87 resolved as shift
WARNING: shift/reduce conflict for ID in state 87 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 87 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 87 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 87 resolved as shift
WARNING: shift/reduce conflict for NEW in state 88 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 88 resolved as shift
WARNING: shift/reduce conflict for CASE in state 88 resolved as shift
WARNING: shift/reduce conflict for CALL in state 88 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 88 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 88 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 88 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 88 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 88 resolved as shift
WARNING: shift/reduce conflict for ID in state 88 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 88 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 88 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 118 resolved as shift
WARNING: shift/reduce conflict for NEW in state 118 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 118 resolved as shift
WARNING: shift/reduce conflict for CASE in state 118 resolved as shift
WARNING: shift/reduce conflict for CALL in state 118 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 118 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 118 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 118 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 118 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 118 resolved as shift
WARNING: shift/reduce conflict for ID in state 118 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 118 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 118 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 118 resolved as shift
WARNING: shift/reduce conflict for NEW in state 120 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 120 resolved as shift
WARNING: shift/reduce conflict for CASE in state 120 resolved as shift
WARNING: shift/reduce conflict for CALL in state 120 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 120 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 120 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 120 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 120 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 120 resolved as shift
WARNING: shift/reduce conflict for ID in state 120 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 120 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 120 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 120 resolved as shift
WARNING: shift/reduce conflict for NEW in state 127 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 127 resolved as shift
WARNING: shift/reduce conflict for CASE in state 127 resolved as shift
WARNING: shift/reduce conflict for CALL in state 127 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 127 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 127 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 127 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 127 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 127 resolved as shift
WARNING: shift/reduce conflict for ID in state 127 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 127 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 127 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 127 resolved as shift
WARNING: shift/reduce conflict for NEW in state 141 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 141 resolved as shift
WARNING: shift/reduce conflict for CASE in state 141 resolved as shift
WARNING: shift/reduce conflict for CALL in state 141 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 141 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 141 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 141 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 141 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 141 resolved as shift
WARNING: shift/reduce conflict for ID in state 141 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 141 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 141 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 141 resolved as shift
WARNING: shift/reduce conflict for NEW in state 142 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 142 resolved as shift
WARNING: shift/reduce conflict for CASE in state 142 resolved as shift
WARNING: shift/reduce conflict for CALL in state 142 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 142 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 142 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 142 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 142 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 142 resolved as shift
WARNING: shift/reduce conflict for ID in state 142 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 142 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 142 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 142 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 147 resolved as shift
WARNING: shift/reduce conflict for NEW in state 147 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 147 resolved as shift
WARNING: shift/reduce conflict for CASE in state 147 resolved as shift
WARNING: shift/reduce conflict for CALL in state 147 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 147 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 147 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 147 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 147 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 147 resolved as shift
WARNING: shift/reduce conflict for ID in state 147 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 147 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 147 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 147 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 166 resolved as shift
WARNING: shift/reduce conflict for NEW in state 166 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 166 resolved as shift
WARNING: shift/reduce conflict for CASE in state 166 resolved as shift
WARNING: shift/reduce conflict for CALL in state 166 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 166 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 166 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 166 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 166 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 166 resolved as shift
WARNING: shift/reduce conflict for ID in state 166 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 166 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 166 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 166 resolved as shift
WARNING: reduce/reduce conflict in state 120 resolved using rule (instructions -> sentence)
WARNING: rejected rule (empty -> <empty>) in state 120
WARNING: reduce/reduce conflict in state 142 resolved using rule (instructions -> sentence sentences)
WARNING: rejected rule (empty -> <empty>) in state 142
