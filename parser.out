Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROBA
    BREAK
    COMMENT
    ELSE
    NEWLINE
    REPEAT
    UNTIL

Grammar

Rule 0     S' -> start
Rule 1     start -> master procedures
Rule 2     start -> master
Rule 3     declare_procedure -> PROC ID
Rule 4     procedures -> procedure
Rule 5     procedures -> procedures procedure
Rule 6     procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON
Rule 7     master -> MASTER LPARENT master_sentences RPARENT SEMICOLON
Rule 8     master_sentences -> master_sentence
Rule 9     master_sentences -> master_sentences master_sentence
Rule 10    master_sentence -> master_var
Rule 11    master_sentence -> values
Rule 12    master_sentence -> case
Rule 13    master_sentence -> call
Rule 14    master_sentence -> print_values
Rule 15    master_sentence -> alter
Rule 16    master_sentence -> alterB
Rule 17    master_sentence -> signal
Rule 18    master_sentence -> viewsignal
Rule 19    master_sentence -> sentence7
Rule 20    master_sentence -> sentence8
Rule 21    master_sentence -> sentence9
Rule 22    master_sentence -> sentence10
Rule 23    master_sentence -> sentence11
Rule 24    master_sentence -> sentence12
Rule 25    master_sentence -> isTrue
Rule 26    master_sentence -> while
Rule 27    master_sentence -> empty
Rule 28    master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 29    master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 30    sentences -> sentence
Rule 31    sentences -> sentences sentence
Rule 32    sentence -> local_variable
Rule 33    sentence -> values
Rule 34    sentence -> case
Rule 35    sentence -> call
Rule 36    sentence -> print_values
Rule 37    sentence -> alter
Rule 38    sentence -> alterB
Rule 39    sentence -> signal
Rule 40    sentence -> viewsignal
Rule 41    sentence -> sentence7
Rule 42    sentence -> sentence8
Rule 43    sentence -> sentence9
Rule 44    sentence -> sentence10
Rule 45    sentence -> sentence11
Rule 46    sentence -> sentence12
Rule 47    sentence -> isTrue
Rule 48    sentence -> while
Rule 49    sentence -> empty
Rule 50    local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 51    local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 52    values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 53    values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
Rule 54    call -> CALL LPARENT ID RPARENT SEMICOLON
Rule 55    print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
Rule 56    printable_sentences -> printable_sentence_var
Rule 57    printable_sentences -> printable_sentence_string
Rule 58    printable_sentences -> printable_sentence_var PLUS printable_sentence_var
Rule 59    printable_sentences -> printable_sentence_string PLUS printable_sentence_string
Rule 60    printable_sentences -> printable_sentence_var PLUS printable_sentence_string
Rule 61    printable_sentences -> printable_sentence_string PLUS printable_sentence_var
Rule 62    printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var
Rule 63    printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string
Rule 64    printable_sentence_var -> ID
Rule 65    printable_sentence_string -> STRING
Rule 66    alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
Rule 67    alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
Rule 68    alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
Rule 69    alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
Rule 70    alterB -> ALTERB LPARENT ID RPARENT SEMICOLON
Rule 71    sentence7 -> ID MAQ INTEGER
Rule 72    sentence8 -> ID MEQ INTEGER
Rule 73    sentence9 -> ID EQUAL INTEGER
Rule 74    sentence10 -> ID DIFFERENT INTEGER
Rule 75    sentence11 -> ID MEQEQUAL INTEGER
Rule 76    sentence12 -> ID MAQEQUAL INTEGER
Rule 77    isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON
Rule 78    while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON
Rule 79    case -> CASE expression recursive_conditions SEMICOLON
Rule 80    else_condition -> LPARENT sentences RPARENT
Rule 81    recursive_conditions -> recursive_condition
Rule 82    recursive_conditions -> recursive_conditions recursive_condition
Rule 83    recursive_condition -> condition LPARENT sentences RPARENT
Rule 84    expression -> ID
Rule 85    condition -> WHEN INTEGER THEN
Rule 86    signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
Rule 87    signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 88    viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
Rule 89    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 66
ALTER                : 66 67 68 69
ALTERB               : 70
ARROBA               : 
BOOL                 : 29 51 53
BREAK                : 
CALL                 : 54
CASE                 : 79
COMA                 : 28 28 29 29 50 50 51 51 52 53 66 66 67 67 68 68 69 69 86 87
COMMENT              : 
DIFFERENT            : 74
DIV                  : 69
ELSE                 : 
EQUAL                : 73
ID                   : 3 28 29 50 51 52 53 54 64 66 67 68 69 70 71 72 73 74 75 76 77 84 87
INTEGER              : 28 50 52 66 67 68 69 71 72 73 74 75 76 85 86 86 87 88
ISTRUE               : 77
LPARENT              : 6 7 28 29 50 51 52 53 54 55 66 67 68 69 70 77 78 80 83 86 87 88
MAQ                  : 71
MAQEQUAL             : 76
MASTER               : 7
MEQ                  : 72
MEQEQUAL             : 75
MUL                  : 68
NEW                  : 28 29 50 51
NEWLINE              : 
PLUS                 : 58 59 60 61 62 62 63 63
PRINTVALUES          : 55
PROC                 : 3
REPEAT               : 
RPARENT              : 6 7 28 29 50 51 52 53 54 55 66 67 68 69 70 77 78 80 83 86 87 88
SEMICOLON            : 6 7 28 29 50 51 52 53 54 55 66 67 68 69 70 77 78 79 86 87 88
SIGNAL               : 86 87
STRING               : 65
SUB                  : 67
THEN                 : 85
TYPE                 : 28 29 50 51
UNTIL                : 
VALUES               : 52 53
VIEWSIGNAL           : 88
WHEN                 : 85
WHILE                : 78
error                : 

Nonterminals, with rules where they appear

alter                : 15 37
alterB               : 16 38
call                 : 13 35
case                 : 12 34
condition            : 83
declare_procedure    : 6
else_condition       : 
empty                : 27 49
expression           : 79
isTrue               : 25 47
local_variable       : 32
master               : 1 2
master_sentence      : 8 9
master_sentences     : 7 9
master_var           : 10
print_values         : 14 36
printable_sentence_string : 57 59 59 60 61 63
printable_sentence_var : 56 58 58 60 61 62
printable_sentences  : 55 62 63
procedure            : 4 5
procedures           : 1 5
recursive_condition  : 81 82
recursive_conditions : 79 82
sentence             : 30 31
sentence10           : 22 44
sentence11           : 23 45
sentence12           : 24 46
sentence7            : 19 41
sentence8            : 20 42
sentence9            : 21 43
sentences            : 6 31 78 78 80 83
signal               : 17 39
start                : 0
values               : 11 33
viewsignal           : 18 40
while                : 26 48

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . master procedures
    (2) start -> . master
    (7) master -> . MASTER LPARENT master_sentences RPARENT SEMICOLON

    MASTER          shift and go to state 3

    start                          shift and go to state 1
    master                         shift and go to state 2

state 1

    (0) S' -> start .



state 2

    (1) start -> master . procedures
    (2) start -> master .
    (4) procedures -> . procedure
    (5) procedures -> . procedures procedure
    (6) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (3) declare_procedure -> . PROC ID

    $end            reduce using rule 2 (start -> master .)
    PROC            shift and go to state 7

    procedures                     shift and go to state 4
    procedure                      shift and go to state 5
    declare_procedure              shift and go to state 6

state 3

    (7) master -> MASTER . LPARENT master_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 8


state 4

    (1) start -> master procedures .
    (5) procedures -> procedures . procedure
    (6) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (3) declare_procedure -> . PROC ID

    $end            reduce using rule 1 (start -> master procedures .)
    PROC            shift and go to state 7

    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 6

state 5

    (4) procedures -> procedure .

    PROC            reduce using rule 4 (procedures -> procedure .)
    $end            reduce using rule 4 (procedures -> procedure .)


state 6

    (6) procedure -> declare_procedure . LPARENT sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 10


state 7

    (3) declare_procedure -> PROC . ID

    ID              shift and go to state 11


state 8

    (7) master -> MASTER LPARENT . master_sentences RPARENT SEMICOLON
    (8) master_sentences -> . master_sentence
    (9) master_sentences -> . master_sentences master_sentence
    (10) master_sentence -> . master_var
    (11) master_sentence -> . values
    (12) master_sentence -> . case
    (13) master_sentence -> . call
    (14) master_sentence -> . print_values
    (15) master_sentence -> . alter
    (16) master_sentence -> . alterB
    (17) master_sentence -> . signal
    (18) master_sentence -> . viewsignal
    (19) master_sentence -> . sentence7
    (20) master_sentence -> . sentence8
    (21) master_sentence -> . sentence9
    (22) master_sentence -> . sentence10
    (23) master_sentence -> . sentence11
    (24) master_sentence -> . sentence12
    (25) master_sentence -> . isTrue
    (26) master_sentence -> . while
    (27) master_sentence -> . empty
    (28) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (29) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (52) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (53) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (79) case -> . CASE expression recursive_conditions SEMICOLON
    (54) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (55) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (66) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (70) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (86) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (87) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (88) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (71) sentence7 -> . ID MAQ INTEGER
    (72) sentence8 -> . ID MEQ INTEGER
    (73) sentence9 -> . ID EQUAL INTEGER
    (74) sentence10 -> . ID DIFFERENT INTEGER
    (75) sentence11 -> . ID MEQEQUAL INTEGER
    (76) sentence12 -> . ID MAQEQUAL INTEGER
    (77) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (78) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (89) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    NEW             shift and go to state 32
    VALUES          shift and go to state 34
    CASE            shift and go to state 35
    CALL            shift and go to state 36
    PRINTVALUES     shift and go to state 37
    ALTER           shift and go to state 38
    ALTERB          shift and go to state 39
    SIGNAL          shift and go to state 40
    VIEWSIGNAL      shift and go to state 41
    ID              shift and go to state 33
    ISTRUE          shift and go to state 42
    WHILE           shift and go to state 43
    RPARENT         reduce using rule 89 (empty -> .)

  ! NEW             [ reduce using rule 89 (empty -> .) ]
  ! VALUES          [ reduce using rule 89 (empty -> .) ]
  ! CASE            [ reduce using rule 89 (empty -> .) ]
  ! CALL            [ reduce using rule 89 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 89 (empty -> .) ]
  ! ALTER           [ reduce using rule 89 (empty -> .) ]
  ! ALTERB          [ reduce using rule 89 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 89 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]

    master_sentences               shift and go to state 12
    master_sentence                shift and go to state 13
    master_var                     shift and go to state 14
    values                         shift and go to state 15
    case                           shift and go to state 16
    call                           shift and go to state 17
    print_values                   shift and go to state 18
    alter                          shift and go to state 19
    alterB                         shift and go to state 20
    signal                         shift and go to state 21
    viewsignal                     shift and go to state 22
    sentence7                      shift and go to state 23
    sentence8                      shift and go to state 24
    sentence9                      shift and go to state 25
    sentence10                     shift and go to state 26
    sentence11                     shift and go to state 27
    sentence12                     shift and go to state 28
    isTrue                         shift and go to state 29
    while                          shift and go to state 30
    empty                          shift and go to state 31

state 9

    (5) procedures -> procedures procedure .

    PROC            reduce using rule 5 (procedures -> procedures procedure .)
    $end            reduce using rule 5 (procedures -> procedures procedure .)


state 10

    (6) procedure -> declare_procedure LPARENT . sentences RPARENT SEMICOLON
    (30) sentences -> . sentence
    (31) sentences -> . sentences sentence
    (32) sentence -> . local_variable
    (33) sentence -> . values
    (34) sentence -> . case
    (35) sentence -> . call
    (36) sentence -> . print_values
    (37) sentence -> . alter
    (38) sentence -> . alterB
    (39) sentence -> . signal
    (40) sentence -> . viewsignal
    (41) sentence -> . sentence7
    (42) sentence -> . sentence8
    (43) sentence -> . sentence9
    (44) sentence -> . sentence10
    (45) sentence -> . sentence11
    (46) sentence -> . sentence12
    (47) sentence -> . isTrue
    (48) sentence -> . while
    (49) sentence -> . empty
    (50) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (52) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (53) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (79) case -> . CASE expression recursive_conditions SEMICOLON
    (54) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (55) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (66) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (70) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (86) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (87) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (88) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (71) sentence7 -> . ID MAQ INTEGER
    (72) sentence8 -> . ID MEQ INTEGER
    (73) sentence9 -> . ID EQUAL INTEGER
    (74) sentence10 -> . ID DIFFERENT INTEGER
    (75) sentence11 -> . ID MEQEQUAL INTEGER
    (76) sentence12 -> . ID MAQEQUAL INTEGER
    (77) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (78) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (89) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    NEW             shift and go to state 64
    VALUES          shift and go to state 34
    CASE            shift and go to state 35
    CALL            shift and go to state 36
    PRINTVALUES     shift and go to state 37
    ALTER           shift and go to state 38
    ALTERB          shift and go to state 39
    SIGNAL          shift and go to state 40
    VIEWSIGNAL      shift and go to state 41
    ID              shift and go to state 33
    ISTRUE          shift and go to state 42
    WHILE           shift and go to state 43
    RPARENT         reduce using rule 89 (empty -> .)

  ! NEW             [ reduce using rule 89 (empty -> .) ]
  ! VALUES          [ reduce using rule 89 (empty -> .) ]
  ! CASE            [ reduce using rule 89 (empty -> .) ]
  ! CALL            [ reduce using rule 89 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 89 (empty -> .) ]
  ! ALTER           [ reduce using rule 89 (empty -> .) ]
  ! ALTERB          [ reduce using rule 89 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 89 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]

    sentences                      shift and go to state 44
    sentence                       shift and go to state 45
    local_variable                 shift and go to state 46
    values                         shift and go to state 47
    case                           shift and go to state 48
    call                           shift and go to state 49
    print_values                   shift and go to state 50
    alter                          shift and go to state 51
    alterB                         shift and go to state 52
    signal                         shift and go to state 53
    viewsignal                     shift and go to state 54
    sentence7                      shift and go to state 55
    sentence8                      shift and go to state 56
    sentence9                      shift and go to state 57
    sentence10                     shift and go to state 58
    sentence11                     shift and go to state 59
    sentence12                     shift and go to state 60
    isTrue                         shift and go to state 61
    while                          shift and go to state 62
    empty                          shift and go to state 63

state 11

    (3) declare_procedure -> PROC ID .

    LPARENT         reduce using rule 3 (declare_procedure -> PROC ID .)


state 12

    (7) master -> MASTER LPARENT master_sentences . RPARENT SEMICOLON
    (9) master_sentences -> master_sentences . master_sentence
    (10) master_sentence -> . master_var
    (11) master_sentence -> . values
    (12) master_sentence -> . case
    (13) master_sentence -> . call
    (14) master_sentence -> . print_values
    (15) master_sentence -> . alter
    (16) master_sentence -> . alterB
    (17) master_sentence -> . signal
    (18) master_sentence -> . viewsignal
    (19) master_sentence -> . sentence7
    (20) master_sentence -> . sentence8
    (21) master_sentence -> . sentence9
    (22) master_sentence -> . sentence10
    (23) master_sentence -> . sentence11
    (24) master_sentence -> . sentence12
    (25) master_sentence -> . isTrue
    (26) master_sentence -> . while
    (27) master_sentence -> . empty
    (28) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (29) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (52) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (53) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (79) case -> . CASE expression recursive_conditions SEMICOLON
    (54) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (55) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (66) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (70) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (86) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (87) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (88) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (71) sentence7 -> . ID MAQ INTEGER
    (72) sentence8 -> . ID MEQ INTEGER
    (73) sentence9 -> . ID EQUAL INTEGER
    (74) sentence10 -> . ID DIFFERENT INTEGER
    (75) sentence11 -> . ID MEQEQUAL INTEGER
    (76) sentence12 -> . ID MAQEQUAL INTEGER
    (77) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (78) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (89) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RPARENT         shift and go to state 65
    NEW             shift and go to state 32
    VALUES          shift and go to state 34
    CASE            shift and go to state 35
    CALL            shift and go to state 36
    PRINTVALUES     shift and go to state 37
    ALTER           shift and go to state 38
    ALTERB          shift and go to state 39
    SIGNAL          shift and go to state 40
    VIEWSIGNAL      shift and go to state 41
    ID              shift and go to state 33
    ISTRUE          shift and go to state 42
    WHILE           shift and go to state 43

  ! RPARENT         [ reduce using rule 89 (empty -> .) ]
  ! NEW             [ reduce using rule 89 (empty -> .) ]
  ! VALUES          [ reduce using rule 89 (empty -> .) ]
  ! CASE            [ reduce using rule 89 (empty -> .) ]
  ! CALL            [ reduce using rule 89 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 89 (empty -> .) ]
  ! ALTER           [ reduce using rule 89 (empty -> .) ]
  ! ALTERB          [ reduce using rule 89 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 89 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]

    master_sentence                shift and go to state 66
    master_var                     shift and go to state 14
    values                         shift and go to state 15
    case                           shift and go to state 16
    call                           shift and go to state 17
    print_values                   shift and go to state 18
    alter                          shift and go to state 19
    alterB                         shift and go to state 20
    signal                         shift and go to state 21
    viewsignal                     shift and go to state 22
    sentence7                      shift and go to state 23
    sentence8                      shift and go to state 24
    sentence9                      shift and go to state 25
    sentence10                     shift and go to state 26
    sentence11                     shift and go to state 27
    sentence12                     shift and go to state 28
    isTrue                         shift and go to state 29
    while                          shift and go to state 30
    empty                          shift and go to state 31

state 13

    (8) master_sentences -> master_sentence .

    RPARENT         reduce using rule 8 (master_sentences -> master_sentence .)
    NEW             reduce using rule 8 (master_sentences -> master_sentence .)
    VALUES          reduce using rule 8 (master_sentences -> master_sentence .)
    CASE            reduce using rule 8 (master_sentences -> master_sentence .)
    CALL            reduce using rule 8 (master_sentences -> master_sentence .)
    PRINTVALUES     reduce using rule 8 (master_sentences -> master_sentence .)
    ALTER           reduce using rule 8 (master_sentences -> master_sentence .)
    ALTERB          reduce using rule 8 (master_sentences -> master_sentence .)
    SIGNAL          reduce using rule 8 (master_sentences -> master_sentence .)
    VIEWSIGNAL      reduce using rule 8 (master_sentences -> master_sentence .)
    ID              reduce using rule 8 (master_sentences -> master_sentence .)
    ISTRUE          reduce using rule 8 (master_sentences -> master_sentence .)
    WHILE           reduce using rule 8 (master_sentences -> master_sentence .)


state 14

    (10) master_sentence -> master_var .

    RPARENT         reduce using rule 10 (master_sentence -> master_var .)
    NEW             reduce using rule 10 (master_sentence -> master_var .)
    VALUES          reduce using rule 10 (master_sentence -> master_var .)
    CASE            reduce using rule 10 (master_sentence -> master_var .)
    CALL            reduce using rule 10 (master_sentence -> master_var .)
    PRINTVALUES     reduce using rule 10 (master_sentence -> master_var .)
    ALTER           reduce using rule 10 (master_sentence -> master_var .)
    ALTERB          reduce using rule 10 (master_sentence -> master_var .)
    SIGNAL          reduce using rule 10 (master_sentence -> master_var .)
    VIEWSIGNAL      reduce using rule 10 (master_sentence -> master_var .)
    ID              reduce using rule 10 (master_sentence -> master_var .)
    ISTRUE          reduce using rule 10 (master_sentence -> master_var .)
    WHILE           reduce using rule 10 (master_sentence -> master_var .)


state 15

    (11) master_sentence -> values .

    RPARENT         reduce using rule 11 (master_sentence -> values .)
    NEW             reduce using rule 11 (master_sentence -> values .)
    VALUES          reduce using rule 11 (master_sentence -> values .)
    CASE            reduce using rule 11 (master_sentence -> values .)
    CALL            reduce using rule 11 (master_sentence -> values .)
    PRINTVALUES     reduce using rule 11 (master_sentence -> values .)
    ALTER           reduce using rule 11 (master_sentence -> values .)
    ALTERB          reduce using rule 11 (master_sentence -> values .)
    SIGNAL          reduce using rule 11 (master_sentence -> values .)
    VIEWSIGNAL      reduce using rule 11 (master_sentence -> values .)
    ID              reduce using rule 11 (master_sentence -> values .)
    ISTRUE          reduce using rule 11 (master_sentence -> values .)
    WHILE           reduce using rule 11 (master_sentence -> values .)


state 16

    (12) master_sentence -> case .

    RPARENT         reduce using rule 12 (master_sentence -> case .)
    NEW             reduce using rule 12 (master_sentence -> case .)
    VALUES          reduce using rule 12 (master_sentence -> case .)
    CASE            reduce using rule 12 (master_sentence -> case .)
    CALL            reduce using rule 12 (master_sentence -> case .)
    PRINTVALUES     reduce using rule 12 (master_sentence -> case .)
    ALTER           reduce using rule 12 (master_sentence -> case .)
    ALTERB          reduce using rule 12 (master_sentence -> case .)
    SIGNAL          reduce using rule 12 (master_sentence -> case .)
    VIEWSIGNAL      reduce using rule 12 (master_sentence -> case .)
    ID              reduce using rule 12 (master_sentence -> case .)
    ISTRUE          reduce using rule 12 (master_sentence -> case .)
    WHILE           reduce using rule 12 (master_sentence -> case .)


state 17

    (13) master_sentence -> call .

    RPARENT         reduce using rule 13 (master_sentence -> call .)
    NEW             reduce using rule 13 (master_sentence -> call .)
    VALUES          reduce using rule 13 (master_sentence -> call .)
    CASE            reduce using rule 13 (master_sentence -> call .)
    CALL            reduce using rule 13 (master_sentence -> call .)
    PRINTVALUES     reduce using rule 13 (master_sentence -> call .)
    ALTER           reduce using rule 13 (master_sentence -> call .)
    ALTERB          reduce using rule 13 (master_sentence -> call .)
    SIGNAL          reduce using rule 13 (master_sentence -> call .)
    VIEWSIGNAL      reduce using rule 13 (master_sentence -> call .)
    ID              reduce using rule 13 (master_sentence -> call .)
    ISTRUE          reduce using rule 13 (master_sentence -> call .)
    WHILE           reduce using rule 13 (master_sentence -> call .)


state 18

    (14) master_sentence -> print_values .

    RPARENT         reduce using rule 14 (master_sentence -> print_values .)
    NEW             reduce using rule 14 (master_sentence -> print_values .)
    VALUES          reduce using rule 14 (master_sentence -> print_values .)
    CASE            reduce using rule 14 (master_sentence -> print_values .)
    CALL            reduce using rule 14 (master_sentence -> print_values .)
    PRINTVALUES     reduce using rule 14 (master_sentence -> print_values .)
    ALTER           reduce using rule 14 (master_sentence -> print_values .)
    ALTERB          reduce using rule 14 (master_sentence -> print_values .)
    SIGNAL          reduce using rule 14 (master_sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 14 (master_sentence -> print_values .)
    ID              reduce using rule 14 (master_sentence -> print_values .)
    ISTRUE          reduce using rule 14 (master_sentence -> print_values .)
    WHILE           reduce using rule 14 (master_sentence -> print_values .)


state 19

    (15) master_sentence -> alter .

    RPARENT         reduce using rule 15 (master_sentence -> alter .)
    NEW             reduce using rule 15 (master_sentence -> alter .)
    VALUES          reduce using rule 15 (master_sentence -> alter .)
    CASE            reduce using rule 15 (master_sentence -> alter .)
    CALL            reduce using rule 15 (master_sentence -> alter .)
    PRINTVALUES     reduce using rule 15 (master_sentence -> alter .)
    ALTER           reduce using rule 15 (master_sentence -> alter .)
    ALTERB          reduce using rule 15 (master_sentence -> alter .)
    SIGNAL          reduce using rule 15 (master_sentence -> alter .)
    VIEWSIGNAL      reduce using rule 15 (master_sentence -> alter .)
    ID              reduce using rule 15 (master_sentence -> alter .)
    ISTRUE          reduce using rule 15 (master_sentence -> alter .)
    WHILE           reduce using rule 15 (master_sentence -> alter .)


state 20

    (16) master_sentence -> alterB .

    RPARENT         reduce using rule 16 (master_sentence -> alterB .)
    NEW             reduce using rule 16 (master_sentence -> alterB .)
    VALUES          reduce using rule 16 (master_sentence -> alterB .)
    CASE            reduce using rule 16 (master_sentence -> alterB .)
    CALL            reduce using rule 16 (master_sentence -> alterB .)
    PRINTVALUES     reduce using rule 16 (master_sentence -> alterB .)
    ALTER           reduce using rule 16 (master_sentence -> alterB .)
    ALTERB          reduce using rule 16 (master_sentence -> alterB .)
    SIGNAL          reduce using rule 16 (master_sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 16 (master_sentence -> alterB .)
    ID              reduce using rule 16 (master_sentence -> alterB .)
    ISTRUE          reduce using rule 16 (master_sentence -> alterB .)
    WHILE           reduce using rule 16 (master_sentence -> alterB .)


state 21

    (17) master_sentence -> signal .

    RPARENT         reduce using rule 17 (master_sentence -> signal .)
    NEW             reduce using rule 17 (master_sentence -> signal .)
    VALUES          reduce using rule 17 (master_sentence -> signal .)
    CASE            reduce using rule 17 (master_sentence -> signal .)
    CALL            reduce using rule 17 (master_sentence -> signal .)
    PRINTVALUES     reduce using rule 17 (master_sentence -> signal .)
    ALTER           reduce using rule 17 (master_sentence -> signal .)
    ALTERB          reduce using rule 17 (master_sentence -> signal .)
    SIGNAL          reduce using rule 17 (master_sentence -> signal .)
    VIEWSIGNAL      reduce using rule 17 (master_sentence -> signal .)
    ID              reduce using rule 17 (master_sentence -> signal .)
    ISTRUE          reduce using rule 17 (master_sentence -> signal .)
    WHILE           reduce using rule 17 (master_sentence -> signal .)


state 22

    (18) master_sentence -> viewsignal .

    RPARENT         reduce using rule 18 (master_sentence -> viewsignal .)
    NEW             reduce using rule 18 (master_sentence -> viewsignal .)
    VALUES          reduce using rule 18 (master_sentence -> viewsignal .)
    CASE            reduce using rule 18 (master_sentence -> viewsignal .)
    CALL            reduce using rule 18 (master_sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 18 (master_sentence -> viewsignal .)
    ALTER           reduce using rule 18 (master_sentence -> viewsignal .)
    ALTERB          reduce using rule 18 (master_sentence -> viewsignal .)
    SIGNAL          reduce using rule 18 (master_sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 18 (master_sentence -> viewsignal .)
    ID              reduce using rule 18 (master_sentence -> viewsignal .)
    ISTRUE          reduce using rule 18 (master_sentence -> viewsignal .)
    WHILE           reduce using rule 18 (master_sentence -> viewsignal .)


state 23

    (19) master_sentence -> sentence7 .

    RPARENT         reduce using rule 19 (master_sentence -> sentence7 .)
    NEW             reduce using rule 19 (master_sentence -> sentence7 .)
    VALUES          reduce using rule 19 (master_sentence -> sentence7 .)
    CASE            reduce using rule 19 (master_sentence -> sentence7 .)
    CALL            reduce using rule 19 (master_sentence -> sentence7 .)
    PRINTVALUES     reduce using rule 19 (master_sentence -> sentence7 .)
    ALTER           reduce using rule 19 (master_sentence -> sentence7 .)
    ALTERB          reduce using rule 19 (master_sentence -> sentence7 .)
    SIGNAL          reduce using rule 19 (master_sentence -> sentence7 .)
    VIEWSIGNAL      reduce using rule 19 (master_sentence -> sentence7 .)
    ID              reduce using rule 19 (master_sentence -> sentence7 .)
    ISTRUE          reduce using rule 19 (master_sentence -> sentence7 .)
    WHILE           reduce using rule 19 (master_sentence -> sentence7 .)


state 24

    (20) master_sentence -> sentence8 .

    RPARENT         reduce using rule 20 (master_sentence -> sentence8 .)
    NEW             reduce using rule 20 (master_sentence -> sentence8 .)
    VALUES          reduce using rule 20 (master_sentence -> sentence8 .)
    CASE            reduce using rule 20 (master_sentence -> sentence8 .)
    CALL            reduce using rule 20 (master_sentence -> sentence8 .)
    PRINTVALUES     reduce using rule 20 (master_sentence -> sentence8 .)
    ALTER           reduce using rule 20 (master_sentence -> sentence8 .)
    ALTERB          reduce using rule 20 (master_sentence -> sentence8 .)
    SIGNAL          reduce using rule 20 (master_sentence -> sentence8 .)
    VIEWSIGNAL      reduce using rule 20 (master_sentence -> sentence8 .)
    ID              reduce using rule 20 (master_sentence -> sentence8 .)
    ISTRUE          reduce using rule 20 (master_sentence -> sentence8 .)
    WHILE           reduce using rule 20 (master_sentence -> sentence8 .)


state 25

    (21) master_sentence -> sentence9 .

    RPARENT         reduce using rule 21 (master_sentence -> sentence9 .)
    NEW             reduce using rule 21 (master_sentence -> sentence9 .)
    VALUES          reduce using rule 21 (master_sentence -> sentence9 .)
    CASE            reduce using rule 21 (master_sentence -> sentence9 .)
    CALL            reduce using rule 21 (master_sentence -> sentence9 .)
    PRINTVALUES     reduce using rule 21 (master_sentence -> sentence9 .)
    ALTER           reduce using rule 21 (master_sentence -> sentence9 .)
    ALTERB          reduce using rule 21 (master_sentence -> sentence9 .)
    SIGNAL          reduce using rule 21 (master_sentence -> sentence9 .)
    VIEWSIGNAL      reduce using rule 21 (master_sentence -> sentence9 .)
    ID              reduce using rule 21 (master_sentence -> sentence9 .)
    ISTRUE          reduce using rule 21 (master_sentence -> sentence9 .)
    WHILE           reduce using rule 21 (master_sentence -> sentence9 .)


state 26

    (22) master_sentence -> sentence10 .

    RPARENT         reduce using rule 22 (master_sentence -> sentence10 .)
    NEW             reduce using rule 22 (master_sentence -> sentence10 .)
    VALUES          reduce using rule 22 (master_sentence -> sentence10 .)
    CASE            reduce using rule 22 (master_sentence -> sentence10 .)
    CALL            reduce using rule 22 (master_sentence -> sentence10 .)
    PRINTVALUES     reduce using rule 22 (master_sentence -> sentence10 .)
    ALTER           reduce using rule 22 (master_sentence -> sentence10 .)
    ALTERB          reduce using rule 22 (master_sentence -> sentence10 .)
    SIGNAL          reduce using rule 22 (master_sentence -> sentence10 .)
    VIEWSIGNAL      reduce using rule 22 (master_sentence -> sentence10 .)
    ID              reduce using rule 22 (master_sentence -> sentence10 .)
    ISTRUE          reduce using rule 22 (master_sentence -> sentence10 .)
    WHILE           reduce using rule 22 (master_sentence -> sentence10 .)


state 27

    (23) master_sentence -> sentence11 .

    RPARENT         reduce using rule 23 (master_sentence -> sentence11 .)
    NEW             reduce using rule 23 (master_sentence -> sentence11 .)
    VALUES          reduce using rule 23 (master_sentence -> sentence11 .)
    CASE            reduce using rule 23 (master_sentence -> sentence11 .)
    CALL            reduce using rule 23 (master_sentence -> sentence11 .)
    PRINTVALUES     reduce using rule 23 (master_sentence -> sentence11 .)
    ALTER           reduce using rule 23 (master_sentence -> sentence11 .)
    ALTERB          reduce using rule 23 (master_sentence -> sentence11 .)
    SIGNAL          reduce using rule 23 (master_sentence -> sentence11 .)
    VIEWSIGNAL      reduce using rule 23 (master_sentence -> sentence11 .)
    ID              reduce using rule 23 (master_sentence -> sentence11 .)
    ISTRUE          reduce using rule 23 (master_sentence -> sentence11 .)
    WHILE           reduce using rule 23 (master_sentence -> sentence11 .)


state 28

    (24) master_sentence -> sentence12 .

    RPARENT         reduce using rule 24 (master_sentence -> sentence12 .)
    NEW             reduce using rule 24 (master_sentence -> sentence12 .)
    VALUES          reduce using rule 24 (master_sentence -> sentence12 .)
    CASE            reduce using rule 24 (master_sentence -> sentence12 .)
    CALL            reduce using rule 24 (master_sentence -> sentence12 .)
    PRINTVALUES     reduce using rule 24 (master_sentence -> sentence12 .)
    ALTER           reduce using rule 24 (master_sentence -> sentence12 .)
    ALTERB          reduce using rule 24 (master_sentence -> sentence12 .)
    SIGNAL          reduce using rule 24 (master_sentence -> sentence12 .)
    VIEWSIGNAL      reduce using rule 24 (master_sentence -> sentence12 .)
    ID              reduce using rule 24 (master_sentence -> sentence12 .)
    ISTRUE          reduce using rule 24 (master_sentence -> sentence12 .)
    WHILE           reduce using rule 24 (master_sentence -> sentence12 .)


state 29

    (25) master_sentence -> isTrue .

    RPARENT         reduce using rule 25 (master_sentence -> isTrue .)
    NEW             reduce using rule 25 (master_sentence -> isTrue .)
    VALUES          reduce using rule 25 (master_sentence -> isTrue .)
    CASE            reduce using rule 25 (master_sentence -> isTrue .)
    CALL            reduce using rule 25 (master_sentence -> isTrue .)
    PRINTVALUES     reduce using rule 25 (master_sentence -> isTrue .)
    ALTER           reduce using rule 25 (master_sentence -> isTrue .)
    ALTERB          reduce using rule 25 (master_sentence -> isTrue .)
    SIGNAL          reduce using rule 25 (master_sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 25 (master_sentence -> isTrue .)
    ID              reduce using rule 25 (master_sentence -> isTrue .)
    ISTRUE          reduce using rule 25 (master_sentence -> isTrue .)
    WHILE           reduce using rule 25 (master_sentence -> isTrue .)


state 30

    (26) master_sentence -> while .

    RPARENT         reduce using rule 26 (master_sentence -> while .)
    NEW             reduce using rule 26 (master_sentence -> while .)
    VALUES          reduce using rule 26 (master_sentence -> while .)
    CASE            reduce using rule 26 (master_sentence -> while .)
    CALL            reduce using rule 26 (master_sentence -> while .)
    PRINTVALUES     reduce using rule 26 (master_sentence -> while .)
    ALTER           reduce using rule 26 (master_sentence -> while .)
    ALTERB          reduce using rule 26 (master_sentence -> while .)
    SIGNAL          reduce using rule 26 (master_sentence -> while .)
    VIEWSIGNAL      reduce using rule 26 (master_sentence -> while .)
    ID              reduce using rule 26 (master_sentence -> while .)
    ISTRUE          reduce using rule 26 (master_sentence -> while .)
    WHILE           reduce using rule 26 (master_sentence -> while .)


state 31

    (27) master_sentence -> empty .

    RPARENT         reduce using rule 27 (master_sentence -> empty .)
    NEW             reduce using rule 27 (master_sentence -> empty .)
    VALUES          reduce using rule 27 (master_sentence -> empty .)
    CASE            reduce using rule 27 (master_sentence -> empty .)
    CALL            reduce using rule 27 (master_sentence -> empty .)
    PRINTVALUES     reduce using rule 27 (master_sentence -> empty .)
    ALTER           reduce using rule 27 (master_sentence -> empty .)
    ALTERB          reduce using rule 27 (master_sentence -> empty .)
    SIGNAL          reduce using rule 27 (master_sentence -> empty .)
    VIEWSIGNAL      reduce using rule 27 (master_sentence -> empty .)
    ID              reduce using rule 27 (master_sentence -> empty .)
    ISTRUE          reduce using rule 27 (master_sentence -> empty .)
    WHILE           reduce using rule 27 (master_sentence -> empty .)


state 32

    (28) master_var -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (29) master_var -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 67


state 33

    (71) sentence7 -> ID . MAQ INTEGER
    (72) sentence8 -> ID . MEQ INTEGER
    (73) sentence9 -> ID . EQUAL INTEGER
    (74) sentence10 -> ID . DIFFERENT INTEGER
    (75) sentence11 -> ID . MEQEQUAL INTEGER
    (76) sentence12 -> ID . MAQEQUAL INTEGER

    MAQ             shift and go to state 68
    MEQ             shift and go to state 69
    EQUAL           shift and go to state 70
    DIFFERENT       shift and go to state 71
    MEQEQUAL        shift and go to state 72
    MAQEQUAL        shift and go to state 73


state 34

    (52) values -> VALUES . LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (53) values -> VALUES . LPARENT ID COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 74


state 35

    (79) case -> CASE . expression recursive_conditions SEMICOLON
    (84) expression -> . ID

    ID              shift and go to state 76

    expression                     shift and go to state 75

state 36

    (54) call -> CALL . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 77


state 37

    (55) print_values -> PRINTVALUES . LPARENT printable_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 78


state 38

    (66) alter -> ALTER . LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> ALTER . LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> ALTER . LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> ALTER . LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 79


state 39

    (70) alterB -> ALTERB . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 80


state 40

    (86) signal -> SIGNAL . LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (87) signal -> SIGNAL . LPARENT ID COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 81


state 41

    (88) viewsignal -> VIEWSIGNAL . LPARENT INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 82


state 42

    (77) isTrue -> ISTRUE . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 83


state 43

    (78) while -> WHILE . sentences LPARENT sentences RPARENT SEMICOLON
    (30) sentences -> . sentence
    (31) sentences -> . sentences sentence
    (32) sentence -> . local_variable
    (33) sentence -> . values
    (34) sentence -> . case
    (35) sentence -> . call
    (36) sentence -> . print_values
    (37) sentence -> . alter
    (38) sentence -> . alterB
    (39) sentence -> . signal
    (40) sentence -> . viewsignal
    (41) sentence -> . sentence7
    (42) sentence -> . sentence8
    (43) sentence -> . sentence9
    (44) sentence -> . sentence10
    (45) sentence -> . sentence11
    (46) sentence -> . sentence12
    (47) sentence -> . isTrue
    (48) sentence -> . while
    (49) sentence -> . empty
    (50) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (52) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (53) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (79) case -> . CASE expression recursive_conditions SEMICOLON
    (54) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (55) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (66) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (70) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (86) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (87) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (88) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (71) sentence7 -> . ID MAQ INTEGER
    (72) sentence8 -> . ID MEQ INTEGER
    (73) sentence9 -> . ID EQUAL INTEGER
    (74) sentence10 -> . ID DIFFERENT INTEGER
    (75) sentence11 -> . ID MEQEQUAL INTEGER
    (76) sentence12 -> . ID MAQEQUAL INTEGER
    (77) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (78) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (89) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    NEW             shift and go to state 64
    VALUES          shift and go to state 34
    CASE            shift and go to state 35
    CALL            shift and go to state 36
    PRINTVALUES     shift and go to state 37
    ALTER           shift and go to state 38
    ALTERB          shift and go to state 39
    SIGNAL          shift and go to state 40
    VIEWSIGNAL      shift and go to state 41
    ID              shift and go to state 33
    ISTRUE          shift and go to state 42
    WHILE           shift and go to state 43
    LPARENT         reduce using rule 89 (empty -> .)

  ! NEW             [ reduce using rule 89 (empty -> .) ]
  ! VALUES          [ reduce using rule 89 (empty -> .) ]
  ! CASE            [ reduce using rule 89 (empty -> .) ]
  ! CALL            [ reduce using rule 89 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 89 (empty -> .) ]
  ! ALTER           [ reduce using rule 89 (empty -> .) ]
  ! ALTERB          [ reduce using rule 89 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 89 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]

    sentences                      shift and go to state 84
    sentence                       shift and go to state 45
    local_variable                 shift and go to state 46
    values                         shift and go to state 47
    case                           shift and go to state 48
    call                           shift and go to state 49
    print_values                   shift and go to state 50
    alter                          shift and go to state 51
    alterB                         shift and go to state 52
    signal                         shift and go to state 53
    viewsignal                     shift and go to state 54
    sentence7                      shift and go to state 55
    sentence8                      shift and go to state 56
    sentence9                      shift and go to state 57
    sentence10                     shift and go to state 58
    sentence11                     shift and go to state 59
    sentence12                     shift and go to state 60
    isTrue                         shift and go to state 61
    while                          shift and go to state 62
    empty                          shift and go to state 63

state 44

    (6) procedure -> declare_procedure LPARENT sentences . RPARENT SEMICOLON
    (31) sentences -> sentences . sentence
    (32) sentence -> . local_variable
    (33) sentence -> . values
    (34) sentence -> . case
    (35) sentence -> . call
    (36) sentence -> . print_values
    (37) sentence -> . alter
    (38) sentence -> . alterB
    (39) sentence -> . signal
    (40) sentence -> . viewsignal
    (41) sentence -> . sentence7
    (42) sentence -> . sentence8
    (43) sentence -> . sentence9
    (44) sentence -> . sentence10
    (45) sentence -> . sentence11
    (46) sentence -> . sentence12
    (47) sentence -> . isTrue
    (48) sentence -> . while
    (49) sentence -> . empty
    (50) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (52) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (53) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (79) case -> . CASE expression recursive_conditions SEMICOLON
    (54) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (55) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (66) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (70) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (86) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (87) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (88) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (71) sentence7 -> . ID MAQ INTEGER
    (72) sentence8 -> . ID MEQ INTEGER
    (73) sentence9 -> . ID EQUAL INTEGER
    (74) sentence10 -> . ID DIFFERENT INTEGER
    (75) sentence11 -> . ID MEQEQUAL INTEGER
    (76) sentence12 -> . ID MAQEQUAL INTEGER
    (77) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (78) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (89) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RPARENT         shift and go to state 85
    NEW             shift and go to state 64
    VALUES          shift and go to state 34
    CASE            shift and go to state 35
    CALL            shift and go to state 36
    PRINTVALUES     shift and go to state 37
    ALTER           shift and go to state 38
    ALTERB          shift and go to state 39
    SIGNAL          shift and go to state 40
    VIEWSIGNAL      shift and go to state 41
    ID              shift and go to state 33
    ISTRUE          shift and go to state 42
    WHILE           shift and go to state 43

  ! RPARENT         [ reduce using rule 89 (empty -> .) ]
  ! NEW             [ reduce using rule 89 (empty -> .) ]
  ! VALUES          [ reduce using rule 89 (empty -> .) ]
  ! CASE            [ reduce using rule 89 (empty -> .) ]
  ! CALL            [ reduce using rule 89 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 89 (empty -> .) ]
  ! ALTER           [ reduce using rule 89 (empty -> .) ]
  ! ALTERB          [ reduce using rule 89 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 89 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]

    sentence                       shift and go to state 86
    local_variable                 shift and go to state 46
    values                         shift and go to state 47
    case                           shift and go to state 48
    call                           shift and go to state 49
    print_values                   shift and go to state 50
    alter                          shift and go to state 51
    alterB                         shift and go to state 52
    signal                         shift and go to state 53
    viewsignal                     shift and go to state 54
    sentence7                      shift and go to state 55
    sentence8                      shift and go to state 56
    sentence9                      shift and go to state 57
    sentence10                     shift and go to state 58
    sentence11                     shift and go to state 59
    sentence12                     shift and go to state 60
    isTrue                         shift and go to state 61
    while                          shift and go to state 62
    empty                          shift and go to state 63

state 45

    (30) sentences -> sentence .

    RPARENT         reduce using rule 30 (sentences -> sentence .)
    NEW             reduce using rule 30 (sentences -> sentence .)
    VALUES          reduce using rule 30 (sentences -> sentence .)
    CASE            reduce using rule 30 (sentences -> sentence .)
    CALL            reduce using rule 30 (sentences -> sentence .)
    PRINTVALUES     reduce using rule 30 (sentences -> sentence .)
    ALTER           reduce using rule 30 (sentences -> sentence .)
    ALTERB          reduce using rule 30 (sentences -> sentence .)
    SIGNAL          reduce using rule 30 (sentences -> sentence .)
    VIEWSIGNAL      reduce using rule 30 (sentences -> sentence .)
    ID              reduce using rule 30 (sentences -> sentence .)
    ISTRUE          reduce using rule 30 (sentences -> sentence .)
    WHILE           reduce using rule 30 (sentences -> sentence .)
    LPARENT         reduce using rule 30 (sentences -> sentence .)


state 46

    (32) sentence -> local_variable .

    RPARENT         reduce using rule 32 (sentence -> local_variable .)
    NEW             reduce using rule 32 (sentence -> local_variable .)
    VALUES          reduce using rule 32 (sentence -> local_variable .)
    CASE            reduce using rule 32 (sentence -> local_variable .)
    CALL            reduce using rule 32 (sentence -> local_variable .)
    PRINTVALUES     reduce using rule 32 (sentence -> local_variable .)
    ALTER           reduce using rule 32 (sentence -> local_variable .)
    ALTERB          reduce using rule 32 (sentence -> local_variable .)
    SIGNAL          reduce using rule 32 (sentence -> local_variable .)
    VIEWSIGNAL      reduce using rule 32 (sentence -> local_variable .)
    ID              reduce using rule 32 (sentence -> local_variable .)
    ISTRUE          reduce using rule 32 (sentence -> local_variable .)
    WHILE           reduce using rule 32 (sentence -> local_variable .)
    LPARENT         reduce using rule 32 (sentence -> local_variable .)


state 47

    (33) sentence -> values .

    RPARENT         reduce using rule 33 (sentence -> values .)
    NEW             reduce using rule 33 (sentence -> values .)
    VALUES          reduce using rule 33 (sentence -> values .)
    CASE            reduce using rule 33 (sentence -> values .)
    CALL            reduce using rule 33 (sentence -> values .)
    PRINTVALUES     reduce using rule 33 (sentence -> values .)
    ALTER           reduce using rule 33 (sentence -> values .)
    ALTERB          reduce using rule 33 (sentence -> values .)
    SIGNAL          reduce using rule 33 (sentence -> values .)
    VIEWSIGNAL      reduce using rule 33 (sentence -> values .)
    ID              reduce using rule 33 (sentence -> values .)
    ISTRUE          reduce using rule 33 (sentence -> values .)
    WHILE           reduce using rule 33 (sentence -> values .)
    LPARENT         reduce using rule 33 (sentence -> values .)


state 48

    (34) sentence -> case .

    RPARENT         reduce using rule 34 (sentence -> case .)
    NEW             reduce using rule 34 (sentence -> case .)
    VALUES          reduce using rule 34 (sentence -> case .)
    CASE            reduce using rule 34 (sentence -> case .)
    CALL            reduce using rule 34 (sentence -> case .)
    PRINTVALUES     reduce using rule 34 (sentence -> case .)
    ALTER           reduce using rule 34 (sentence -> case .)
    ALTERB          reduce using rule 34 (sentence -> case .)
    SIGNAL          reduce using rule 34 (sentence -> case .)
    VIEWSIGNAL      reduce using rule 34 (sentence -> case .)
    ID              reduce using rule 34 (sentence -> case .)
    ISTRUE          reduce using rule 34 (sentence -> case .)
    WHILE           reduce using rule 34 (sentence -> case .)
    LPARENT         reduce using rule 34 (sentence -> case .)


state 49

    (35) sentence -> call .

    RPARENT         reduce using rule 35 (sentence -> call .)
    NEW             reduce using rule 35 (sentence -> call .)
    VALUES          reduce using rule 35 (sentence -> call .)
    CASE            reduce using rule 35 (sentence -> call .)
    CALL            reduce using rule 35 (sentence -> call .)
    PRINTVALUES     reduce using rule 35 (sentence -> call .)
    ALTER           reduce using rule 35 (sentence -> call .)
    ALTERB          reduce using rule 35 (sentence -> call .)
    SIGNAL          reduce using rule 35 (sentence -> call .)
    VIEWSIGNAL      reduce using rule 35 (sentence -> call .)
    ID              reduce using rule 35 (sentence -> call .)
    ISTRUE          reduce using rule 35 (sentence -> call .)
    WHILE           reduce using rule 35 (sentence -> call .)
    LPARENT         reduce using rule 35 (sentence -> call .)


state 50

    (36) sentence -> print_values .

    RPARENT         reduce using rule 36 (sentence -> print_values .)
    NEW             reduce using rule 36 (sentence -> print_values .)
    VALUES          reduce using rule 36 (sentence -> print_values .)
    CASE            reduce using rule 36 (sentence -> print_values .)
    CALL            reduce using rule 36 (sentence -> print_values .)
    PRINTVALUES     reduce using rule 36 (sentence -> print_values .)
    ALTER           reduce using rule 36 (sentence -> print_values .)
    ALTERB          reduce using rule 36 (sentence -> print_values .)
    SIGNAL          reduce using rule 36 (sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 36 (sentence -> print_values .)
    ID              reduce using rule 36 (sentence -> print_values .)
    ISTRUE          reduce using rule 36 (sentence -> print_values .)
    WHILE           reduce using rule 36 (sentence -> print_values .)
    LPARENT         reduce using rule 36 (sentence -> print_values .)


state 51

    (37) sentence -> alter .

    RPARENT         reduce using rule 37 (sentence -> alter .)
    NEW             reduce using rule 37 (sentence -> alter .)
    VALUES          reduce using rule 37 (sentence -> alter .)
    CASE            reduce using rule 37 (sentence -> alter .)
    CALL            reduce using rule 37 (sentence -> alter .)
    PRINTVALUES     reduce using rule 37 (sentence -> alter .)
    ALTER           reduce using rule 37 (sentence -> alter .)
    ALTERB          reduce using rule 37 (sentence -> alter .)
    SIGNAL          reduce using rule 37 (sentence -> alter .)
    VIEWSIGNAL      reduce using rule 37 (sentence -> alter .)
    ID              reduce using rule 37 (sentence -> alter .)
    ISTRUE          reduce using rule 37 (sentence -> alter .)
    WHILE           reduce using rule 37 (sentence -> alter .)
    LPARENT         reduce using rule 37 (sentence -> alter .)


state 52

    (38) sentence -> alterB .

    RPARENT         reduce using rule 38 (sentence -> alterB .)
    NEW             reduce using rule 38 (sentence -> alterB .)
    VALUES          reduce using rule 38 (sentence -> alterB .)
    CASE            reduce using rule 38 (sentence -> alterB .)
    CALL            reduce using rule 38 (sentence -> alterB .)
    PRINTVALUES     reduce using rule 38 (sentence -> alterB .)
    ALTER           reduce using rule 38 (sentence -> alterB .)
    ALTERB          reduce using rule 38 (sentence -> alterB .)
    SIGNAL          reduce using rule 38 (sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 38 (sentence -> alterB .)
    ID              reduce using rule 38 (sentence -> alterB .)
    ISTRUE          reduce using rule 38 (sentence -> alterB .)
    WHILE           reduce using rule 38 (sentence -> alterB .)
    LPARENT         reduce using rule 38 (sentence -> alterB .)


state 53

    (39) sentence -> signal .

    RPARENT         reduce using rule 39 (sentence -> signal .)
    NEW             reduce using rule 39 (sentence -> signal .)
    VALUES          reduce using rule 39 (sentence -> signal .)
    CASE            reduce using rule 39 (sentence -> signal .)
    CALL            reduce using rule 39 (sentence -> signal .)
    PRINTVALUES     reduce using rule 39 (sentence -> signal .)
    ALTER           reduce using rule 39 (sentence -> signal .)
    ALTERB          reduce using rule 39 (sentence -> signal .)
    SIGNAL          reduce using rule 39 (sentence -> signal .)
    VIEWSIGNAL      reduce using rule 39 (sentence -> signal .)
    ID              reduce using rule 39 (sentence -> signal .)
    ISTRUE          reduce using rule 39 (sentence -> signal .)
    WHILE           reduce using rule 39 (sentence -> signal .)
    LPARENT         reduce using rule 39 (sentence -> signal .)


state 54

    (40) sentence -> viewsignal .

    RPARENT         reduce using rule 40 (sentence -> viewsignal .)
    NEW             reduce using rule 40 (sentence -> viewsignal .)
    VALUES          reduce using rule 40 (sentence -> viewsignal .)
    CASE            reduce using rule 40 (sentence -> viewsignal .)
    CALL            reduce using rule 40 (sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 40 (sentence -> viewsignal .)
    ALTER           reduce using rule 40 (sentence -> viewsignal .)
    ALTERB          reduce using rule 40 (sentence -> viewsignal .)
    SIGNAL          reduce using rule 40 (sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 40 (sentence -> viewsignal .)
    ID              reduce using rule 40 (sentence -> viewsignal .)
    ISTRUE          reduce using rule 40 (sentence -> viewsignal .)
    WHILE           reduce using rule 40 (sentence -> viewsignal .)
    LPARENT         reduce using rule 40 (sentence -> viewsignal .)


state 55

    (41) sentence -> sentence7 .

    RPARENT         reduce using rule 41 (sentence -> sentence7 .)
    NEW             reduce using rule 41 (sentence -> sentence7 .)
    VALUES          reduce using rule 41 (sentence -> sentence7 .)
    CASE            reduce using rule 41 (sentence -> sentence7 .)
    CALL            reduce using rule 41 (sentence -> sentence7 .)
    PRINTVALUES     reduce using rule 41 (sentence -> sentence7 .)
    ALTER           reduce using rule 41 (sentence -> sentence7 .)
    ALTERB          reduce using rule 41 (sentence -> sentence7 .)
    SIGNAL          reduce using rule 41 (sentence -> sentence7 .)
    VIEWSIGNAL      reduce using rule 41 (sentence -> sentence7 .)
    ID              reduce using rule 41 (sentence -> sentence7 .)
    ISTRUE          reduce using rule 41 (sentence -> sentence7 .)
    WHILE           reduce using rule 41 (sentence -> sentence7 .)
    LPARENT         reduce using rule 41 (sentence -> sentence7 .)


state 56

    (42) sentence -> sentence8 .

    RPARENT         reduce using rule 42 (sentence -> sentence8 .)
    NEW             reduce using rule 42 (sentence -> sentence8 .)
    VALUES          reduce using rule 42 (sentence -> sentence8 .)
    CASE            reduce using rule 42 (sentence -> sentence8 .)
    CALL            reduce using rule 42 (sentence -> sentence8 .)
    PRINTVALUES     reduce using rule 42 (sentence -> sentence8 .)
    ALTER           reduce using rule 42 (sentence -> sentence8 .)
    ALTERB          reduce using rule 42 (sentence -> sentence8 .)
    SIGNAL          reduce using rule 42 (sentence -> sentence8 .)
    VIEWSIGNAL      reduce using rule 42 (sentence -> sentence8 .)
    ID              reduce using rule 42 (sentence -> sentence8 .)
    ISTRUE          reduce using rule 42 (sentence -> sentence8 .)
    WHILE           reduce using rule 42 (sentence -> sentence8 .)
    LPARENT         reduce using rule 42 (sentence -> sentence8 .)


state 57

    (43) sentence -> sentence9 .

    RPARENT         reduce using rule 43 (sentence -> sentence9 .)
    NEW             reduce using rule 43 (sentence -> sentence9 .)
    VALUES          reduce using rule 43 (sentence -> sentence9 .)
    CASE            reduce using rule 43 (sentence -> sentence9 .)
    CALL            reduce using rule 43 (sentence -> sentence9 .)
    PRINTVALUES     reduce using rule 43 (sentence -> sentence9 .)
    ALTER           reduce using rule 43 (sentence -> sentence9 .)
    ALTERB          reduce using rule 43 (sentence -> sentence9 .)
    SIGNAL          reduce using rule 43 (sentence -> sentence9 .)
    VIEWSIGNAL      reduce using rule 43 (sentence -> sentence9 .)
    ID              reduce using rule 43 (sentence -> sentence9 .)
    ISTRUE          reduce using rule 43 (sentence -> sentence9 .)
    WHILE           reduce using rule 43 (sentence -> sentence9 .)
    LPARENT         reduce using rule 43 (sentence -> sentence9 .)


state 58

    (44) sentence -> sentence10 .

    RPARENT         reduce using rule 44 (sentence -> sentence10 .)
    NEW             reduce using rule 44 (sentence -> sentence10 .)
    VALUES          reduce using rule 44 (sentence -> sentence10 .)
    CASE            reduce using rule 44 (sentence -> sentence10 .)
    CALL            reduce using rule 44 (sentence -> sentence10 .)
    PRINTVALUES     reduce using rule 44 (sentence -> sentence10 .)
    ALTER           reduce using rule 44 (sentence -> sentence10 .)
    ALTERB          reduce using rule 44 (sentence -> sentence10 .)
    SIGNAL          reduce using rule 44 (sentence -> sentence10 .)
    VIEWSIGNAL      reduce using rule 44 (sentence -> sentence10 .)
    ID              reduce using rule 44 (sentence -> sentence10 .)
    ISTRUE          reduce using rule 44 (sentence -> sentence10 .)
    WHILE           reduce using rule 44 (sentence -> sentence10 .)
    LPARENT         reduce using rule 44 (sentence -> sentence10 .)


state 59

    (45) sentence -> sentence11 .

    RPARENT         reduce using rule 45 (sentence -> sentence11 .)
    NEW             reduce using rule 45 (sentence -> sentence11 .)
    VALUES          reduce using rule 45 (sentence -> sentence11 .)
    CASE            reduce using rule 45 (sentence -> sentence11 .)
    CALL            reduce using rule 45 (sentence -> sentence11 .)
    PRINTVALUES     reduce using rule 45 (sentence -> sentence11 .)
    ALTER           reduce using rule 45 (sentence -> sentence11 .)
    ALTERB          reduce using rule 45 (sentence -> sentence11 .)
    SIGNAL          reduce using rule 45 (sentence -> sentence11 .)
    VIEWSIGNAL      reduce using rule 45 (sentence -> sentence11 .)
    ID              reduce using rule 45 (sentence -> sentence11 .)
    ISTRUE          reduce using rule 45 (sentence -> sentence11 .)
    WHILE           reduce using rule 45 (sentence -> sentence11 .)
    LPARENT         reduce using rule 45 (sentence -> sentence11 .)


state 60

    (46) sentence -> sentence12 .

    RPARENT         reduce using rule 46 (sentence -> sentence12 .)
    NEW             reduce using rule 46 (sentence -> sentence12 .)
    VALUES          reduce using rule 46 (sentence -> sentence12 .)
    CASE            reduce using rule 46 (sentence -> sentence12 .)
    CALL            reduce using rule 46 (sentence -> sentence12 .)
    PRINTVALUES     reduce using rule 46 (sentence -> sentence12 .)
    ALTER           reduce using rule 46 (sentence -> sentence12 .)
    ALTERB          reduce using rule 46 (sentence -> sentence12 .)
    SIGNAL          reduce using rule 46 (sentence -> sentence12 .)
    VIEWSIGNAL      reduce using rule 46 (sentence -> sentence12 .)
    ID              reduce using rule 46 (sentence -> sentence12 .)
    ISTRUE          reduce using rule 46 (sentence -> sentence12 .)
    WHILE           reduce using rule 46 (sentence -> sentence12 .)
    LPARENT         reduce using rule 46 (sentence -> sentence12 .)


state 61

    (47) sentence -> isTrue .

    RPARENT         reduce using rule 47 (sentence -> isTrue .)
    NEW             reduce using rule 47 (sentence -> isTrue .)
    VALUES          reduce using rule 47 (sentence -> isTrue .)
    CASE            reduce using rule 47 (sentence -> isTrue .)
    CALL            reduce using rule 47 (sentence -> isTrue .)
    PRINTVALUES     reduce using rule 47 (sentence -> isTrue .)
    ALTER           reduce using rule 47 (sentence -> isTrue .)
    ALTERB          reduce using rule 47 (sentence -> isTrue .)
    SIGNAL          reduce using rule 47 (sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 47 (sentence -> isTrue .)
    ID              reduce using rule 47 (sentence -> isTrue .)
    ISTRUE          reduce using rule 47 (sentence -> isTrue .)
    WHILE           reduce using rule 47 (sentence -> isTrue .)
    LPARENT         reduce using rule 47 (sentence -> isTrue .)


state 62

    (48) sentence -> while .

    RPARENT         reduce using rule 48 (sentence -> while .)
    NEW             reduce using rule 48 (sentence -> while .)
    VALUES          reduce using rule 48 (sentence -> while .)
    CASE            reduce using rule 48 (sentence -> while .)
    CALL            reduce using rule 48 (sentence -> while .)
    PRINTVALUES     reduce using rule 48 (sentence -> while .)
    ALTER           reduce using rule 48 (sentence -> while .)
    ALTERB          reduce using rule 48 (sentence -> while .)
    SIGNAL          reduce using rule 48 (sentence -> while .)
    VIEWSIGNAL      reduce using rule 48 (sentence -> while .)
    ID              reduce using rule 48 (sentence -> while .)
    ISTRUE          reduce using rule 48 (sentence -> while .)
    WHILE           reduce using rule 48 (sentence -> while .)
    LPARENT         reduce using rule 48 (sentence -> while .)


state 63

    (49) sentence -> empty .

    RPARENT         reduce using rule 49 (sentence -> empty .)
    NEW             reduce using rule 49 (sentence -> empty .)
    VALUES          reduce using rule 49 (sentence -> empty .)
    CASE            reduce using rule 49 (sentence -> empty .)
    CALL            reduce using rule 49 (sentence -> empty .)
    PRINTVALUES     reduce using rule 49 (sentence -> empty .)
    ALTER           reduce using rule 49 (sentence -> empty .)
    ALTERB          reduce using rule 49 (sentence -> empty .)
    SIGNAL          reduce using rule 49 (sentence -> empty .)
    VIEWSIGNAL      reduce using rule 49 (sentence -> empty .)
    ID              reduce using rule 49 (sentence -> empty .)
    ISTRUE          reduce using rule 49 (sentence -> empty .)
    WHILE           reduce using rule 49 (sentence -> empty .)
    LPARENT         reduce using rule 49 (sentence -> empty .)


state 64

    (50) local_variable -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 87


state 65

    (7) master -> MASTER LPARENT master_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 88


state 66

    (9) master_sentences -> master_sentences master_sentence .

    RPARENT         reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    NEW             reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    VALUES          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    CASE            reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    CALL            reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    PRINTVALUES     reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ALTER           reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ALTERB          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    SIGNAL          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    VIEWSIGNAL      reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ID              reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ISTRUE          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    WHILE           reduce using rule 9 (master_sentences -> master_sentences master_sentence .)


state 67

    (28) master_var -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (29) master_var -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 89


state 68

    (71) sentence7 -> ID MAQ . INTEGER

    INTEGER         shift and go to state 90


state 69

    (72) sentence8 -> ID MEQ . INTEGER

    INTEGER         shift and go to state 91


state 70

    (73) sentence9 -> ID EQUAL . INTEGER

    INTEGER         shift and go to state 92


state 71

    (74) sentence10 -> ID DIFFERENT . INTEGER

    INTEGER         shift and go to state 93


state 72

    (75) sentence11 -> ID MEQEQUAL . INTEGER

    INTEGER         shift and go to state 94


state 73

    (76) sentence12 -> ID MAQEQUAL . INTEGER

    INTEGER         shift and go to state 95


state 74

    (52) values -> VALUES LPARENT . ID COMA INTEGER RPARENT SEMICOLON
    (53) values -> VALUES LPARENT . ID COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 96


state 75

    (79) case -> CASE expression . recursive_conditions SEMICOLON
    (81) recursive_conditions -> . recursive_condition
    (82) recursive_conditions -> . recursive_conditions recursive_condition
    (83) recursive_condition -> . condition LPARENT sentences RPARENT
    (85) condition -> . WHEN INTEGER THEN

    WHEN            shift and go to state 100

    recursive_conditions           shift and go to state 97
    recursive_condition            shift and go to state 98
    condition                      shift and go to state 99

state 76

    (84) expression -> ID .

    WHEN            reduce using rule 84 (expression -> ID .)


state 77

    (54) call -> CALL LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 101


state 78

    (55) print_values -> PRINTVALUES LPARENT . printable_sentences RPARENT SEMICOLON
    (56) printable_sentences -> . printable_sentence_var
    (57) printable_sentences -> . printable_sentence_string
    (58) printable_sentences -> . printable_sentence_var PLUS printable_sentence_var
    (59) printable_sentences -> . printable_sentence_string PLUS printable_sentence_string
    (60) printable_sentences -> . printable_sentence_var PLUS printable_sentence_string
    (61) printable_sentences -> . printable_sentence_string PLUS printable_sentence_var
    (62) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_var
    (63) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_string
    (64) printable_sentence_var -> . ID
    (65) printable_sentence_string -> . STRING

    PLUS            shift and go to state 105
    ID              shift and go to state 106
    STRING          shift and go to state 107

    printable_sentences            shift and go to state 102
    printable_sentence_var         shift and go to state 103
    printable_sentence_string      shift and go to state 104

state 79

    (66) alter -> ALTER LPARENT . ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> ALTER LPARENT . ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> ALTER LPARENT . ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> ALTER LPARENT . ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    ID              shift and go to state 108


state 80

    (70) alterB -> ALTERB LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 109


state 81

    (86) signal -> SIGNAL LPARENT . INTEGER COMA INTEGER RPARENT SEMICOLON
    (87) signal -> SIGNAL LPARENT . ID COMA INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 110
    ID              shift and go to state 111


state 82

    (88) viewsignal -> VIEWSIGNAL LPARENT . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 112


state 83

    (77) isTrue -> ISTRUE LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 113


state 84

    (78) while -> WHILE sentences . LPARENT sentences RPARENT SEMICOLON
    (31) sentences -> sentences . sentence
    (32) sentence -> . local_variable
    (33) sentence -> . values
    (34) sentence -> . case
    (35) sentence -> . call
    (36) sentence -> . print_values
    (37) sentence -> . alter
    (38) sentence -> . alterB
    (39) sentence -> . signal
    (40) sentence -> . viewsignal
    (41) sentence -> . sentence7
    (42) sentence -> . sentence8
    (43) sentence -> . sentence9
    (44) sentence -> . sentence10
    (45) sentence -> . sentence11
    (46) sentence -> . sentence12
    (47) sentence -> . isTrue
    (48) sentence -> . while
    (49) sentence -> . empty
    (50) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (52) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (53) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (79) case -> . CASE expression recursive_conditions SEMICOLON
    (54) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (55) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (66) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (70) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (86) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (87) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (88) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (71) sentence7 -> . ID MAQ INTEGER
    (72) sentence8 -> . ID MEQ INTEGER
    (73) sentence9 -> . ID EQUAL INTEGER
    (74) sentence10 -> . ID DIFFERENT INTEGER
    (75) sentence11 -> . ID MEQEQUAL INTEGER
    (76) sentence12 -> . ID MAQEQUAL INTEGER
    (77) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (78) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (89) empty -> .

  ! shift/reduce conflict for LPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    LPARENT         shift and go to state 114
    NEW             shift and go to state 64
    VALUES          shift and go to state 34
    CASE            shift and go to state 35
    CALL            shift and go to state 36
    PRINTVALUES     shift and go to state 37
    ALTER           shift and go to state 38
    ALTERB          shift and go to state 39
    SIGNAL          shift and go to state 40
    VIEWSIGNAL      shift and go to state 41
    ID              shift and go to state 33
    ISTRUE          shift and go to state 42
    WHILE           shift and go to state 43

  ! LPARENT         [ reduce using rule 89 (empty -> .) ]
  ! NEW             [ reduce using rule 89 (empty -> .) ]
  ! VALUES          [ reduce using rule 89 (empty -> .) ]
  ! CASE            [ reduce using rule 89 (empty -> .) ]
  ! CALL            [ reduce using rule 89 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 89 (empty -> .) ]
  ! ALTER           [ reduce using rule 89 (empty -> .) ]
  ! ALTERB          [ reduce using rule 89 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 89 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]

    sentence                       shift and go to state 86
    local_variable                 shift and go to state 46
    values                         shift and go to state 47
    case                           shift and go to state 48
    call                           shift and go to state 49
    print_values                   shift and go to state 50
    alter                          shift and go to state 51
    alterB                         shift and go to state 52
    signal                         shift and go to state 53
    viewsignal                     shift and go to state 54
    sentence7                      shift and go to state 55
    sentence8                      shift and go to state 56
    sentence9                      shift and go to state 57
    sentence10                     shift and go to state 58
    sentence11                     shift and go to state 59
    sentence12                     shift and go to state 60
    isTrue                         shift and go to state 61
    while                          shift and go to state 62
    empty                          shift and go to state 63

state 85

    (6) procedure -> declare_procedure LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 115


state 86

    (31) sentences -> sentences sentence .

    RPARENT         reduce using rule 31 (sentences -> sentences sentence .)
    NEW             reduce using rule 31 (sentences -> sentences sentence .)
    VALUES          reduce using rule 31 (sentences -> sentences sentence .)
    CASE            reduce using rule 31 (sentences -> sentences sentence .)
    CALL            reduce using rule 31 (sentences -> sentences sentence .)
    PRINTVALUES     reduce using rule 31 (sentences -> sentences sentence .)
    ALTER           reduce using rule 31 (sentences -> sentences sentence .)
    ALTERB          reduce using rule 31 (sentences -> sentences sentence .)
    SIGNAL          reduce using rule 31 (sentences -> sentences sentence .)
    VIEWSIGNAL      reduce using rule 31 (sentences -> sentences sentence .)
    ID              reduce using rule 31 (sentences -> sentences sentence .)
    ISTRUE          reduce using rule 31 (sentences -> sentences sentence .)
    WHILE           reduce using rule 31 (sentences -> sentences sentence .)
    LPARENT         reduce using rule 31 (sentences -> sentences sentence .)


state 87

    (50) local_variable -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 116


state 88

    (7) master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .

    PROC            reduce using rule 7 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)
    $end            reduce using rule 7 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)


state 89

    (28) master_var -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (29) master_var -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 117


state 90

    (71) sentence7 -> ID MAQ INTEGER .

    RPARENT         reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    NEW             reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    VALUES          reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    CASE            reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    CALL            reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    PRINTVALUES     reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    ALTER           reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    ALTERB          reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    SIGNAL          reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    VIEWSIGNAL      reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    ID              reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    ISTRUE          reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    WHILE           reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)
    LPARENT         reduce using rule 71 (sentence7 -> ID MAQ INTEGER .)


state 91

    (72) sentence8 -> ID MEQ INTEGER .

    RPARENT         reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    NEW             reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    VALUES          reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    CASE            reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    CALL            reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    PRINTVALUES     reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    ALTER           reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    ALTERB          reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    SIGNAL          reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    VIEWSIGNAL      reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    ID              reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    ISTRUE          reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    WHILE           reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)
    LPARENT         reduce using rule 72 (sentence8 -> ID MEQ INTEGER .)


state 92

    (73) sentence9 -> ID EQUAL INTEGER .

    RPARENT         reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    NEW             reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    VALUES          reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    CASE            reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    CALL            reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    PRINTVALUES     reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    ALTER           reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    ALTERB          reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    SIGNAL          reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    ID              reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    ISTRUE          reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    WHILE           reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)
    LPARENT         reduce using rule 73 (sentence9 -> ID EQUAL INTEGER .)


state 93

    (74) sentence10 -> ID DIFFERENT INTEGER .

    RPARENT         reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    NEW             reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    VALUES          reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    CASE            reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    CALL            reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    PRINTVALUES     reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    ALTER           reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    ALTERB          reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    SIGNAL          reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    VIEWSIGNAL      reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    ID              reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    ISTRUE          reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    WHILE           reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)
    LPARENT         reduce using rule 74 (sentence10 -> ID DIFFERENT INTEGER .)


state 94

    (75) sentence11 -> ID MEQEQUAL INTEGER .

    RPARENT         reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    NEW             reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    VALUES          reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    CASE            reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    CALL            reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    ALTER           reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    ALTERB          reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    SIGNAL          reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    ID              reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    ISTRUE          reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    WHILE           reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)
    LPARENT         reduce using rule 75 (sentence11 -> ID MEQEQUAL INTEGER .)


state 95

    (76) sentence12 -> ID MAQEQUAL INTEGER .

    RPARENT         reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    NEW             reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    VALUES          reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    CASE            reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    CALL            reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    ALTER           reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    ALTERB          reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    SIGNAL          reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    ID              reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    ISTRUE          reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    WHILE           reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)
    LPARENT         reduce using rule 76 (sentence12 -> ID MAQEQUAL INTEGER .)


state 96

    (52) values -> VALUES LPARENT ID . COMA INTEGER RPARENT SEMICOLON
    (53) values -> VALUES LPARENT ID . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 118


state 97

    (79) case -> CASE expression recursive_conditions . SEMICOLON
    (82) recursive_conditions -> recursive_conditions . recursive_condition
    (83) recursive_condition -> . condition LPARENT sentences RPARENT
    (85) condition -> . WHEN INTEGER THEN

    SEMICOLON       shift and go to state 119
    WHEN            shift and go to state 100

    recursive_condition            shift and go to state 120
    condition                      shift and go to state 99

state 98

    (81) recursive_conditions -> recursive_condition .

    SEMICOLON       reduce using rule 81 (recursive_conditions -> recursive_condition .)
    WHEN            reduce using rule 81 (recursive_conditions -> recursive_condition .)


state 99

    (83) recursive_condition -> condition . LPARENT sentences RPARENT

    LPARENT         shift and go to state 121


state 100

    (85) condition -> WHEN . INTEGER THEN

    INTEGER         shift and go to state 122


state 101

    (54) call -> CALL LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 123


state 102

    (55) print_values -> PRINTVALUES LPARENT printable_sentences . RPARENT SEMICOLON

    RPARENT         shift and go to state 124


state 103

    (56) printable_sentences -> printable_sentence_var .
    (58) printable_sentences -> printable_sentence_var . PLUS printable_sentence_var
    (60) printable_sentences -> printable_sentence_var . PLUS printable_sentence_string

  ! shift/reduce conflict for PLUS resolved as shift
    RPARENT         reduce using rule 56 (printable_sentences -> printable_sentence_var .)
    PLUS            shift and go to state 125

  ! PLUS            [ reduce using rule 56 (printable_sentences -> printable_sentence_var .) ]


state 104

    (57) printable_sentences -> printable_sentence_string .
    (59) printable_sentences -> printable_sentence_string . PLUS printable_sentence_string
    (61) printable_sentences -> printable_sentence_string . PLUS printable_sentence_var

  ! shift/reduce conflict for PLUS resolved as shift
    RPARENT         reduce using rule 57 (printable_sentences -> printable_sentence_string .)
    PLUS            shift and go to state 126

  ! PLUS            [ reduce using rule 57 (printable_sentences -> printable_sentence_string .) ]


state 105

    (62) printable_sentences -> PLUS . printable_sentences PLUS printable_sentence_var
    (63) printable_sentences -> PLUS . printable_sentences PLUS printable_sentence_string
    (56) printable_sentences -> . printable_sentence_var
    (57) printable_sentences -> . printable_sentence_string
    (58) printable_sentences -> . printable_sentence_var PLUS printable_sentence_var
    (59) printable_sentences -> . printable_sentence_string PLUS printable_sentence_string
    (60) printable_sentences -> . printable_sentence_var PLUS printable_sentence_string
    (61) printable_sentences -> . printable_sentence_string PLUS printable_sentence_var
    (62) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_var
    (63) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_string
    (64) printable_sentence_var -> . ID
    (65) printable_sentence_string -> . STRING

    PLUS            shift and go to state 105
    ID              shift and go to state 106
    STRING          shift and go to state 107

    printable_sentences            shift and go to state 127
    printable_sentence_var         shift and go to state 103
    printable_sentence_string      shift and go to state 104

state 106

    (64) printable_sentence_var -> ID .

    PLUS            reduce using rule 64 (printable_sentence_var -> ID .)
    RPARENT         reduce using rule 64 (printable_sentence_var -> ID .)


state 107

    (65) printable_sentence_string -> STRING .

    PLUS            reduce using rule 65 (printable_sentence_string -> STRING .)
    RPARENT         reduce using rule 65 (printable_sentence_string -> STRING .)


state 108

    (66) alter -> ALTER LPARENT ID . COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> ALTER LPARENT ID . COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> ALTER LPARENT ID . COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> ALTER LPARENT ID . COMA DIV COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 128


state 109

    (70) alterB -> ALTERB LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 129


state 110

    (86) signal -> SIGNAL LPARENT INTEGER . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 130


state 111

    (87) signal -> SIGNAL LPARENT ID . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 131


state 112

    (88) viewsignal -> VIEWSIGNAL LPARENT INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 132


state 113

    (77) isTrue -> ISTRUE LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 133


state 114

    (78) while -> WHILE sentences LPARENT . sentences RPARENT SEMICOLON
    (30) sentences -> . sentence
    (31) sentences -> . sentences sentence
    (32) sentence -> . local_variable
    (33) sentence -> . values
    (34) sentence -> . case
    (35) sentence -> . call
    (36) sentence -> . print_values
    (37) sentence -> . alter
    (38) sentence -> . alterB
    (39) sentence -> . signal
    (40) sentence -> . viewsignal
    (41) sentence -> . sentence7
    (42) sentence -> . sentence8
    (43) sentence -> . sentence9
    (44) sentence -> . sentence10
    (45) sentence -> . sentence11
    (46) sentence -> . sentence12
    (47) sentence -> . isTrue
    (48) sentence -> . while
    (49) sentence -> . empty
    (50) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (52) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (53) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (79) case -> . CASE expression recursive_conditions SEMICOLON
    (54) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (55) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (66) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (70) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (86) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (87) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (88) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (71) sentence7 -> . ID MAQ INTEGER
    (72) sentence8 -> . ID MEQ INTEGER
    (73) sentence9 -> . ID EQUAL INTEGER
    (74) sentence10 -> . ID DIFFERENT INTEGER
    (75) sentence11 -> . ID MEQEQUAL INTEGER
    (76) sentence12 -> . ID MAQEQUAL INTEGER
    (77) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (78) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (89) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    NEW             shift and go to state 64
    VALUES          shift and go to state 34
    CASE            shift and go to state 35
    CALL            shift and go to state 36
    PRINTVALUES     shift and go to state 37
    ALTER           shift and go to state 38
    ALTERB          shift and go to state 39
    SIGNAL          shift and go to state 40
    VIEWSIGNAL      shift and go to state 41
    ID              shift and go to state 33
    ISTRUE          shift and go to state 42
    WHILE           shift and go to state 43
    RPARENT         reduce using rule 89 (empty -> .)

  ! NEW             [ reduce using rule 89 (empty -> .) ]
  ! VALUES          [ reduce using rule 89 (empty -> .) ]
  ! CASE            [ reduce using rule 89 (empty -> .) ]
  ! CALL            [ reduce using rule 89 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 89 (empty -> .) ]
  ! ALTER           [ reduce using rule 89 (empty -> .) ]
  ! ALTERB          [ reduce using rule 89 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 89 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]

    sentences                      shift and go to state 134
    sentence                       shift and go to state 45
    local_variable                 shift and go to state 46
    values                         shift and go to state 47
    case                           shift and go to state 48
    call                           shift and go to state 49
    print_values                   shift and go to state 50
    alter                          shift and go to state 51
    alterB                         shift and go to state 52
    signal                         shift and go to state 53
    viewsignal                     shift and go to state 54
    sentence7                      shift and go to state 55
    sentence8                      shift and go to state 56
    sentence9                      shift and go to state 57
    sentence10                     shift and go to state 58
    sentence11                     shift and go to state 59
    sentence12                     shift and go to state 60
    isTrue                         shift and go to state 61
    while                          shift and go to state 62
    empty                          shift and go to state 63

state 115

    (6) procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .

    PROC            reduce using rule 6 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)
    $end            reduce using rule 6 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)


state 116

    (50) local_variable -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 135


state 117

    (28) master_var -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (29) master_var -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON

    TYPE            shift and go to state 136


state 118

    (52) values -> VALUES LPARENT ID COMA . INTEGER RPARENT SEMICOLON
    (53) values -> VALUES LPARENT ID COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 137
    BOOL            shift and go to state 138


state 119

    (79) case -> CASE expression recursive_conditions SEMICOLON .

    RPARENT         reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    NEW             reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    VALUES          reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    CASE            reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    CALL            reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    PRINTVALUES     reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    ALTER           reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    ALTERB          reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    SIGNAL          reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    VIEWSIGNAL      reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    ID              reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    ISTRUE          reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    WHILE           reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)
    LPARENT         reduce using rule 79 (case -> CASE expression recursive_conditions SEMICOLON .)


state 120

    (82) recursive_conditions -> recursive_conditions recursive_condition .

    SEMICOLON       reduce using rule 82 (recursive_conditions -> recursive_conditions recursive_condition .)
    WHEN            reduce using rule 82 (recursive_conditions -> recursive_conditions recursive_condition .)


state 121

    (83) recursive_condition -> condition LPARENT . sentences RPARENT
    (30) sentences -> . sentence
    (31) sentences -> . sentences sentence
    (32) sentence -> . local_variable
    (33) sentence -> . values
    (34) sentence -> . case
    (35) sentence -> . call
    (36) sentence -> . print_values
    (37) sentence -> . alter
    (38) sentence -> . alterB
    (39) sentence -> . signal
    (40) sentence -> . viewsignal
    (41) sentence -> . sentence7
    (42) sentence -> . sentence8
    (43) sentence -> . sentence9
    (44) sentence -> . sentence10
    (45) sentence -> . sentence11
    (46) sentence -> . sentence12
    (47) sentence -> . isTrue
    (48) sentence -> . while
    (49) sentence -> . empty
    (50) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (52) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (53) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (79) case -> . CASE expression recursive_conditions SEMICOLON
    (54) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (55) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (66) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (70) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (86) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (87) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (88) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (71) sentence7 -> . ID MAQ INTEGER
    (72) sentence8 -> . ID MEQ INTEGER
    (73) sentence9 -> . ID EQUAL INTEGER
    (74) sentence10 -> . ID DIFFERENT INTEGER
    (75) sentence11 -> . ID MEQEQUAL INTEGER
    (76) sentence12 -> . ID MAQEQUAL INTEGER
    (77) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (78) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (89) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    NEW             shift and go to state 64
    VALUES          shift and go to state 34
    CASE            shift and go to state 35
    CALL            shift and go to state 36
    PRINTVALUES     shift and go to state 37
    ALTER           shift and go to state 38
    ALTERB          shift and go to state 39
    SIGNAL          shift and go to state 40
    VIEWSIGNAL      shift and go to state 41
    ID              shift and go to state 33
    ISTRUE          shift and go to state 42
    WHILE           shift and go to state 43
    RPARENT         reduce using rule 89 (empty -> .)

  ! NEW             [ reduce using rule 89 (empty -> .) ]
  ! VALUES          [ reduce using rule 89 (empty -> .) ]
  ! CASE            [ reduce using rule 89 (empty -> .) ]
  ! CALL            [ reduce using rule 89 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 89 (empty -> .) ]
  ! ALTER           [ reduce using rule 89 (empty -> .) ]
  ! ALTERB          [ reduce using rule 89 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 89 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]

    sentences                      shift and go to state 139
    sentence                       shift and go to state 45
    local_variable                 shift and go to state 46
    values                         shift and go to state 47
    case                           shift and go to state 48
    call                           shift and go to state 49
    print_values                   shift and go to state 50
    alter                          shift and go to state 51
    alterB                         shift and go to state 52
    signal                         shift and go to state 53
    viewsignal                     shift and go to state 54
    sentence7                      shift and go to state 55
    sentence8                      shift and go to state 56
    sentence9                      shift and go to state 57
    sentence10                     shift and go to state 58
    sentence11                     shift and go to state 59
    sentence12                     shift and go to state 60
    isTrue                         shift and go to state 61
    while                          shift and go to state 62
    empty                          shift and go to state 63

state 122

    (85) condition -> WHEN INTEGER . THEN

    THEN            shift and go to state 140


state 123

    (54) call -> CALL LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 141


state 124

    (55) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 142


state 125

    (58) printable_sentences -> printable_sentence_var PLUS . printable_sentence_var
    (60) printable_sentences -> printable_sentence_var PLUS . printable_sentence_string
    (64) printable_sentence_var -> . ID
    (65) printable_sentence_string -> . STRING

    ID              shift and go to state 106
    STRING          shift and go to state 107

    printable_sentence_var         shift and go to state 143
    printable_sentence_string      shift and go to state 144

state 126

    (59) printable_sentences -> printable_sentence_string PLUS . printable_sentence_string
    (61) printable_sentences -> printable_sentence_string PLUS . printable_sentence_var
    (65) printable_sentence_string -> . STRING
    (64) printable_sentence_var -> . ID

    STRING          shift and go to state 107
    ID              shift and go to state 106

    printable_sentence_string      shift and go to state 145
    printable_sentence_var         shift and go to state 146

state 127

    (62) printable_sentences -> PLUS printable_sentences . PLUS printable_sentence_var
    (63) printable_sentences -> PLUS printable_sentences . PLUS printable_sentence_string

    PLUS            shift and go to state 147


state 128

    (66) alter -> ALTER LPARENT ID COMA . ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> ALTER LPARENT ID COMA . SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> ALTER LPARENT ID COMA . MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> ALTER LPARENT ID COMA . DIV COMA INTEGER RPARENT SEMICOLON

    ADD             shift and go to state 148
    SUB             shift and go to state 149
    MUL             shift and go to state 150
    DIV             shift and go to state 151


state 129

    (70) alterB -> ALTERB LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 152


state 130

    (86) signal -> SIGNAL LPARENT INTEGER COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 153


state 131

    (87) signal -> SIGNAL LPARENT ID COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 154


state 132

    (88) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 155


state 133

    (77) isTrue -> ISTRUE LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 156


state 134

    (78) while -> WHILE sentences LPARENT sentences . RPARENT SEMICOLON
    (31) sentences -> sentences . sentence
    (32) sentence -> . local_variable
    (33) sentence -> . values
    (34) sentence -> . case
    (35) sentence -> . call
    (36) sentence -> . print_values
    (37) sentence -> . alter
    (38) sentence -> . alterB
    (39) sentence -> . signal
    (40) sentence -> . viewsignal
    (41) sentence -> . sentence7
    (42) sentence -> . sentence8
    (43) sentence -> . sentence9
    (44) sentence -> . sentence10
    (45) sentence -> . sentence11
    (46) sentence -> . sentence12
    (47) sentence -> . isTrue
    (48) sentence -> . while
    (49) sentence -> . empty
    (50) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (52) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (53) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (79) case -> . CASE expression recursive_conditions SEMICOLON
    (54) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (55) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (66) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (70) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (86) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (87) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (88) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (71) sentence7 -> . ID MAQ INTEGER
    (72) sentence8 -> . ID MEQ INTEGER
    (73) sentence9 -> . ID EQUAL INTEGER
    (74) sentence10 -> . ID DIFFERENT INTEGER
    (75) sentence11 -> . ID MEQEQUAL INTEGER
    (76) sentence12 -> . ID MAQEQUAL INTEGER
    (77) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (78) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (89) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RPARENT         shift and go to state 157
    NEW             shift and go to state 64
    VALUES          shift and go to state 34
    CASE            shift and go to state 35
    CALL            shift and go to state 36
    PRINTVALUES     shift and go to state 37
    ALTER           shift and go to state 38
    ALTERB          shift and go to state 39
    SIGNAL          shift and go to state 40
    VIEWSIGNAL      shift and go to state 41
    ID              shift and go to state 33
    ISTRUE          shift and go to state 42
    WHILE           shift and go to state 43

  ! RPARENT         [ reduce using rule 89 (empty -> .) ]
  ! NEW             [ reduce using rule 89 (empty -> .) ]
  ! VALUES          [ reduce using rule 89 (empty -> .) ]
  ! CASE            [ reduce using rule 89 (empty -> .) ]
  ! CALL            [ reduce using rule 89 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 89 (empty -> .) ]
  ! ALTER           [ reduce using rule 89 (empty -> .) ]
  ! ALTERB          [ reduce using rule 89 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 89 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]

    sentence                       shift and go to state 86
    local_variable                 shift and go to state 46
    values                         shift and go to state 47
    case                           shift and go to state 48
    call                           shift and go to state 49
    print_values                   shift and go to state 50
    alter                          shift and go to state 51
    alterB                         shift and go to state 52
    signal                         shift and go to state 53
    viewsignal                     shift and go to state 54
    sentence7                      shift and go to state 55
    sentence8                      shift and go to state 56
    sentence9                      shift and go to state 57
    sentence10                     shift and go to state 58
    sentence11                     shift and go to state 59
    sentence12                     shift and go to state 60
    isTrue                         shift and go to state 61
    while                          shift and go to state 62
    empty                          shift and go to state 63

state 135

    (50) local_variable -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON

    TYPE            shift and go to state 158


state 136

    (28) master_var -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (29) master_var -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 159


state 137

    (52) values -> VALUES LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 160


state 138

    (53) values -> VALUES LPARENT ID COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 161


state 139

    (83) recursive_condition -> condition LPARENT sentences . RPARENT
    (31) sentences -> sentences . sentence
    (32) sentence -> . local_variable
    (33) sentence -> . values
    (34) sentence -> . case
    (35) sentence -> . call
    (36) sentence -> . print_values
    (37) sentence -> . alter
    (38) sentence -> . alterB
    (39) sentence -> . signal
    (40) sentence -> . viewsignal
    (41) sentence -> . sentence7
    (42) sentence -> . sentence8
    (43) sentence -> . sentence9
    (44) sentence -> . sentence10
    (45) sentence -> . sentence11
    (46) sentence -> . sentence12
    (47) sentence -> . isTrue
    (48) sentence -> . while
    (49) sentence -> . empty
    (50) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (52) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (53) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (79) case -> . CASE expression recursive_conditions SEMICOLON
    (54) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (55) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (66) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (67) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (68) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (69) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (70) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (86) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (87) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (88) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (71) sentence7 -> . ID MAQ INTEGER
    (72) sentence8 -> . ID MEQ INTEGER
    (73) sentence9 -> . ID EQUAL INTEGER
    (74) sentence10 -> . ID DIFFERENT INTEGER
    (75) sentence11 -> . ID MEQEQUAL INTEGER
    (76) sentence12 -> . ID MAQEQUAL INTEGER
    (77) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (78) while -> . WHILE sentences LPARENT sentences RPARENT SEMICOLON
    (89) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RPARENT         shift and go to state 162
    NEW             shift and go to state 64
    VALUES          shift and go to state 34
    CASE            shift and go to state 35
    CALL            shift and go to state 36
    PRINTVALUES     shift and go to state 37
    ALTER           shift and go to state 38
    ALTERB          shift and go to state 39
    SIGNAL          shift and go to state 40
    VIEWSIGNAL      shift and go to state 41
    ID              shift and go to state 33
    ISTRUE          shift and go to state 42
    WHILE           shift and go to state 43

  ! RPARENT         [ reduce using rule 89 (empty -> .) ]
  ! NEW             [ reduce using rule 89 (empty -> .) ]
  ! VALUES          [ reduce using rule 89 (empty -> .) ]
  ! CASE            [ reduce using rule 89 (empty -> .) ]
  ! CALL            [ reduce using rule 89 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 89 (empty -> .) ]
  ! ALTER           [ reduce using rule 89 (empty -> .) ]
  ! ALTERB          [ reduce using rule 89 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 89 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 89 (empty -> .) ]
  ! ID              [ reduce using rule 89 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 89 (empty -> .) ]
  ! WHILE           [ reduce using rule 89 (empty -> .) ]

    sentence                       shift and go to state 86
    local_variable                 shift and go to state 46
    values                         shift and go to state 47
    case                           shift and go to state 48
    call                           shift and go to state 49
    print_values                   shift and go to state 50
    alter                          shift and go to state 51
    alterB                         shift and go to state 52
    signal                         shift and go to state 53
    viewsignal                     shift and go to state 54
    sentence7                      shift and go to state 55
    sentence8                      shift and go to state 56
    sentence9                      shift and go to state 57
    sentence10                     shift and go to state 58
    sentence11                     shift and go to state 59
    sentence12                     shift and go to state 60
    isTrue                         shift and go to state 61
    while                          shift and go to state 62
    empty                          shift and go to state 63

state 140

    (85) condition -> WHEN INTEGER THEN .

    LPARENT         reduce using rule 85 (condition -> WHEN INTEGER THEN .)


state 141

    (54) call -> CALL LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 54 (call -> CALL LPARENT ID RPARENT SEMICOLON .)


state 142

    (55) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .

    RPARENT         reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VALUES          reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CASE            reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CALL            reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTER           reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTERB          reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ID              reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    WHILE           reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    LPARENT         reduce using rule 55 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)


state 143

    (58) printable_sentences -> printable_sentence_var PLUS printable_sentence_var .

    RPARENT         reduce using rule 58 (printable_sentences -> printable_sentence_var PLUS printable_sentence_var .)
    PLUS            reduce using rule 58 (printable_sentences -> printable_sentence_var PLUS printable_sentence_var .)


state 144

    (60) printable_sentences -> printable_sentence_var PLUS printable_sentence_string .

    RPARENT         reduce using rule 60 (printable_sentences -> printable_sentence_var PLUS printable_sentence_string .)
    PLUS            reduce using rule 60 (printable_sentences -> printable_sentence_var PLUS printable_sentence_string .)


state 145

    (59) printable_sentences -> printable_sentence_string PLUS printable_sentence_string .

    RPARENT         reduce using rule 59 (printable_sentences -> printable_sentence_string PLUS printable_sentence_string .)
    PLUS            reduce using rule 59 (printable_sentences -> printable_sentence_string PLUS printable_sentence_string .)


state 146

    (61) printable_sentences -> printable_sentence_string PLUS printable_sentence_var .

    RPARENT         reduce using rule 61 (printable_sentences -> printable_sentence_string PLUS printable_sentence_var .)
    PLUS            reduce using rule 61 (printable_sentences -> printable_sentence_string PLUS printable_sentence_var .)


state 147

    (62) printable_sentences -> PLUS printable_sentences PLUS . printable_sentence_var
    (63) printable_sentences -> PLUS printable_sentences PLUS . printable_sentence_string
    (64) printable_sentence_var -> . ID
    (65) printable_sentence_string -> . STRING

    ID              shift and go to state 106
    STRING          shift and go to state 107

    printable_sentence_var         shift and go to state 163
    printable_sentence_string      shift and go to state 164

state 148

    (66) alter -> ALTER LPARENT ID COMA ADD . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 165


state 149

    (67) alter -> ALTER LPARENT ID COMA SUB . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 166


state 150

    (68) alter -> ALTER LPARENT ID COMA MUL . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 167


state 151

    (69) alter -> ALTER LPARENT ID COMA DIV . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 168


state 152

    (70) alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 70 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)


state 153

    (86) signal -> SIGNAL LPARENT INTEGER COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 169


state 154

    (87) signal -> SIGNAL LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 170


state 155

    (88) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 88 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)


state 156

    (77) isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    WHILE           reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    LPARENT         reduce using rule 77 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)


state 157

    (78) while -> WHILE sentences LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 171


state 158

    (50) local_variable -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (51) local_variable -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 172


state 159

    (28) master_var -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (29) master_var -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 173
    BOOL            shift and go to state 174


state 160

    (52) values -> VALUES LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 175


state 161

    (53) values -> VALUES LPARENT ID COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 176


state 162

    (83) recursive_condition -> condition LPARENT sentences RPARENT .

    SEMICOLON       reduce using rule 83 (recursive_condition -> condition LPARENT sentences RPARENT .)
    WHEN            reduce using rule 83 (recursive_condition -> condition LPARENT sentences RPARENT .)


state 163

    (62) printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var .

    RPARENT         reduce using rule 62 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var .)
    PLUS            reduce using rule 62 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var .)


state 164

    (63) printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string .

    RPARENT         reduce using rule 63 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string .)
    PLUS            reduce using rule 63 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string .)


state 165

    (66) alter -> ALTER LPARENT ID COMA ADD COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 177


state 166

    (67) alter -> ALTER LPARENT ID COMA SUB COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 178


state 167

    (68) alter -> ALTER LPARENT ID COMA MUL COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 179


state 168

    (69) alter -> ALTER LPARENT ID COMA DIV COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 180


state 169

    (86) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 181


state 170

    (87) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 182


state 171

    (78) while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .

    RPARENT         reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    VALUES          reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    CASE            reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    CALL            reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    ALTER           reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    ALTERB          reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    ID              reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    WHILE           reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)
    LPARENT         reduce using rule 78 (while -> WHILE sentences LPARENT sentences RPARENT SEMICOLON .)


state 172

    (50) local_variable -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (51) local_variable -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 183
    BOOL            shift and go to state 184


state 173

    (28) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 185


state 174

    (29) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 186


state 175

    (52) values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 52 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 176

    (53) values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    WHILE           reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    LPARENT         reduce using rule 53 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)


state 177

    (66) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 187


state 178

    (67) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 188


state 179

    (68) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 189


state 180

    (69) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 190


state 181

    (86) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 86 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)


state 182

    (87) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 87 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 183

    (50) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 191


state 184

    (51) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 192


state 185

    (28) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 193


state 186

    (29) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 194


state 187

    (66) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 195


state 188

    (67) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 196


state 189

    (68) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 197


state 190

    (69) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 198


state 191

    (50) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 199


state 192

    (51) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 200


state 193

    (28) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 28 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 194

    (29) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    WHILE           reduce using rule 29 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)


state 195

    (66) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 66 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)


state 196

    (67) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 67 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)


state 197

    (68) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 68 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)


state 198

    (69) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 69 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)


state 199

    (50) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    WHILE           reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    LPARENT         reduce using rule 50 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 200

    (51) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    WHILE           reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    LPARENT         reduce using rule 51 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEW in state 8 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 8 resolved as shift
WARNING: shift/reduce conflict for CASE in state 8 resolved as shift
WARNING: shift/reduce conflict for CALL in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 8 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 8 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 8 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 8 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for NEW in state 10 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 10 resolved as shift
WARNING: shift/reduce conflict for CASE in state 10 resolved as shift
WARNING: shift/reduce conflict for CALL in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 10 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 10 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 10 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 10 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 12 resolved as shift
WARNING: shift/reduce conflict for NEW in state 12 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 12 resolved as shift
WARNING: shift/reduce conflict for CASE in state 12 resolved as shift
WARNING: shift/reduce conflict for CALL in state 12 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 12 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 12 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 12 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 12 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 12 resolved as shift
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 12 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 12 resolved as shift
WARNING: shift/reduce conflict for NEW in state 43 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 43 resolved as shift
WARNING: shift/reduce conflict for CASE in state 43 resolved as shift
WARNING: shift/reduce conflict for CALL in state 43 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 43 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 43 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 43 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 43 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 43 resolved as shift
WARNING: shift/reduce conflict for ID in state 43 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 43 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 43 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 44 resolved as shift
WARNING: shift/reduce conflict for NEW in state 44 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 44 resolved as shift
WARNING: shift/reduce conflict for CASE in state 44 resolved as shift
WARNING: shift/reduce conflict for CALL in state 44 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 44 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 44 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 44 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 44 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 44 resolved as shift
WARNING: shift/reduce conflict for ID in state 44 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 44 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 44 resolved as shift
WARNING: shift/reduce conflict for LPARENT in state 84 resolved as shift
WARNING: shift/reduce conflict for NEW in state 84 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 84 resolved as shift
WARNING: shift/reduce conflict for CASE in state 84 resolved as shift
WARNING: shift/reduce conflict for CALL in state 84 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 84 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 84 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 84 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 84 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 84 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for NEW in state 114 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 114 resolved as shift
WARNING: shift/reduce conflict for CASE in state 114 resolved as shift
WARNING: shift/reduce conflict for CALL in state 114 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 114 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 114 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 114 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 114 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 114 resolved as shift
WARNING: shift/reduce conflict for ID in state 114 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 114 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 114 resolved as shift
WARNING: shift/reduce conflict for NEW in state 121 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 121 resolved as shift
WARNING: shift/reduce conflict for CASE in state 121 resolved as shift
WARNING: shift/reduce conflict for CALL in state 121 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 121 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 121 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 121 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 121 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 121 resolved as shift
WARNING: shift/reduce conflict for ID in state 121 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 121 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 121 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 134 resolved as shift
WARNING: shift/reduce conflict for NEW in state 134 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 134 resolved as shift
WARNING: shift/reduce conflict for CASE in state 134 resolved as shift
WARNING: shift/reduce conflict for CALL in state 134 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 134 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 134 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 134 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 134 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 134 resolved as shift
WARNING: shift/reduce conflict for ID in state 134 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 134 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 134 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 139 resolved as shift
WARNING: shift/reduce conflict for NEW in state 139 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 139 resolved as shift
WARNING: shift/reduce conflict for CASE in state 139 resolved as shift
WARNING: shift/reduce conflict for CALL in state 139 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 139 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 139 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 139 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 139 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 139 resolved as shift
WARNING: shift/reduce conflict for ID in state 139 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 139 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 139 resolved as shift
