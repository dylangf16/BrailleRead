Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROBA
    BREAK
    COMMENT
    ELSE
    PLUS
    REPEAT
    UNTIL
    WHILE

Grammar

Rule 0     S' -> start
Rule 1     start -> master
Rule 2     start -> master procedures
Rule 3     start -> master master_vars procedures
Rule 4     start -> master_vars master
Rule 5     start -> master_vars master master_vars
Rule 6     start -> master_vars master master_vars procedures
Rule 7     start -> master_vars master master_vars procedures master_vars
Rule 8     start -> master_vars master procedures
Rule 9     start -> master_vars master procedures master_vars
Rule 10    declare_procedure -> PROC ID
Rule 11    procedures -> procedure
Rule 12    procedures -> procedures procedure
Rule 13    procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON
Rule 14    master -> MASTER LPARENT master_sentences RPARENT SEMICOLON
Rule 15    master_sentences -> master_sentence
Rule 16    master_sentences -> master_sentences master_sentence
Rule 17    master_sentence -> master_var
Rule 18    master_sentence -> values
Rule 19    master_sentence -> case
Rule 20    master_sentence -> call
Rule 21    master_sentence -> print_values
Rule 22    master_sentence -> alter
Rule 23    master_sentence -> alterB
Rule 24    master_sentence -> comparisson_maq
Rule 25    master_sentence -> comparisson_meq
Rule 26    master_sentence -> comparisson_equal
Rule 27    master_sentence -> comparisson_dif
Rule 28    master_sentence -> comparisson_meqequal
Rule 29    master_sentence -> comparisson_maqequal
Rule 30    master_sentence -> isTrue
Rule 31    master_sentence -> signal
Rule 32    master_sentence -> viewsignal
Rule 33    master_sentence -> empty
Rule 34    master_vars -> master_var
Rule 35    master_vars -> master_vars master_var
Rule 36    master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 37    master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 38    sentences -> sentence
Rule 39    sentences -> sentences sentence
Rule 40    sentence -> local_variable
Rule 41    sentence -> values
Rule 42    sentence -> case
Rule 43    sentence -> call
Rule 44    sentence -> print_values
Rule 45    sentence -> alter
Rule 46    sentence -> alterB
Rule 47    sentence -> comparisson_maq
Rule 48    sentence -> comparisson_meq
Rule 49    sentence -> comparisson_equal
Rule 50    sentence -> comparisson_dif
Rule 51    sentence -> comparisson_meqequal
Rule 52    sentence -> comparisson_maqequal
Rule 53    sentence -> isTrue
Rule 54    sentence -> signal
Rule 55    sentence -> viewsignal
Rule 56    sentence -> empty
Rule 57    return_statement -> isTrue
Rule 58    return_statement -> comparisson_maqequal
Rule 59    return_statement -> comparisson_meqequal
Rule 60    return_statement -> comparisson_dif
Rule 61    return_statement -> comparisson_equal
Rule 62    return_statement -> comparisson_meq
Rule 63    return_statement -> comparisson_maq
Rule 64    return_statement -> alterB
Rule 65    return_statement -> alter
Rule 66    local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 67    local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 68    values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 69    values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
Rule 70    values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
Rule 71    call -> CALL LPARENT ID RPARENT SEMICOLON
Rule 72    print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
Rule 73    printable_sentences -> printable_sentence_var
Rule 74    printable_sentences -> printable_sentence_string
Rule 75    printable_sentences -> printable_sentence_var COMA printable_sentence_var
Rule 76    printable_sentences -> printable_sentence_string COMA printable_sentence_string
Rule 77    printable_sentences -> printable_sentence_var COMA printable_sentence_string
Rule 78    printable_sentences -> printable_sentence_string COMA printable_sentence_var
Rule 79    printable_sentences -> printable_sentences COMA printable_sentence_var
Rule 80    printable_sentences -> printable_sentences COMA printable_sentence_string
Rule 81    printable_sentences -> COMA printable_sentences COMA printable_sentence_var
Rule 82    printable_sentences -> COMA printable_sentences COMA printable_sentence_string
Rule 83    printable_sentence_var -> ID
Rule 84    printable_sentence_string -> STRING
Rule 85    alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
Rule 86    alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
Rule 87    alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
Rule 88    alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
Rule 89    alterB -> ALTERB LPARENT ID RPARENT SEMICOLON
Rule 90    comparisson_maq -> ID MAQ INTEGER
Rule 91    comparisson_meq -> ID MEQ INTEGER
Rule 92    comparisson_equal -> ID EQUAL INTEGER
Rule 93    comparisson_dif -> ID DIFFERENT INTEGER
Rule 94    comparisson_meqequal -> ID MEQEQUAL INTEGER
Rule 95    comparisson_maqequal -> ID MAQEQUAL INTEGER
Rule 96    isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON
Rule 97    case -> CASE expression recursive_conditions SEMICOLON
Rule 98    else_condition -> LPARENT sentences RPARENT
Rule 99    recursive_conditions -> recursive_condition
Rule 100   recursive_conditions -> recursive_conditions recursive_condition
Rule 101   recursive_condition -> condition LPARENT sentences RPARENT
Rule 102   expression -> ID
Rule 103   condition -> WHEN INTEGER THEN
Rule 104   signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
Rule 105   signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 106   viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
Rule 107   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 85
ALTER                : 85 86 87 88
ALTERB               : 89
ARROBA               : 
BOOL                 : 37 67 69
BREAK                : 
CALL                 : 71
CASE                 : 97
COMA                 : 36 36 37 37 66 66 67 67 68 69 70 75 76 77 78 79 80 81 81 82 82 85 85 86 86 87 87 88 88 104 105
COMMENT              : 
DIFFERENT            : 93
DIV                  : 88
ELSE                 : 
EQUAL                : 92
ID                   : 10 36 37 66 67 68 69 70 71 83 85 86 87 88 89 90 91 92 93 94 95 96 102 105
INTEGER              : 36 66 68 85 86 87 88 90 91 92 93 94 95 103 104 104 105 106
ISTRUE               : 96
LPARENT              : 13 14 36 37 66 67 68 69 70 71 72 85 86 87 88 89 96 98 101 104 105 106
MAQ                  : 90
MAQEQUAL             : 95
MASTER               : 14
MEQ                  : 91
MEQEQUAL             : 94
MUL                  : 87
NEW                  : 36 37 66 67
PLUS                 : 
PRINTVALUES          : 72
PROC                 : 10
REPEAT               : 
RPARENT              : 13 14 36 37 66 67 68 69 70 71 72 85 86 87 88 89 96 98 101 104 105 106
SEMICOLON            : 13 14 36 37 66 67 68 69 70 71 72 85 86 87 88 89 96 97 104 105 106
SIGNAL               : 104 105
STRING               : 84
SUB                  : 86
THEN                 : 103
TYPE                 : 36 37 66 67
UNTIL                : 
VALUES               : 68 69 70
VIEWSIGNAL           : 106
WHEN                 : 103
WHILE                : 
error                : 

Nonterminals, with rules where they appear

alter                : 22 45 65
alterB               : 23 46 64
call                 : 20 43
case                 : 19 42
comparisson_dif      : 27 50 60
comparisson_equal    : 26 49 61
comparisson_maq      : 24 47 63
comparisson_maqequal : 29 52 58
comparisson_meq      : 25 48 62
comparisson_meqequal : 28 51 59
condition            : 101
declare_procedure    : 13
else_condition       : 
empty                : 33 56
expression           : 97
isTrue               : 30 53 57
local_variable       : 40
master               : 1 2 3 4 5 6 7 8 9
master_sentence      : 15 16
master_sentences     : 14 16
master_var           : 17 34 35
master_vars          : 3 4 5 5 6 6 7 7 7 8 9 9 35
print_values         : 21 44
printable_sentence_string : 74 76 76 77 78 80 82
printable_sentence_var : 73 75 75 77 78 79 81
printable_sentences  : 72 79 80 81 82
procedure            : 11 12
procedures           : 2 3 6 7 8 9 12
recursive_condition  : 99 100
recursive_conditions : 97 100
return_statement     : 70
sentence             : 38 39
sentences            : 13 39 98 101
signal               : 31 54
start                : 0
values               : 18 41
viewsignal           : 32 55

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . master
    (2) start -> . master procedures
    (3) start -> . master master_vars procedures
    (4) start -> . master_vars master
    (5) start -> . master_vars master master_vars
    (6) start -> . master_vars master master_vars procedures
    (7) start -> . master_vars master master_vars procedures master_vars
    (8) start -> . master_vars master procedures
    (9) start -> . master_vars master procedures master_vars
    (14) master -> . MASTER LPARENT master_sentences RPARENT SEMICOLON
    (34) master_vars -> . master_var
    (35) master_vars -> . master_vars master_var
    (36) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    MASTER          shift and go to state 4
    NEW             shift and go to state 6

    start                          shift and go to state 1
    master                         shift and go to state 2
    master_vars                    shift and go to state 3
    master_var                     shift and go to state 5

state 1

    (0) S' -> start .



state 2

    (1) start -> master .
    (2) start -> master . procedures
    (3) start -> master . master_vars procedures
    (11) procedures -> . procedure
    (12) procedures -> . procedures procedure
    (34) master_vars -> . master_var
    (35) master_vars -> . master_vars master_var
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (36) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 1 (start -> master .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    procedures                     shift and go to state 7
    master_vars                    shift and go to state 8
    procedure                      shift and go to state 9
    master_var                     shift and go to state 5
    declare_procedure              shift and go to state 10

state 3

    (4) start -> master_vars . master
    (5) start -> master_vars . master master_vars
    (6) start -> master_vars . master master_vars procedures
    (7) start -> master_vars . master master_vars procedures master_vars
    (8) start -> master_vars . master procedures
    (9) start -> master_vars . master procedures master_vars
    (35) master_vars -> master_vars . master_var
    (14) master -> . MASTER LPARENT master_sentences RPARENT SEMICOLON
    (36) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    MASTER          shift and go to state 4
    NEW             shift and go to state 6

    master                         shift and go to state 12
    master_var                     shift and go to state 13

state 4

    (14) master -> MASTER . LPARENT master_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 14


state 5

    (34) master_vars -> master_var .

    MASTER          reduce using rule 34 (master_vars -> master_var .)
    NEW             reduce using rule 34 (master_vars -> master_var .)
    PROC            reduce using rule 34 (master_vars -> master_var .)
    $end            reduce using rule 34 (master_vars -> master_var .)


state 6

    (36) master_var -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 15


state 7

    (2) start -> master procedures .
    (12) procedures -> procedures . procedure
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 2 (start -> master procedures .)
    PROC            shift and go to state 11

    procedure                      shift and go to state 16
    declare_procedure              shift and go to state 10

state 8

    (3) start -> master master_vars . procedures
    (35) master_vars -> master_vars . master_var
    (11) procedures -> . procedure
    (12) procedures -> . procedures procedure
    (36) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    NEW             shift and go to state 6
    PROC            shift and go to state 11

    procedures                     shift and go to state 17
    master_var                     shift and go to state 13
    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 10

state 9

    (11) procedures -> procedure .

    PROC            reduce using rule 11 (procedures -> procedure .)
    $end            reduce using rule 11 (procedures -> procedure .)
    NEW             reduce using rule 11 (procedures -> procedure .)


state 10

    (13) procedure -> declare_procedure . LPARENT sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 18


state 11

    (10) declare_procedure -> PROC . ID

    ID              shift and go to state 19


state 12

    (4) start -> master_vars master .
    (5) start -> master_vars master . master_vars
    (6) start -> master_vars master . master_vars procedures
    (7) start -> master_vars master . master_vars procedures master_vars
    (8) start -> master_vars master . procedures
    (9) start -> master_vars master . procedures master_vars
    (34) master_vars -> . master_var
    (35) master_vars -> . master_vars master_var
    (11) procedures -> . procedure
    (12) procedures -> . procedures procedure
    (36) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 4 (start -> master_vars master .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    master_vars                    shift and go to state 20
    procedures                     shift and go to state 21
    master_var                     shift and go to state 5
    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 10

state 13

    (35) master_vars -> master_vars master_var .

    MASTER          reduce using rule 35 (master_vars -> master_vars master_var .)
    NEW             reduce using rule 35 (master_vars -> master_vars master_var .)
    PROC            reduce using rule 35 (master_vars -> master_vars master_var .)
    $end            reduce using rule 35 (master_vars -> master_vars master_var .)


state 14

    (14) master -> MASTER LPARENT . master_sentences RPARENT SEMICOLON
    (15) master_sentences -> . master_sentence
    (16) master_sentences -> . master_sentences master_sentence
    (17) master_sentence -> . master_var
    (18) master_sentence -> . values
    (19) master_sentence -> . case
    (20) master_sentence -> . call
    (21) master_sentence -> . print_values
    (22) master_sentence -> . alter
    (23) master_sentence -> . alterB
    (24) master_sentence -> . comparisson_maq
    (25) master_sentence -> . comparisson_meq
    (26) master_sentence -> . comparisson_equal
    (27) master_sentence -> . comparisson_dif
    (28) master_sentence -> . comparisson_meqequal
    (29) master_sentence -> . comparisson_maqequal
    (30) master_sentence -> . isTrue
    (31) master_sentence -> . signal
    (32) master_sentence -> . viewsignal
    (33) master_sentence -> . empty
    (36) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (68) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (69) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (70) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (97) case -> . CASE expression recursive_conditions SEMICOLON
    (71) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (72) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (85) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (86) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (87) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (88) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (89) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (90) comparisson_maq -> . ID MAQ INTEGER
    (91) comparisson_meq -> . ID MEQ INTEGER
    (92) comparisson_equal -> . ID EQUAL INTEGER
    (93) comparisson_dif -> . ID DIFFERENT INTEGER
    (94) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (95) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (96) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (104) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (106) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (107) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
    NEW             shift and go to state 6
    VALUES          shift and go to state 42
    CASE            shift and go to state 43
    CALL            shift and go to state 44
    PRINTVALUES     shift and go to state 45
    ALTER           shift and go to state 46
    ALTERB          shift and go to state 47
    ID              shift and go to state 41
    ISTRUE          shift and go to state 48
    SIGNAL          shift and go to state 49
    VIEWSIGNAL      shift and go to state 50
    RPARENT         reduce using rule 107 (empty -> .)

  ! NEW             [ reduce using rule 107 (empty -> .) ]
  ! VALUES          [ reduce using rule 107 (empty -> .) ]
  ! CASE            [ reduce using rule 107 (empty -> .) ]
  ! CALL            [ reduce using rule 107 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 107 (empty -> .) ]
  ! ALTER           [ reduce using rule 107 (empty -> .) ]
  ! ALTERB          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 107 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 107 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 107 (empty -> .) ]

    master_sentences               shift and go to state 22
    master_sentence                shift and go to state 23
    master_var                     shift and go to state 24
    values                         shift and go to state 25
    case                           shift and go to state 26
    call                           shift and go to state 27
    print_values                   shift and go to state 28
    alter                          shift and go to state 29
    alterB                         shift and go to state 30
    comparisson_maq                shift and go to state 31
    comparisson_meq                shift and go to state 32
    comparisson_equal              shift and go to state 33
    comparisson_dif                shift and go to state 34
    comparisson_meqequal           shift and go to state 35
    comparisson_maqequal           shift and go to state 36
    isTrue                         shift and go to state 37
    signal                         shift and go to state 38
    viewsignal                     shift and go to state 39
    empty                          shift and go to state 40

state 15

    (36) master_var -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 51


state 16

    (12) procedures -> procedures procedure .

    PROC            reduce using rule 12 (procedures -> procedures procedure .)
    $end            reduce using rule 12 (procedures -> procedures procedure .)
    NEW             reduce using rule 12 (procedures -> procedures procedure .)


state 17

    (3) start -> master master_vars procedures .
    (12) procedures -> procedures . procedure
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 3 (start -> master master_vars procedures .)
    PROC            shift and go to state 11

    procedure                      shift and go to state 16
    declare_procedure              shift and go to state 10

state 18

    (13) procedure -> declare_procedure LPARENT . sentences RPARENT SEMICOLON
    (38) sentences -> . sentence
    (39) sentences -> . sentences sentence
    (40) sentence -> . local_variable
    (41) sentence -> . values
    (42) sentence -> . case
    (43) sentence -> . call
    (44) sentence -> . print_values
    (45) sentence -> . alter
    (46) sentence -> . alterB
    (47) sentence -> . comparisson_maq
    (48) sentence -> . comparisson_meq
    (49) sentence -> . comparisson_equal
    (50) sentence -> . comparisson_dif
    (51) sentence -> . comparisson_meqequal
    (52) sentence -> . comparisson_maqequal
    (53) sentence -> . isTrue
    (54) sentence -> . signal
    (55) sentence -> . viewsignal
    (56) sentence -> . empty
    (66) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (67) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (68) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (69) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (70) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (97) case -> . CASE expression recursive_conditions SEMICOLON
    (71) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (72) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (85) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (86) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (87) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (88) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (89) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (90) comparisson_maq -> . ID MAQ INTEGER
    (91) comparisson_meq -> . ID MEQ INTEGER
    (92) comparisson_equal -> . ID EQUAL INTEGER
    (93) comparisson_dif -> . ID DIFFERENT INTEGER
    (94) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (95) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (96) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (104) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (106) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (107) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
    NEW             shift and go to state 71
    VALUES          shift and go to state 42
    CASE            shift and go to state 43
    CALL            shift and go to state 44
    PRINTVALUES     shift and go to state 45
    ALTER           shift and go to state 46
    ALTERB          shift and go to state 47
    ID              shift and go to state 41
    ISTRUE          shift and go to state 48
    SIGNAL          shift and go to state 49
    VIEWSIGNAL      shift and go to state 50
    RPARENT         reduce using rule 107 (empty -> .)

  ! NEW             [ reduce using rule 107 (empty -> .) ]
  ! VALUES          [ reduce using rule 107 (empty -> .) ]
  ! CASE            [ reduce using rule 107 (empty -> .) ]
  ! CALL            [ reduce using rule 107 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 107 (empty -> .) ]
  ! ALTER           [ reduce using rule 107 (empty -> .) ]
  ! ALTERB          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 107 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 107 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 107 (empty -> .) ]

    sentences                      shift and go to state 52
    sentence                       shift and go to state 53
    local_variable                 shift and go to state 54
    values                         shift and go to state 55
    case                           shift and go to state 56
    call                           shift and go to state 57
    print_values                   shift and go to state 58
    alter                          shift and go to state 59
    alterB                         shift and go to state 60
    comparisson_maq                shift and go to state 61
    comparisson_meq                shift and go to state 62
    comparisson_equal              shift and go to state 63
    comparisson_dif                shift and go to state 64
    comparisson_meqequal           shift and go to state 65
    comparisson_maqequal           shift and go to state 66
    isTrue                         shift and go to state 67
    signal                         shift and go to state 68
    viewsignal                     shift and go to state 69
    empty                          shift and go to state 70

state 19

    (10) declare_procedure -> PROC ID .

    LPARENT         reduce using rule 10 (declare_procedure -> PROC ID .)


state 20

    (5) start -> master_vars master master_vars .
    (6) start -> master_vars master master_vars . procedures
    (7) start -> master_vars master master_vars . procedures master_vars
    (35) master_vars -> master_vars . master_var
    (11) procedures -> . procedure
    (12) procedures -> . procedures procedure
    (36) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 5 (start -> master_vars master master_vars .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    procedures                     shift and go to state 72
    master_var                     shift and go to state 13
    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 10

state 21

    (8) start -> master_vars master procedures .
    (9) start -> master_vars master procedures . master_vars
    (12) procedures -> procedures . procedure
    (34) master_vars -> . master_var
    (35) master_vars -> . master_vars master_var
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (36) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 8 (start -> master_vars master procedures .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    master_vars                    shift and go to state 73
    procedure                      shift and go to state 16
    master_var                     shift and go to state 5
    declare_procedure              shift and go to state 10

state 22

    (14) master -> MASTER LPARENT master_sentences . RPARENT SEMICOLON
    (16) master_sentences -> master_sentences . master_sentence
    (17) master_sentence -> . master_var
    (18) master_sentence -> . values
    (19) master_sentence -> . case
    (20) master_sentence -> . call
    (21) master_sentence -> . print_values
    (22) master_sentence -> . alter
    (23) master_sentence -> . alterB
    (24) master_sentence -> . comparisson_maq
    (25) master_sentence -> . comparisson_meq
    (26) master_sentence -> . comparisson_equal
    (27) master_sentence -> . comparisson_dif
    (28) master_sentence -> . comparisson_meqequal
    (29) master_sentence -> . comparisson_maqequal
    (30) master_sentence -> . isTrue
    (31) master_sentence -> . signal
    (32) master_sentence -> . viewsignal
    (33) master_sentence -> . empty
    (36) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (68) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (69) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (70) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (97) case -> . CASE expression recursive_conditions SEMICOLON
    (71) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (72) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (85) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (86) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (87) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (88) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (89) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (90) comparisson_maq -> . ID MAQ INTEGER
    (91) comparisson_meq -> . ID MEQ INTEGER
    (92) comparisson_equal -> . ID EQUAL INTEGER
    (93) comparisson_dif -> . ID DIFFERENT INTEGER
    (94) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (95) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (96) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (104) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (106) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (107) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
    RPARENT         shift and go to state 74
    NEW             shift and go to state 6
    VALUES          shift and go to state 42
    CASE            shift and go to state 43
    CALL            shift and go to state 44
    PRINTVALUES     shift and go to state 45
    ALTER           shift and go to state 46
    ALTERB          shift and go to state 47
    ID              shift and go to state 41
    ISTRUE          shift and go to state 48
    SIGNAL          shift and go to state 49
    VIEWSIGNAL      shift and go to state 50

  ! RPARENT         [ reduce using rule 107 (empty -> .) ]
  ! NEW             [ reduce using rule 107 (empty -> .) ]
  ! VALUES          [ reduce using rule 107 (empty -> .) ]
  ! CASE            [ reduce using rule 107 (empty -> .) ]
  ! CALL            [ reduce using rule 107 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 107 (empty -> .) ]
  ! ALTER           [ reduce using rule 107 (empty -> .) ]
  ! ALTERB          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 107 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 107 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 107 (empty -> .) ]

    master_sentence                shift and go to state 75
    master_var                     shift and go to state 24
    values                         shift and go to state 25
    case                           shift and go to state 26
    call                           shift and go to state 27
    print_values                   shift and go to state 28
    alter                          shift and go to state 29
    alterB                         shift and go to state 30
    comparisson_maq                shift and go to state 31
    comparisson_meq                shift and go to state 32
    comparisson_equal              shift and go to state 33
    comparisson_dif                shift and go to state 34
    comparisson_meqequal           shift and go to state 35
    comparisson_maqequal           shift and go to state 36
    isTrue                         shift and go to state 37
    signal                         shift and go to state 38
    viewsignal                     shift and go to state 39
    empty                          shift and go to state 40

state 23

    (15) master_sentences -> master_sentence .

    RPARENT         reduce using rule 15 (master_sentences -> master_sentence .)
    NEW             reduce using rule 15 (master_sentences -> master_sentence .)
    VALUES          reduce using rule 15 (master_sentences -> master_sentence .)
    CASE            reduce using rule 15 (master_sentences -> master_sentence .)
    CALL            reduce using rule 15 (master_sentences -> master_sentence .)
    PRINTVALUES     reduce using rule 15 (master_sentences -> master_sentence .)
    ALTER           reduce using rule 15 (master_sentences -> master_sentence .)
    ALTERB          reduce using rule 15 (master_sentences -> master_sentence .)
    ID              reduce using rule 15 (master_sentences -> master_sentence .)
    ISTRUE          reduce using rule 15 (master_sentences -> master_sentence .)
    SIGNAL          reduce using rule 15 (master_sentences -> master_sentence .)
    VIEWSIGNAL      reduce using rule 15 (master_sentences -> master_sentence .)


state 24

    (17) master_sentence -> master_var .

    RPARENT         reduce using rule 17 (master_sentence -> master_var .)
    NEW             reduce using rule 17 (master_sentence -> master_var .)
    VALUES          reduce using rule 17 (master_sentence -> master_var .)
    CASE            reduce using rule 17 (master_sentence -> master_var .)
    CALL            reduce using rule 17 (master_sentence -> master_var .)
    PRINTVALUES     reduce using rule 17 (master_sentence -> master_var .)
    ALTER           reduce using rule 17 (master_sentence -> master_var .)
    ALTERB          reduce using rule 17 (master_sentence -> master_var .)
    ID              reduce using rule 17 (master_sentence -> master_var .)
    ISTRUE          reduce using rule 17 (master_sentence -> master_var .)
    SIGNAL          reduce using rule 17 (master_sentence -> master_var .)
    VIEWSIGNAL      reduce using rule 17 (master_sentence -> master_var .)


state 25

    (18) master_sentence -> values .

    RPARENT         reduce using rule 18 (master_sentence -> values .)
    NEW             reduce using rule 18 (master_sentence -> values .)
    VALUES          reduce using rule 18 (master_sentence -> values .)
    CASE            reduce using rule 18 (master_sentence -> values .)
    CALL            reduce using rule 18 (master_sentence -> values .)
    PRINTVALUES     reduce using rule 18 (master_sentence -> values .)
    ALTER           reduce using rule 18 (master_sentence -> values .)
    ALTERB          reduce using rule 18 (master_sentence -> values .)
    ID              reduce using rule 18 (master_sentence -> values .)
    ISTRUE          reduce using rule 18 (master_sentence -> values .)
    SIGNAL          reduce using rule 18 (master_sentence -> values .)
    VIEWSIGNAL      reduce using rule 18 (master_sentence -> values .)


state 26

    (19) master_sentence -> case .

    RPARENT         reduce using rule 19 (master_sentence -> case .)
    NEW             reduce using rule 19 (master_sentence -> case .)
    VALUES          reduce using rule 19 (master_sentence -> case .)
    CASE            reduce using rule 19 (master_sentence -> case .)
    CALL            reduce using rule 19 (master_sentence -> case .)
    PRINTVALUES     reduce using rule 19 (master_sentence -> case .)
    ALTER           reduce using rule 19 (master_sentence -> case .)
    ALTERB          reduce using rule 19 (master_sentence -> case .)
    ID              reduce using rule 19 (master_sentence -> case .)
    ISTRUE          reduce using rule 19 (master_sentence -> case .)
    SIGNAL          reduce using rule 19 (master_sentence -> case .)
    VIEWSIGNAL      reduce using rule 19 (master_sentence -> case .)


state 27

    (20) master_sentence -> call .

    RPARENT         reduce using rule 20 (master_sentence -> call .)
    NEW             reduce using rule 20 (master_sentence -> call .)
    VALUES          reduce using rule 20 (master_sentence -> call .)
    CASE            reduce using rule 20 (master_sentence -> call .)
    CALL            reduce using rule 20 (master_sentence -> call .)
    PRINTVALUES     reduce using rule 20 (master_sentence -> call .)
    ALTER           reduce using rule 20 (master_sentence -> call .)
    ALTERB          reduce using rule 20 (master_sentence -> call .)
    ID              reduce using rule 20 (master_sentence -> call .)
    ISTRUE          reduce using rule 20 (master_sentence -> call .)
    SIGNAL          reduce using rule 20 (master_sentence -> call .)
    VIEWSIGNAL      reduce using rule 20 (master_sentence -> call .)


state 28

    (21) master_sentence -> print_values .

    RPARENT         reduce using rule 21 (master_sentence -> print_values .)
    NEW             reduce using rule 21 (master_sentence -> print_values .)
    VALUES          reduce using rule 21 (master_sentence -> print_values .)
    CASE            reduce using rule 21 (master_sentence -> print_values .)
    CALL            reduce using rule 21 (master_sentence -> print_values .)
    PRINTVALUES     reduce using rule 21 (master_sentence -> print_values .)
    ALTER           reduce using rule 21 (master_sentence -> print_values .)
    ALTERB          reduce using rule 21 (master_sentence -> print_values .)
    ID              reduce using rule 21 (master_sentence -> print_values .)
    ISTRUE          reduce using rule 21 (master_sentence -> print_values .)
    SIGNAL          reduce using rule 21 (master_sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 21 (master_sentence -> print_values .)


state 29

    (22) master_sentence -> alter .

    RPARENT         reduce using rule 22 (master_sentence -> alter .)
    NEW             reduce using rule 22 (master_sentence -> alter .)
    VALUES          reduce using rule 22 (master_sentence -> alter .)
    CASE            reduce using rule 22 (master_sentence -> alter .)
    CALL            reduce using rule 22 (master_sentence -> alter .)
    PRINTVALUES     reduce using rule 22 (master_sentence -> alter .)
    ALTER           reduce using rule 22 (master_sentence -> alter .)
    ALTERB          reduce using rule 22 (master_sentence -> alter .)
    ID              reduce using rule 22 (master_sentence -> alter .)
    ISTRUE          reduce using rule 22 (master_sentence -> alter .)
    SIGNAL          reduce using rule 22 (master_sentence -> alter .)
    VIEWSIGNAL      reduce using rule 22 (master_sentence -> alter .)


state 30

    (23) master_sentence -> alterB .

    RPARENT         reduce using rule 23 (master_sentence -> alterB .)
    NEW             reduce using rule 23 (master_sentence -> alterB .)
    VALUES          reduce using rule 23 (master_sentence -> alterB .)
    CASE            reduce using rule 23 (master_sentence -> alterB .)
    CALL            reduce using rule 23 (master_sentence -> alterB .)
    PRINTVALUES     reduce using rule 23 (master_sentence -> alterB .)
    ALTER           reduce using rule 23 (master_sentence -> alterB .)
    ALTERB          reduce using rule 23 (master_sentence -> alterB .)
    ID              reduce using rule 23 (master_sentence -> alterB .)
    ISTRUE          reduce using rule 23 (master_sentence -> alterB .)
    SIGNAL          reduce using rule 23 (master_sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 23 (master_sentence -> alterB .)


state 31

    (24) master_sentence -> comparisson_maq .

    RPARENT         reduce using rule 24 (master_sentence -> comparisson_maq .)
    NEW             reduce using rule 24 (master_sentence -> comparisson_maq .)
    VALUES          reduce using rule 24 (master_sentence -> comparisson_maq .)
    CASE            reduce using rule 24 (master_sentence -> comparisson_maq .)
    CALL            reduce using rule 24 (master_sentence -> comparisson_maq .)
    PRINTVALUES     reduce using rule 24 (master_sentence -> comparisson_maq .)
    ALTER           reduce using rule 24 (master_sentence -> comparisson_maq .)
    ALTERB          reduce using rule 24 (master_sentence -> comparisson_maq .)
    ID              reduce using rule 24 (master_sentence -> comparisson_maq .)
    ISTRUE          reduce using rule 24 (master_sentence -> comparisson_maq .)
    SIGNAL          reduce using rule 24 (master_sentence -> comparisson_maq .)
    VIEWSIGNAL      reduce using rule 24 (master_sentence -> comparisson_maq .)


state 32

    (25) master_sentence -> comparisson_meq .

    RPARENT         reduce using rule 25 (master_sentence -> comparisson_meq .)
    NEW             reduce using rule 25 (master_sentence -> comparisson_meq .)
    VALUES          reduce using rule 25 (master_sentence -> comparisson_meq .)
    CASE            reduce using rule 25 (master_sentence -> comparisson_meq .)
    CALL            reduce using rule 25 (master_sentence -> comparisson_meq .)
    PRINTVALUES     reduce using rule 25 (master_sentence -> comparisson_meq .)
    ALTER           reduce using rule 25 (master_sentence -> comparisson_meq .)
    ALTERB          reduce using rule 25 (master_sentence -> comparisson_meq .)
    ID              reduce using rule 25 (master_sentence -> comparisson_meq .)
    ISTRUE          reduce using rule 25 (master_sentence -> comparisson_meq .)
    SIGNAL          reduce using rule 25 (master_sentence -> comparisson_meq .)
    VIEWSIGNAL      reduce using rule 25 (master_sentence -> comparisson_meq .)


state 33

    (26) master_sentence -> comparisson_equal .

    RPARENT         reduce using rule 26 (master_sentence -> comparisson_equal .)
    NEW             reduce using rule 26 (master_sentence -> comparisson_equal .)
    VALUES          reduce using rule 26 (master_sentence -> comparisson_equal .)
    CASE            reduce using rule 26 (master_sentence -> comparisson_equal .)
    CALL            reduce using rule 26 (master_sentence -> comparisson_equal .)
    PRINTVALUES     reduce using rule 26 (master_sentence -> comparisson_equal .)
    ALTER           reduce using rule 26 (master_sentence -> comparisson_equal .)
    ALTERB          reduce using rule 26 (master_sentence -> comparisson_equal .)
    ID              reduce using rule 26 (master_sentence -> comparisson_equal .)
    ISTRUE          reduce using rule 26 (master_sentence -> comparisson_equal .)
    SIGNAL          reduce using rule 26 (master_sentence -> comparisson_equal .)
    VIEWSIGNAL      reduce using rule 26 (master_sentence -> comparisson_equal .)


state 34

    (27) master_sentence -> comparisson_dif .

    RPARENT         reduce using rule 27 (master_sentence -> comparisson_dif .)
    NEW             reduce using rule 27 (master_sentence -> comparisson_dif .)
    VALUES          reduce using rule 27 (master_sentence -> comparisson_dif .)
    CASE            reduce using rule 27 (master_sentence -> comparisson_dif .)
    CALL            reduce using rule 27 (master_sentence -> comparisson_dif .)
    PRINTVALUES     reduce using rule 27 (master_sentence -> comparisson_dif .)
    ALTER           reduce using rule 27 (master_sentence -> comparisson_dif .)
    ALTERB          reduce using rule 27 (master_sentence -> comparisson_dif .)
    ID              reduce using rule 27 (master_sentence -> comparisson_dif .)
    ISTRUE          reduce using rule 27 (master_sentence -> comparisson_dif .)
    SIGNAL          reduce using rule 27 (master_sentence -> comparisson_dif .)
    VIEWSIGNAL      reduce using rule 27 (master_sentence -> comparisson_dif .)


state 35

    (28) master_sentence -> comparisson_meqequal .

    RPARENT         reduce using rule 28 (master_sentence -> comparisson_meqequal .)
    NEW             reduce using rule 28 (master_sentence -> comparisson_meqequal .)
    VALUES          reduce using rule 28 (master_sentence -> comparisson_meqequal .)
    CASE            reduce using rule 28 (master_sentence -> comparisson_meqequal .)
    CALL            reduce using rule 28 (master_sentence -> comparisson_meqequal .)
    PRINTVALUES     reduce using rule 28 (master_sentence -> comparisson_meqequal .)
    ALTER           reduce using rule 28 (master_sentence -> comparisson_meqequal .)
    ALTERB          reduce using rule 28 (master_sentence -> comparisson_meqequal .)
    ID              reduce using rule 28 (master_sentence -> comparisson_meqequal .)
    ISTRUE          reduce using rule 28 (master_sentence -> comparisson_meqequal .)
    SIGNAL          reduce using rule 28 (master_sentence -> comparisson_meqequal .)
    VIEWSIGNAL      reduce using rule 28 (master_sentence -> comparisson_meqequal .)


state 36

    (29) master_sentence -> comparisson_maqequal .

    RPARENT         reduce using rule 29 (master_sentence -> comparisson_maqequal .)
    NEW             reduce using rule 29 (master_sentence -> comparisson_maqequal .)
    VALUES          reduce using rule 29 (master_sentence -> comparisson_maqequal .)
    CASE            reduce using rule 29 (master_sentence -> comparisson_maqequal .)
    CALL            reduce using rule 29 (master_sentence -> comparisson_maqequal .)
    PRINTVALUES     reduce using rule 29 (master_sentence -> comparisson_maqequal .)
    ALTER           reduce using rule 29 (master_sentence -> comparisson_maqequal .)
    ALTERB          reduce using rule 29 (master_sentence -> comparisson_maqequal .)
    ID              reduce using rule 29 (master_sentence -> comparisson_maqequal .)
    ISTRUE          reduce using rule 29 (master_sentence -> comparisson_maqequal .)
    SIGNAL          reduce using rule 29 (master_sentence -> comparisson_maqequal .)
    VIEWSIGNAL      reduce using rule 29 (master_sentence -> comparisson_maqequal .)


state 37

    (30) master_sentence -> isTrue .

    RPARENT         reduce using rule 30 (master_sentence -> isTrue .)
    NEW             reduce using rule 30 (master_sentence -> isTrue .)
    VALUES          reduce using rule 30 (master_sentence -> isTrue .)
    CASE            reduce using rule 30 (master_sentence -> isTrue .)
    CALL            reduce using rule 30 (master_sentence -> isTrue .)
    PRINTVALUES     reduce using rule 30 (master_sentence -> isTrue .)
    ALTER           reduce using rule 30 (master_sentence -> isTrue .)
    ALTERB          reduce using rule 30 (master_sentence -> isTrue .)
    ID              reduce using rule 30 (master_sentence -> isTrue .)
    ISTRUE          reduce using rule 30 (master_sentence -> isTrue .)
    SIGNAL          reduce using rule 30 (master_sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 30 (master_sentence -> isTrue .)


state 38

    (31) master_sentence -> signal .

    RPARENT         reduce using rule 31 (master_sentence -> signal .)
    NEW             reduce using rule 31 (master_sentence -> signal .)
    VALUES          reduce using rule 31 (master_sentence -> signal .)
    CASE            reduce using rule 31 (master_sentence -> signal .)
    CALL            reduce using rule 31 (master_sentence -> signal .)
    PRINTVALUES     reduce using rule 31 (master_sentence -> signal .)
    ALTER           reduce using rule 31 (master_sentence -> signal .)
    ALTERB          reduce using rule 31 (master_sentence -> signal .)
    ID              reduce using rule 31 (master_sentence -> signal .)
    ISTRUE          reduce using rule 31 (master_sentence -> signal .)
    SIGNAL          reduce using rule 31 (master_sentence -> signal .)
    VIEWSIGNAL      reduce using rule 31 (master_sentence -> signal .)


state 39

    (32) master_sentence -> viewsignal .

    RPARENT         reduce using rule 32 (master_sentence -> viewsignal .)
    NEW             reduce using rule 32 (master_sentence -> viewsignal .)
    VALUES          reduce using rule 32 (master_sentence -> viewsignal .)
    CASE            reduce using rule 32 (master_sentence -> viewsignal .)
    CALL            reduce using rule 32 (master_sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 32 (master_sentence -> viewsignal .)
    ALTER           reduce using rule 32 (master_sentence -> viewsignal .)
    ALTERB          reduce using rule 32 (master_sentence -> viewsignal .)
    ID              reduce using rule 32 (master_sentence -> viewsignal .)
    ISTRUE          reduce using rule 32 (master_sentence -> viewsignal .)
    SIGNAL          reduce using rule 32 (master_sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 32 (master_sentence -> viewsignal .)


state 40

    (33) master_sentence -> empty .

    RPARENT         reduce using rule 33 (master_sentence -> empty .)
    NEW             reduce using rule 33 (master_sentence -> empty .)
    VALUES          reduce using rule 33 (master_sentence -> empty .)
    CASE            reduce using rule 33 (master_sentence -> empty .)
    CALL            reduce using rule 33 (master_sentence -> empty .)
    PRINTVALUES     reduce using rule 33 (master_sentence -> empty .)
    ALTER           reduce using rule 33 (master_sentence -> empty .)
    ALTERB          reduce using rule 33 (master_sentence -> empty .)
    ID              reduce using rule 33 (master_sentence -> empty .)
    ISTRUE          reduce using rule 33 (master_sentence -> empty .)
    SIGNAL          reduce using rule 33 (master_sentence -> empty .)
    VIEWSIGNAL      reduce using rule 33 (master_sentence -> empty .)


state 41

    (90) comparisson_maq -> ID . MAQ INTEGER
    (91) comparisson_meq -> ID . MEQ INTEGER
    (92) comparisson_equal -> ID . EQUAL INTEGER
    (93) comparisson_dif -> ID . DIFFERENT INTEGER
    (94) comparisson_meqequal -> ID . MEQEQUAL INTEGER
    (95) comparisson_maqequal -> ID . MAQEQUAL INTEGER

    MAQ             shift and go to state 76
    MEQ             shift and go to state 77
    EQUAL           shift and go to state 78
    DIFFERENT       shift and go to state 79
    MEQEQUAL        shift and go to state 80
    MAQEQUAL        shift and go to state 81


state 42

    (68) values -> VALUES . LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (69) values -> VALUES . LPARENT ID COMA BOOL RPARENT SEMICOLON
    (70) values -> VALUES . LPARENT ID COMA return_statement RPARENT SEMICOLON

    LPARENT         shift and go to state 82


state 43

    (97) case -> CASE . expression recursive_conditions SEMICOLON
    (102) expression -> . ID

    ID              shift and go to state 84

    expression                     shift and go to state 83

state 44

    (71) call -> CALL . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 85


state 45

    (72) print_values -> PRINTVALUES . LPARENT printable_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 86


state 46

    (85) alter -> ALTER . LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (86) alter -> ALTER . LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (87) alter -> ALTER . LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (88) alter -> ALTER . LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 87


state 47

    (89) alterB -> ALTERB . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 88


state 48

    (96) isTrue -> ISTRUE . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 89


state 49

    (104) signal -> SIGNAL . LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (105) signal -> SIGNAL . LPARENT ID COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 90


state 50

    (106) viewsignal -> VIEWSIGNAL . LPARENT INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 91


state 51

    (36) master_var -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 92


state 52

    (13) procedure -> declare_procedure LPARENT sentences . RPARENT SEMICOLON
    (39) sentences -> sentences . sentence
    (40) sentence -> . local_variable
    (41) sentence -> . values
    (42) sentence -> . case
    (43) sentence -> . call
    (44) sentence -> . print_values
    (45) sentence -> . alter
    (46) sentence -> . alterB
    (47) sentence -> . comparisson_maq
    (48) sentence -> . comparisson_meq
    (49) sentence -> . comparisson_equal
    (50) sentence -> . comparisson_dif
    (51) sentence -> . comparisson_meqequal
    (52) sentence -> . comparisson_maqequal
    (53) sentence -> . isTrue
    (54) sentence -> . signal
    (55) sentence -> . viewsignal
    (56) sentence -> . empty
    (66) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (67) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (68) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (69) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (70) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (97) case -> . CASE expression recursive_conditions SEMICOLON
    (71) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (72) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (85) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (86) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (87) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (88) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (89) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (90) comparisson_maq -> . ID MAQ INTEGER
    (91) comparisson_meq -> . ID MEQ INTEGER
    (92) comparisson_equal -> . ID EQUAL INTEGER
    (93) comparisson_dif -> . ID DIFFERENT INTEGER
    (94) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (95) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (96) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (104) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (106) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (107) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
    RPARENT         shift and go to state 93
    NEW             shift and go to state 71
    VALUES          shift and go to state 42
    CASE            shift and go to state 43
    CALL            shift and go to state 44
    PRINTVALUES     shift and go to state 45
    ALTER           shift and go to state 46
    ALTERB          shift and go to state 47
    ID              shift and go to state 41
    ISTRUE          shift and go to state 48
    SIGNAL          shift and go to state 49
    VIEWSIGNAL      shift and go to state 50

  ! RPARENT         [ reduce using rule 107 (empty -> .) ]
  ! NEW             [ reduce using rule 107 (empty -> .) ]
  ! VALUES          [ reduce using rule 107 (empty -> .) ]
  ! CASE            [ reduce using rule 107 (empty -> .) ]
  ! CALL            [ reduce using rule 107 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 107 (empty -> .) ]
  ! ALTER           [ reduce using rule 107 (empty -> .) ]
  ! ALTERB          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 107 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 107 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 107 (empty -> .) ]

    sentence                       shift and go to state 94
    local_variable                 shift and go to state 54
    values                         shift and go to state 55
    case                           shift and go to state 56
    call                           shift and go to state 57
    print_values                   shift and go to state 58
    alter                          shift and go to state 59
    alterB                         shift and go to state 60
    comparisson_maq                shift and go to state 61
    comparisson_meq                shift and go to state 62
    comparisson_equal              shift and go to state 63
    comparisson_dif                shift and go to state 64
    comparisson_meqequal           shift and go to state 65
    comparisson_maqequal           shift and go to state 66
    isTrue                         shift and go to state 67
    signal                         shift and go to state 68
    viewsignal                     shift and go to state 69
    empty                          shift and go to state 70

state 53

    (38) sentences -> sentence .

    RPARENT         reduce using rule 38 (sentences -> sentence .)
    NEW             reduce using rule 38 (sentences -> sentence .)
    VALUES          reduce using rule 38 (sentences -> sentence .)
    CASE            reduce using rule 38 (sentences -> sentence .)
    CALL            reduce using rule 38 (sentences -> sentence .)
    PRINTVALUES     reduce using rule 38 (sentences -> sentence .)
    ALTER           reduce using rule 38 (sentences -> sentence .)
    ALTERB          reduce using rule 38 (sentences -> sentence .)
    ID              reduce using rule 38 (sentences -> sentence .)
    ISTRUE          reduce using rule 38 (sentences -> sentence .)
    SIGNAL          reduce using rule 38 (sentences -> sentence .)
    VIEWSIGNAL      reduce using rule 38 (sentences -> sentence .)


state 54

    (40) sentence -> local_variable .

    RPARENT         reduce using rule 40 (sentence -> local_variable .)
    NEW             reduce using rule 40 (sentence -> local_variable .)
    VALUES          reduce using rule 40 (sentence -> local_variable .)
    CASE            reduce using rule 40 (sentence -> local_variable .)
    CALL            reduce using rule 40 (sentence -> local_variable .)
    PRINTVALUES     reduce using rule 40 (sentence -> local_variable .)
    ALTER           reduce using rule 40 (sentence -> local_variable .)
    ALTERB          reduce using rule 40 (sentence -> local_variable .)
    ID              reduce using rule 40 (sentence -> local_variable .)
    ISTRUE          reduce using rule 40 (sentence -> local_variable .)
    SIGNAL          reduce using rule 40 (sentence -> local_variable .)
    VIEWSIGNAL      reduce using rule 40 (sentence -> local_variable .)


state 55

    (41) sentence -> values .

    RPARENT         reduce using rule 41 (sentence -> values .)
    NEW             reduce using rule 41 (sentence -> values .)
    VALUES          reduce using rule 41 (sentence -> values .)
    CASE            reduce using rule 41 (sentence -> values .)
    CALL            reduce using rule 41 (sentence -> values .)
    PRINTVALUES     reduce using rule 41 (sentence -> values .)
    ALTER           reduce using rule 41 (sentence -> values .)
    ALTERB          reduce using rule 41 (sentence -> values .)
    ID              reduce using rule 41 (sentence -> values .)
    ISTRUE          reduce using rule 41 (sentence -> values .)
    SIGNAL          reduce using rule 41 (sentence -> values .)
    VIEWSIGNAL      reduce using rule 41 (sentence -> values .)


state 56

    (42) sentence -> case .

    RPARENT         reduce using rule 42 (sentence -> case .)
    NEW             reduce using rule 42 (sentence -> case .)
    VALUES          reduce using rule 42 (sentence -> case .)
    CASE            reduce using rule 42 (sentence -> case .)
    CALL            reduce using rule 42 (sentence -> case .)
    PRINTVALUES     reduce using rule 42 (sentence -> case .)
    ALTER           reduce using rule 42 (sentence -> case .)
    ALTERB          reduce using rule 42 (sentence -> case .)
    ID              reduce using rule 42 (sentence -> case .)
    ISTRUE          reduce using rule 42 (sentence -> case .)
    SIGNAL          reduce using rule 42 (sentence -> case .)
    VIEWSIGNAL      reduce using rule 42 (sentence -> case .)


state 57

    (43) sentence -> call .

    RPARENT         reduce using rule 43 (sentence -> call .)
    NEW             reduce using rule 43 (sentence -> call .)
    VALUES          reduce using rule 43 (sentence -> call .)
    CASE            reduce using rule 43 (sentence -> call .)
    CALL            reduce using rule 43 (sentence -> call .)
    PRINTVALUES     reduce using rule 43 (sentence -> call .)
    ALTER           reduce using rule 43 (sentence -> call .)
    ALTERB          reduce using rule 43 (sentence -> call .)
    ID              reduce using rule 43 (sentence -> call .)
    ISTRUE          reduce using rule 43 (sentence -> call .)
    SIGNAL          reduce using rule 43 (sentence -> call .)
    VIEWSIGNAL      reduce using rule 43 (sentence -> call .)


state 58

    (44) sentence -> print_values .

    RPARENT         reduce using rule 44 (sentence -> print_values .)
    NEW             reduce using rule 44 (sentence -> print_values .)
    VALUES          reduce using rule 44 (sentence -> print_values .)
    CASE            reduce using rule 44 (sentence -> print_values .)
    CALL            reduce using rule 44 (sentence -> print_values .)
    PRINTVALUES     reduce using rule 44 (sentence -> print_values .)
    ALTER           reduce using rule 44 (sentence -> print_values .)
    ALTERB          reduce using rule 44 (sentence -> print_values .)
    ID              reduce using rule 44 (sentence -> print_values .)
    ISTRUE          reduce using rule 44 (sentence -> print_values .)
    SIGNAL          reduce using rule 44 (sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 44 (sentence -> print_values .)


state 59

    (45) sentence -> alter .

    RPARENT         reduce using rule 45 (sentence -> alter .)
    NEW             reduce using rule 45 (sentence -> alter .)
    VALUES          reduce using rule 45 (sentence -> alter .)
    CASE            reduce using rule 45 (sentence -> alter .)
    CALL            reduce using rule 45 (sentence -> alter .)
    PRINTVALUES     reduce using rule 45 (sentence -> alter .)
    ALTER           reduce using rule 45 (sentence -> alter .)
    ALTERB          reduce using rule 45 (sentence -> alter .)
    ID              reduce using rule 45 (sentence -> alter .)
    ISTRUE          reduce using rule 45 (sentence -> alter .)
    SIGNAL          reduce using rule 45 (sentence -> alter .)
    VIEWSIGNAL      reduce using rule 45 (sentence -> alter .)


state 60

    (46) sentence -> alterB .

    RPARENT         reduce using rule 46 (sentence -> alterB .)
    NEW             reduce using rule 46 (sentence -> alterB .)
    VALUES          reduce using rule 46 (sentence -> alterB .)
    CASE            reduce using rule 46 (sentence -> alterB .)
    CALL            reduce using rule 46 (sentence -> alterB .)
    PRINTVALUES     reduce using rule 46 (sentence -> alterB .)
    ALTER           reduce using rule 46 (sentence -> alterB .)
    ALTERB          reduce using rule 46 (sentence -> alterB .)
    ID              reduce using rule 46 (sentence -> alterB .)
    ISTRUE          reduce using rule 46 (sentence -> alterB .)
    SIGNAL          reduce using rule 46 (sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 46 (sentence -> alterB .)


state 61

    (47) sentence -> comparisson_maq .

    RPARENT         reduce using rule 47 (sentence -> comparisson_maq .)
    NEW             reduce using rule 47 (sentence -> comparisson_maq .)
    VALUES          reduce using rule 47 (sentence -> comparisson_maq .)
    CASE            reduce using rule 47 (sentence -> comparisson_maq .)
    CALL            reduce using rule 47 (sentence -> comparisson_maq .)
    PRINTVALUES     reduce using rule 47 (sentence -> comparisson_maq .)
    ALTER           reduce using rule 47 (sentence -> comparisson_maq .)
    ALTERB          reduce using rule 47 (sentence -> comparisson_maq .)
    ID              reduce using rule 47 (sentence -> comparisson_maq .)
    ISTRUE          reduce using rule 47 (sentence -> comparisson_maq .)
    SIGNAL          reduce using rule 47 (sentence -> comparisson_maq .)
    VIEWSIGNAL      reduce using rule 47 (sentence -> comparisson_maq .)


state 62

    (48) sentence -> comparisson_meq .

    RPARENT         reduce using rule 48 (sentence -> comparisson_meq .)
    NEW             reduce using rule 48 (sentence -> comparisson_meq .)
    VALUES          reduce using rule 48 (sentence -> comparisson_meq .)
    CASE            reduce using rule 48 (sentence -> comparisson_meq .)
    CALL            reduce using rule 48 (sentence -> comparisson_meq .)
    PRINTVALUES     reduce using rule 48 (sentence -> comparisson_meq .)
    ALTER           reduce using rule 48 (sentence -> comparisson_meq .)
    ALTERB          reduce using rule 48 (sentence -> comparisson_meq .)
    ID              reduce using rule 48 (sentence -> comparisson_meq .)
    ISTRUE          reduce using rule 48 (sentence -> comparisson_meq .)
    SIGNAL          reduce using rule 48 (sentence -> comparisson_meq .)
    VIEWSIGNAL      reduce using rule 48 (sentence -> comparisson_meq .)


state 63

    (49) sentence -> comparisson_equal .

    RPARENT         reduce using rule 49 (sentence -> comparisson_equal .)
    NEW             reduce using rule 49 (sentence -> comparisson_equal .)
    VALUES          reduce using rule 49 (sentence -> comparisson_equal .)
    CASE            reduce using rule 49 (sentence -> comparisson_equal .)
    CALL            reduce using rule 49 (sentence -> comparisson_equal .)
    PRINTVALUES     reduce using rule 49 (sentence -> comparisson_equal .)
    ALTER           reduce using rule 49 (sentence -> comparisson_equal .)
    ALTERB          reduce using rule 49 (sentence -> comparisson_equal .)
    ID              reduce using rule 49 (sentence -> comparisson_equal .)
    ISTRUE          reduce using rule 49 (sentence -> comparisson_equal .)
    SIGNAL          reduce using rule 49 (sentence -> comparisson_equal .)
    VIEWSIGNAL      reduce using rule 49 (sentence -> comparisson_equal .)


state 64

    (50) sentence -> comparisson_dif .

    RPARENT         reduce using rule 50 (sentence -> comparisson_dif .)
    NEW             reduce using rule 50 (sentence -> comparisson_dif .)
    VALUES          reduce using rule 50 (sentence -> comparisson_dif .)
    CASE            reduce using rule 50 (sentence -> comparisson_dif .)
    CALL            reduce using rule 50 (sentence -> comparisson_dif .)
    PRINTVALUES     reduce using rule 50 (sentence -> comparisson_dif .)
    ALTER           reduce using rule 50 (sentence -> comparisson_dif .)
    ALTERB          reduce using rule 50 (sentence -> comparisson_dif .)
    ID              reduce using rule 50 (sentence -> comparisson_dif .)
    ISTRUE          reduce using rule 50 (sentence -> comparisson_dif .)
    SIGNAL          reduce using rule 50 (sentence -> comparisson_dif .)
    VIEWSIGNAL      reduce using rule 50 (sentence -> comparisson_dif .)


state 65

    (51) sentence -> comparisson_meqequal .

    RPARENT         reduce using rule 51 (sentence -> comparisson_meqequal .)
    NEW             reduce using rule 51 (sentence -> comparisson_meqequal .)
    VALUES          reduce using rule 51 (sentence -> comparisson_meqequal .)
    CASE            reduce using rule 51 (sentence -> comparisson_meqequal .)
    CALL            reduce using rule 51 (sentence -> comparisson_meqequal .)
    PRINTVALUES     reduce using rule 51 (sentence -> comparisson_meqequal .)
    ALTER           reduce using rule 51 (sentence -> comparisson_meqequal .)
    ALTERB          reduce using rule 51 (sentence -> comparisson_meqequal .)
    ID              reduce using rule 51 (sentence -> comparisson_meqequal .)
    ISTRUE          reduce using rule 51 (sentence -> comparisson_meqequal .)
    SIGNAL          reduce using rule 51 (sentence -> comparisson_meqequal .)
    VIEWSIGNAL      reduce using rule 51 (sentence -> comparisson_meqequal .)


state 66

    (52) sentence -> comparisson_maqequal .

    RPARENT         reduce using rule 52 (sentence -> comparisson_maqequal .)
    NEW             reduce using rule 52 (sentence -> comparisson_maqequal .)
    VALUES          reduce using rule 52 (sentence -> comparisson_maqequal .)
    CASE            reduce using rule 52 (sentence -> comparisson_maqequal .)
    CALL            reduce using rule 52 (sentence -> comparisson_maqequal .)
    PRINTVALUES     reduce using rule 52 (sentence -> comparisson_maqequal .)
    ALTER           reduce using rule 52 (sentence -> comparisson_maqequal .)
    ALTERB          reduce using rule 52 (sentence -> comparisson_maqequal .)
    ID              reduce using rule 52 (sentence -> comparisson_maqequal .)
    ISTRUE          reduce using rule 52 (sentence -> comparisson_maqequal .)
    SIGNAL          reduce using rule 52 (sentence -> comparisson_maqequal .)
    VIEWSIGNAL      reduce using rule 52 (sentence -> comparisson_maqequal .)


state 67

    (53) sentence -> isTrue .

    RPARENT         reduce using rule 53 (sentence -> isTrue .)
    NEW             reduce using rule 53 (sentence -> isTrue .)
    VALUES          reduce using rule 53 (sentence -> isTrue .)
    CASE            reduce using rule 53 (sentence -> isTrue .)
    CALL            reduce using rule 53 (sentence -> isTrue .)
    PRINTVALUES     reduce using rule 53 (sentence -> isTrue .)
    ALTER           reduce using rule 53 (sentence -> isTrue .)
    ALTERB          reduce using rule 53 (sentence -> isTrue .)
    ID              reduce using rule 53 (sentence -> isTrue .)
    ISTRUE          reduce using rule 53 (sentence -> isTrue .)
    SIGNAL          reduce using rule 53 (sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 53 (sentence -> isTrue .)


state 68

    (54) sentence -> signal .

    RPARENT         reduce using rule 54 (sentence -> signal .)
    NEW             reduce using rule 54 (sentence -> signal .)
    VALUES          reduce using rule 54 (sentence -> signal .)
    CASE            reduce using rule 54 (sentence -> signal .)
    CALL            reduce using rule 54 (sentence -> signal .)
    PRINTVALUES     reduce using rule 54 (sentence -> signal .)
    ALTER           reduce using rule 54 (sentence -> signal .)
    ALTERB          reduce using rule 54 (sentence -> signal .)
    ID              reduce using rule 54 (sentence -> signal .)
    ISTRUE          reduce using rule 54 (sentence -> signal .)
    SIGNAL          reduce using rule 54 (sentence -> signal .)
    VIEWSIGNAL      reduce using rule 54 (sentence -> signal .)


state 69

    (55) sentence -> viewsignal .

    RPARENT         reduce using rule 55 (sentence -> viewsignal .)
    NEW             reduce using rule 55 (sentence -> viewsignal .)
    VALUES          reduce using rule 55 (sentence -> viewsignal .)
    CASE            reduce using rule 55 (sentence -> viewsignal .)
    CALL            reduce using rule 55 (sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 55 (sentence -> viewsignal .)
    ALTER           reduce using rule 55 (sentence -> viewsignal .)
    ALTERB          reduce using rule 55 (sentence -> viewsignal .)
    ID              reduce using rule 55 (sentence -> viewsignal .)
    ISTRUE          reduce using rule 55 (sentence -> viewsignal .)
    SIGNAL          reduce using rule 55 (sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 55 (sentence -> viewsignal .)


state 70

    (56) sentence -> empty .

    RPARENT         reduce using rule 56 (sentence -> empty .)
    NEW             reduce using rule 56 (sentence -> empty .)
    VALUES          reduce using rule 56 (sentence -> empty .)
    CASE            reduce using rule 56 (sentence -> empty .)
    CALL            reduce using rule 56 (sentence -> empty .)
    PRINTVALUES     reduce using rule 56 (sentence -> empty .)
    ALTER           reduce using rule 56 (sentence -> empty .)
    ALTERB          reduce using rule 56 (sentence -> empty .)
    ID              reduce using rule 56 (sentence -> empty .)
    ISTRUE          reduce using rule 56 (sentence -> empty .)
    SIGNAL          reduce using rule 56 (sentence -> empty .)
    VIEWSIGNAL      reduce using rule 56 (sentence -> empty .)


state 71

    (66) local_variable -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (67) local_variable -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 95


state 72

    (6) start -> master_vars master master_vars procedures .
    (7) start -> master_vars master master_vars procedures . master_vars
    (12) procedures -> procedures . procedure
    (34) master_vars -> . master_var
    (35) master_vars -> . master_vars master_var
    (13) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (36) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (10) declare_procedure -> . PROC ID

    $end            reduce using rule 6 (start -> master_vars master master_vars procedures .)
    NEW             shift and go to state 6
    PROC            shift and go to state 11

    master_vars                    shift and go to state 96
    procedure                      shift and go to state 16
    master_var                     shift and go to state 5
    declare_procedure              shift and go to state 10

state 73

    (9) start -> master_vars master procedures master_vars .
    (35) master_vars -> master_vars . master_var
    (36) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    $end            reduce using rule 9 (start -> master_vars master procedures master_vars .)
    NEW             shift and go to state 6

    master_var                     shift and go to state 13

state 74

    (14) master -> MASTER LPARENT master_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 97


state 75

    (16) master_sentences -> master_sentences master_sentence .

    RPARENT         reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    NEW             reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    VALUES          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    CASE            reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    CALL            reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    PRINTVALUES     reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    ALTER           reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    ALTERB          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    ID              reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    ISTRUE          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    SIGNAL          reduce using rule 16 (master_sentences -> master_sentences master_sentence .)
    VIEWSIGNAL      reduce using rule 16 (master_sentences -> master_sentences master_sentence .)


state 76

    (90) comparisson_maq -> ID MAQ . INTEGER

    INTEGER         shift and go to state 98


state 77

    (91) comparisson_meq -> ID MEQ . INTEGER

    INTEGER         shift and go to state 99


state 78

    (92) comparisson_equal -> ID EQUAL . INTEGER

    INTEGER         shift and go to state 100


state 79

    (93) comparisson_dif -> ID DIFFERENT . INTEGER

    INTEGER         shift and go to state 101


state 80

    (94) comparisson_meqequal -> ID MEQEQUAL . INTEGER

    INTEGER         shift and go to state 102


state 81

    (95) comparisson_maqequal -> ID MAQEQUAL . INTEGER

    INTEGER         shift and go to state 103


state 82

    (68) values -> VALUES LPARENT . ID COMA INTEGER RPARENT SEMICOLON
    (69) values -> VALUES LPARENT . ID COMA BOOL RPARENT SEMICOLON
    (70) values -> VALUES LPARENT . ID COMA return_statement RPARENT SEMICOLON

    ID              shift and go to state 104


state 83

    (97) case -> CASE expression . recursive_conditions SEMICOLON
    (99) recursive_conditions -> . recursive_condition
    (100) recursive_conditions -> . recursive_conditions recursive_condition
    (101) recursive_condition -> . condition LPARENT sentences RPARENT
    (103) condition -> . WHEN INTEGER THEN

    WHEN            shift and go to state 108

    recursive_conditions           shift and go to state 105
    recursive_condition            shift and go to state 106
    condition                      shift and go to state 107

state 84

    (102) expression -> ID .

    WHEN            reduce using rule 102 (expression -> ID .)


state 85

    (71) call -> CALL LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 109


state 86

    (72) print_values -> PRINTVALUES LPARENT . printable_sentences RPARENT SEMICOLON
    (73) printable_sentences -> . printable_sentence_var
    (74) printable_sentences -> . printable_sentence_string
    (75) printable_sentences -> . printable_sentence_var COMA printable_sentence_var
    (76) printable_sentences -> . printable_sentence_string COMA printable_sentence_string
    (77) printable_sentences -> . printable_sentence_var COMA printable_sentence_string
    (78) printable_sentences -> . printable_sentence_string COMA printable_sentence_var
    (79) printable_sentences -> . printable_sentences COMA printable_sentence_var
    (80) printable_sentences -> . printable_sentences COMA printable_sentence_string
    (81) printable_sentences -> . COMA printable_sentences COMA printable_sentence_var
    (82) printable_sentences -> . COMA printable_sentences COMA printable_sentence_string
    (83) printable_sentence_var -> . ID
    (84) printable_sentence_string -> . STRING

    COMA            shift and go to state 113
    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentences            shift and go to state 110
    printable_sentence_var         shift and go to state 111
    printable_sentence_string      shift and go to state 112

state 87

    (85) alter -> ALTER LPARENT . ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (86) alter -> ALTER LPARENT . ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (87) alter -> ALTER LPARENT . ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (88) alter -> ALTER LPARENT . ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    ID              shift and go to state 116


state 88

    (89) alterB -> ALTERB LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 117


state 89

    (96) isTrue -> ISTRUE LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 118


state 90

    (104) signal -> SIGNAL LPARENT . INTEGER COMA INTEGER RPARENT SEMICOLON
    (105) signal -> SIGNAL LPARENT . ID COMA INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 119
    ID              shift and go to state 120


state 91

    (106) viewsignal -> VIEWSIGNAL LPARENT . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 121


state 92

    (36) master_var -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON

    TYPE            shift and go to state 122


state 93

    (13) procedure -> declare_procedure LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 123


state 94

    (39) sentences -> sentences sentence .

    RPARENT         reduce using rule 39 (sentences -> sentences sentence .)
    NEW             reduce using rule 39 (sentences -> sentences sentence .)
    VALUES          reduce using rule 39 (sentences -> sentences sentence .)
    CASE            reduce using rule 39 (sentences -> sentences sentence .)
    CALL            reduce using rule 39 (sentences -> sentences sentence .)
    PRINTVALUES     reduce using rule 39 (sentences -> sentences sentence .)
    ALTER           reduce using rule 39 (sentences -> sentences sentence .)
    ALTERB          reduce using rule 39 (sentences -> sentences sentence .)
    ID              reduce using rule 39 (sentences -> sentences sentence .)
    ISTRUE          reduce using rule 39 (sentences -> sentences sentence .)
    SIGNAL          reduce using rule 39 (sentences -> sentences sentence .)
    VIEWSIGNAL      reduce using rule 39 (sentences -> sentences sentence .)


state 95

    (66) local_variable -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (67) local_variable -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 124


state 96

    (7) start -> master_vars master master_vars procedures master_vars .
    (35) master_vars -> master_vars . master_var
    (36) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    $end            reduce using rule 7 (start -> master_vars master master_vars procedures master_vars .)
    NEW             shift and go to state 6

    master_var                     shift and go to state 13

state 97

    (14) master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .

    NEW             reduce using rule 14 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)
    PROC            reduce using rule 14 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)
    $end            reduce using rule 14 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)


state 98

    (90) comparisson_maq -> ID MAQ INTEGER .

    RPARENT         reduce using rule 90 (comparisson_maq -> ID MAQ INTEGER .)
    NEW             reduce using rule 90 (comparisson_maq -> ID MAQ INTEGER .)
    VALUES          reduce using rule 90 (comparisson_maq -> ID MAQ INTEGER .)
    CASE            reduce using rule 90 (comparisson_maq -> ID MAQ INTEGER .)
    CALL            reduce using rule 90 (comparisson_maq -> ID MAQ INTEGER .)
    PRINTVALUES     reduce using rule 90 (comparisson_maq -> ID MAQ INTEGER .)
    ALTER           reduce using rule 90 (comparisson_maq -> ID MAQ INTEGER .)
    ALTERB          reduce using rule 90 (comparisson_maq -> ID MAQ INTEGER .)
    ID              reduce using rule 90 (comparisson_maq -> ID MAQ INTEGER .)
    ISTRUE          reduce using rule 90 (comparisson_maq -> ID MAQ INTEGER .)
    SIGNAL          reduce using rule 90 (comparisson_maq -> ID MAQ INTEGER .)
    VIEWSIGNAL      reduce using rule 90 (comparisson_maq -> ID MAQ INTEGER .)


state 99

    (91) comparisson_meq -> ID MEQ INTEGER .

    RPARENT         reduce using rule 91 (comparisson_meq -> ID MEQ INTEGER .)
    NEW             reduce using rule 91 (comparisson_meq -> ID MEQ INTEGER .)
    VALUES          reduce using rule 91 (comparisson_meq -> ID MEQ INTEGER .)
    CASE            reduce using rule 91 (comparisson_meq -> ID MEQ INTEGER .)
    CALL            reduce using rule 91 (comparisson_meq -> ID MEQ INTEGER .)
    PRINTVALUES     reduce using rule 91 (comparisson_meq -> ID MEQ INTEGER .)
    ALTER           reduce using rule 91 (comparisson_meq -> ID MEQ INTEGER .)
    ALTERB          reduce using rule 91 (comparisson_meq -> ID MEQ INTEGER .)
    ID              reduce using rule 91 (comparisson_meq -> ID MEQ INTEGER .)
    ISTRUE          reduce using rule 91 (comparisson_meq -> ID MEQ INTEGER .)
    SIGNAL          reduce using rule 91 (comparisson_meq -> ID MEQ INTEGER .)
    VIEWSIGNAL      reduce using rule 91 (comparisson_meq -> ID MEQ INTEGER .)


state 100

    (92) comparisson_equal -> ID EQUAL INTEGER .

    RPARENT         reduce using rule 92 (comparisson_equal -> ID EQUAL INTEGER .)
    NEW             reduce using rule 92 (comparisson_equal -> ID EQUAL INTEGER .)
    VALUES          reduce using rule 92 (comparisson_equal -> ID EQUAL INTEGER .)
    CASE            reduce using rule 92 (comparisson_equal -> ID EQUAL INTEGER .)
    CALL            reduce using rule 92 (comparisson_equal -> ID EQUAL INTEGER .)
    PRINTVALUES     reduce using rule 92 (comparisson_equal -> ID EQUAL INTEGER .)
    ALTER           reduce using rule 92 (comparisson_equal -> ID EQUAL INTEGER .)
    ALTERB          reduce using rule 92 (comparisson_equal -> ID EQUAL INTEGER .)
    ID              reduce using rule 92 (comparisson_equal -> ID EQUAL INTEGER .)
    ISTRUE          reduce using rule 92 (comparisson_equal -> ID EQUAL INTEGER .)
    SIGNAL          reduce using rule 92 (comparisson_equal -> ID EQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 92 (comparisson_equal -> ID EQUAL INTEGER .)


state 101

    (93) comparisson_dif -> ID DIFFERENT INTEGER .

    RPARENT         reduce using rule 93 (comparisson_dif -> ID DIFFERENT INTEGER .)
    NEW             reduce using rule 93 (comparisson_dif -> ID DIFFERENT INTEGER .)
    VALUES          reduce using rule 93 (comparisson_dif -> ID DIFFERENT INTEGER .)
    CASE            reduce using rule 93 (comparisson_dif -> ID DIFFERENT INTEGER .)
    CALL            reduce using rule 93 (comparisson_dif -> ID DIFFERENT INTEGER .)
    PRINTVALUES     reduce using rule 93 (comparisson_dif -> ID DIFFERENT INTEGER .)
    ALTER           reduce using rule 93 (comparisson_dif -> ID DIFFERENT INTEGER .)
    ALTERB          reduce using rule 93 (comparisson_dif -> ID DIFFERENT INTEGER .)
    ID              reduce using rule 93 (comparisson_dif -> ID DIFFERENT INTEGER .)
    ISTRUE          reduce using rule 93 (comparisson_dif -> ID DIFFERENT INTEGER .)
    SIGNAL          reduce using rule 93 (comparisson_dif -> ID DIFFERENT INTEGER .)
    VIEWSIGNAL      reduce using rule 93 (comparisson_dif -> ID DIFFERENT INTEGER .)


state 102

    (94) comparisson_meqequal -> ID MEQEQUAL INTEGER .

    RPARENT         reduce using rule 94 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    NEW             reduce using rule 94 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    VALUES          reduce using rule 94 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    CASE            reduce using rule 94 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    CALL            reduce using rule 94 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 94 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    ALTER           reduce using rule 94 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    ALTERB          reduce using rule 94 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    ID              reduce using rule 94 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    ISTRUE          reduce using rule 94 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    SIGNAL          reduce using rule 94 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 94 (comparisson_meqequal -> ID MEQEQUAL INTEGER .)


state 103

    (95) comparisson_maqequal -> ID MAQEQUAL INTEGER .

    RPARENT         reduce using rule 95 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    NEW             reduce using rule 95 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    VALUES          reduce using rule 95 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    CASE            reduce using rule 95 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    CALL            reduce using rule 95 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 95 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    ALTER           reduce using rule 95 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    ALTERB          reduce using rule 95 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    ID              reduce using rule 95 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    ISTRUE          reduce using rule 95 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    SIGNAL          reduce using rule 95 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 95 (comparisson_maqequal -> ID MAQEQUAL INTEGER .)


state 104

    (68) values -> VALUES LPARENT ID . COMA INTEGER RPARENT SEMICOLON
    (69) values -> VALUES LPARENT ID . COMA BOOL RPARENT SEMICOLON
    (70) values -> VALUES LPARENT ID . COMA return_statement RPARENT SEMICOLON

    COMA            shift and go to state 125


state 105

    (97) case -> CASE expression recursive_conditions . SEMICOLON
    (100) recursive_conditions -> recursive_conditions . recursive_condition
    (101) recursive_condition -> . condition LPARENT sentences RPARENT
    (103) condition -> . WHEN INTEGER THEN

    SEMICOLON       shift and go to state 126
    WHEN            shift and go to state 108

    recursive_condition            shift and go to state 127
    condition                      shift and go to state 107

state 106

    (99) recursive_conditions -> recursive_condition .

    SEMICOLON       reduce using rule 99 (recursive_conditions -> recursive_condition .)
    WHEN            reduce using rule 99 (recursive_conditions -> recursive_condition .)


state 107

    (101) recursive_condition -> condition . LPARENT sentences RPARENT

    LPARENT         shift and go to state 128


state 108

    (103) condition -> WHEN . INTEGER THEN

    INTEGER         shift and go to state 129


state 109

    (71) call -> CALL LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 130


state 110

    (72) print_values -> PRINTVALUES LPARENT printable_sentences . RPARENT SEMICOLON
    (79) printable_sentences -> printable_sentences . COMA printable_sentence_var
    (80) printable_sentences -> printable_sentences . COMA printable_sentence_string

    RPARENT         shift and go to state 131
    COMA            shift and go to state 132


state 111

    (73) printable_sentences -> printable_sentence_var .
    (75) printable_sentences -> printable_sentence_var . COMA printable_sentence_var
    (77) printable_sentences -> printable_sentence_var . COMA printable_sentence_string

  ! shift/reduce conflict for COMA resolved as shift
    RPARENT         reduce using rule 73 (printable_sentences -> printable_sentence_var .)
    COMA            shift and go to state 133

  ! COMA            [ reduce using rule 73 (printable_sentences -> printable_sentence_var .) ]


state 112

    (74) printable_sentences -> printable_sentence_string .
    (76) printable_sentences -> printable_sentence_string . COMA printable_sentence_string
    (78) printable_sentences -> printable_sentence_string . COMA printable_sentence_var

  ! shift/reduce conflict for COMA resolved as shift
    RPARENT         reduce using rule 74 (printable_sentences -> printable_sentence_string .)
    COMA            shift and go to state 134

  ! COMA            [ reduce using rule 74 (printable_sentences -> printable_sentence_string .) ]


state 113

    (81) printable_sentences -> COMA . printable_sentences COMA printable_sentence_var
    (82) printable_sentences -> COMA . printable_sentences COMA printable_sentence_string
    (73) printable_sentences -> . printable_sentence_var
    (74) printable_sentences -> . printable_sentence_string
    (75) printable_sentences -> . printable_sentence_var COMA printable_sentence_var
    (76) printable_sentences -> . printable_sentence_string COMA printable_sentence_string
    (77) printable_sentences -> . printable_sentence_var COMA printable_sentence_string
    (78) printable_sentences -> . printable_sentence_string COMA printable_sentence_var
    (79) printable_sentences -> . printable_sentences COMA printable_sentence_var
    (80) printable_sentences -> . printable_sentences COMA printable_sentence_string
    (81) printable_sentences -> . COMA printable_sentences COMA printable_sentence_var
    (82) printable_sentences -> . COMA printable_sentences COMA printable_sentence_string
    (83) printable_sentence_var -> . ID
    (84) printable_sentence_string -> . STRING

    COMA            shift and go to state 113
    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentences            shift and go to state 135
    printable_sentence_var         shift and go to state 111
    printable_sentence_string      shift and go to state 112

state 114

    (83) printable_sentence_var -> ID .

    COMA            reduce using rule 83 (printable_sentence_var -> ID .)
    RPARENT         reduce using rule 83 (printable_sentence_var -> ID .)


state 115

    (84) printable_sentence_string -> STRING .

    COMA            reduce using rule 84 (printable_sentence_string -> STRING .)
    RPARENT         reduce using rule 84 (printable_sentence_string -> STRING .)


state 116

    (85) alter -> ALTER LPARENT ID . COMA ADD COMA INTEGER RPARENT SEMICOLON
    (86) alter -> ALTER LPARENT ID . COMA SUB COMA INTEGER RPARENT SEMICOLON
    (87) alter -> ALTER LPARENT ID . COMA MUL COMA INTEGER RPARENT SEMICOLON
    (88) alter -> ALTER LPARENT ID . COMA DIV COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 136


state 117

    (89) alterB -> ALTERB LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 137


state 118

    (96) isTrue -> ISTRUE LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 138


state 119

    (104) signal -> SIGNAL LPARENT INTEGER . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 139


state 120

    (105) signal -> SIGNAL LPARENT ID . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 140


state 121

    (106) viewsignal -> VIEWSIGNAL LPARENT INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 141


state 122

    (36) master_var -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (37) master_var -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 142


state 123

    (13) procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .

    PROC            reduce using rule 13 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)
    $end            reduce using rule 13 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 13 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)


state 124

    (66) local_variable -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (67) local_variable -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 143


state 125

    (68) values -> VALUES LPARENT ID COMA . INTEGER RPARENT SEMICOLON
    (69) values -> VALUES LPARENT ID COMA . BOOL RPARENT SEMICOLON
    (70) values -> VALUES LPARENT ID COMA . return_statement RPARENT SEMICOLON
    (57) return_statement -> . isTrue
    (58) return_statement -> . comparisson_maqequal
    (59) return_statement -> . comparisson_meqequal
    (60) return_statement -> . comparisson_dif
    (61) return_statement -> . comparisson_equal
    (62) return_statement -> . comparisson_meq
    (63) return_statement -> . comparisson_maq
    (64) return_statement -> . alterB
    (65) return_statement -> . alter
    (96) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (95) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (94) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (93) comparisson_dif -> . ID DIFFERENT INTEGER
    (92) comparisson_equal -> . ID EQUAL INTEGER
    (91) comparisson_meq -> . ID MEQ INTEGER
    (90) comparisson_maq -> . ID MAQ INTEGER
    (89) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (85) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (86) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (87) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (88) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 145
    BOOL            shift and go to state 146
    ISTRUE          shift and go to state 48
    ID              shift and go to state 144
    ALTERB          shift and go to state 47
    ALTER           shift and go to state 46

    return_statement               shift and go to state 147
    isTrue                         shift and go to state 148
    comparisson_maqequal           shift and go to state 149
    comparisson_meqequal           shift and go to state 150
    comparisson_dif                shift and go to state 151
    comparisson_equal              shift and go to state 152
    comparisson_meq                shift and go to state 153
    comparisson_maq                shift and go to state 154
    alterB                         shift and go to state 155
    alter                          shift and go to state 156

state 126

    (97) case -> CASE expression recursive_conditions SEMICOLON .

    RPARENT         reduce using rule 97 (case -> CASE expression recursive_conditions SEMICOLON .)
    NEW             reduce using rule 97 (case -> CASE expression recursive_conditions SEMICOLON .)
    VALUES          reduce using rule 97 (case -> CASE expression recursive_conditions SEMICOLON .)
    CASE            reduce using rule 97 (case -> CASE expression recursive_conditions SEMICOLON .)
    CALL            reduce using rule 97 (case -> CASE expression recursive_conditions SEMICOLON .)
    PRINTVALUES     reduce using rule 97 (case -> CASE expression recursive_conditions SEMICOLON .)
    ALTER           reduce using rule 97 (case -> CASE expression recursive_conditions SEMICOLON .)
    ALTERB          reduce using rule 97 (case -> CASE expression recursive_conditions SEMICOLON .)
    ID              reduce using rule 97 (case -> CASE expression recursive_conditions SEMICOLON .)
    ISTRUE          reduce using rule 97 (case -> CASE expression recursive_conditions SEMICOLON .)
    SIGNAL          reduce using rule 97 (case -> CASE expression recursive_conditions SEMICOLON .)
    VIEWSIGNAL      reduce using rule 97 (case -> CASE expression recursive_conditions SEMICOLON .)


state 127

    (100) recursive_conditions -> recursive_conditions recursive_condition .

    SEMICOLON       reduce using rule 100 (recursive_conditions -> recursive_conditions recursive_condition .)
    WHEN            reduce using rule 100 (recursive_conditions -> recursive_conditions recursive_condition .)


state 128

    (101) recursive_condition -> condition LPARENT . sentences RPARENT
    (38) sentences -> . sentence
    (39) sentences -> . sentences sentence
    (40) sentence -> . local_variable
    (41) sentence -> . values
    (42) sentence -> . case
    (43) sentence -> . call
    (44) sentence -> . print_values
    (45) sentence -> . alter
    (46) sentence -> . alterB
    (47) sentence -> . comparisson_maq
    (48) sentence -> . comparisson_meq
    (49) sentence -> . comparisson_equal
    (50) sentence -> . comparisson_dif
    (51) sentence -> . comparisson_meqequal
    (52) sentence -> . comparisson_maqequal
    (53) sentence -> . isTrue
    (54) sentence -> . signal
    (55) sentence -> . viewsignal
    (56) sentence -> . empty
    (66) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (67) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (68) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (69) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (70) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (97) case -> . CASE expression recursive_conditions SEMICOLON
    (71) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (72) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (85) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (86) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (87) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (88) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (89) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (90) comparisson_maq -> . ID MAQ INTEGER
    (91) comparisson_meq -> . ID MEQ INTEGER
    (92) comparisson_equal -> . ID EQUAL INTEGER
    (93) comparisson_dif -> . ID DIFFERENT INTEGER
    (94) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (95) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (96) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (104) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (106) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (107) empty -> .

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
    NEW             shift and go to state 71
    VALUES          shift and go to state 42
    CASE            shift and go to state 43
    CALL            shift and go to state 44
    PRINTVALUES     shift and go to state 45
    ALTER           shift and go to state 46
    ALTERB          shift and go to state 47
    ID              shift and go to state 41
    ISTRUE          shift and go to state 48
    SIGNAL          shift and go to state 49
    VIEWSIGNAL      shift and go to state 50
    RPARENT         reduce using rule 107 (empty -> .)

  ! NEW             [ reduce using rule 107 (empty -> .) ]
  ! VALUES          [ reduce using rule 107 (empty -> .) ]
  ! CASE            [ reduce using rule 107 (empty -> .) ]
  ! CALL            [ reduce using rule 107 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 107 (empty -> .) ]
  ! ALTER           [ reduce using rule 107 (empty -> .) ]
  ! ALTERB          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 107 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 107 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 107 (empty -> .) ]

    sentences                      shift and go to state 157
    sentence                       shift and go to state 53
    local_variable                 shift and go to state 54
    values                         shift and go to state 55
    case                           shift and go to state 56
    call                           shift and go to state 57
    print_values                   shift and go to state 58
    alter                          shift and go to state 59
    alterB                         shift and go to state 60
    comparisson_maq                shift and go to state 61
    comparisson_meq                shift and go to state 62
    comparisson_equal              shift and go to state 63
    comparisson_dif                shift and go to state 64
    comparisson_meqequal           shift and go to state 65
    comparisson_maqequal           shift and go to state 66
    isTrue                         shift and go to state 67
    signal                         shift and go to state 68
    viewsignal                     shift and go to state 69
    empty                          shift and go to state 70

state 129

    (103) condition -> WHEN INTEGER . THEN

    THEN            shift and go to state 158


state 130

    (71) call -> CALL LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 159


state 131

    (72) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 160


state 132

    (79) printable_sentences -> printable_sentences COMA . printable_sentence_var
    (80) printable_sentences -> printable_sentences COMA . printable_sentence_string
    (83) printable_sentence_var -> . ID
    (84) printable_sentence_string -> . STRING

    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentence_var         shift and go to state 161
    printable_sentence_string      shift and go to state 162

state 133

    (75) printable_sentences -> printable_sentence_var COMA . printable_sentence_var
    (77) printable_sentences -> printable_sentence_var COMA . printable_sentence_string
    (83) printable_sentence_var -> . ID
    (84) printable_sentence_string -> . STRING

    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentence_var         shift and go to state 163
    printable_sentence_string      shift and go to state 164

state 134

    (76) printable_sentences -> printable_sentence_string COMA . printable_sentence_string
    (78) printable_sentences -> printable_sentence_string COMA . printable_sentence_var
    (84) printable_sentence_string -> . STRING
    (83) printable_sentence_var -> . ID

    STRING          shift and go to state 115
    ID              shift and go to state 114

    printable_sentence_string      shift and go to state 165
    printable_sentence_var         shift and go to state 166

state 135

    (81) printable_sentences -> COMA printable_sentences . COMA printable_sentence_var
    (82) printable_sentences -> COMA printable_sentences . COMA printable_sentence_string
    (79) printable_sentences -> printable_sentences . COMA printable_sentence_var
    (80) printable_sentences -> printable_sentences . COMA printable_sentence_string

    COMA            shift and go to state 167


state 136

    (85) alter -> ALTER LPARENT ID COMA . ADD COMA INTEGER RPARENT SEMICOLON
    (86) alter -> ALTER LPARENT ID COMA . SUB COMA INTEGER RPARENT SEMICOLON
    (87) alter -> ALTER LPARENT ID COMA . MUL COMA INTEGER RPARENT SEMICOLON
    (88) alter -> ALTER LPARENT ID COMA . DIV COMA INTEGER RPARENT SEMICOLON

    ADD             shift and go to state 168
    SUB             shift and go to state 169
    MUL             shift and go to state 170
    DIV             shift and go to state 171


state 137

    (89) alterB -> ALTERB LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 172


state 138

    (96) isTrue -> ISTRUE LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 173


state 139

    (104) signal -> SIGNAL LPARENT INTEGER COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 174


state 140

    (105) signal -> SIGNAL LPARENT ID COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 175


state 141

    (106) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 176


state 142

    (36) master_var -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (37) master_var -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 177
    BOOL            shift and go to state 178


state 143

    (66) local_variable -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (67) local_variable -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON

    TYPE            shift and go to state 179


state 144

    (95) comparisson_maqequal -> ID . MAQEQUAL INTEGER
    (94) comparisson_meqequal -> ID . MEQEQUAL INTEGER
    (93) comparisson_dif -> ID . DIFFERENT INTEGER
    (92) comparisson_equal -> ID . EQUAL INTEGER
    (91) comparisson_meq -> ID . MEQ INTEGER
    (90) comparisson_maq -> ID . MAQ INTEGER

    MAQEQUAL        shift and go to state 81
    MEQEQUAL        shift and go to state 80
    DIFFERENT       shift and go to state 79
    EQUAL           shift and go to state 78
    MEQ             shift and go to state 77
    MAQ             shift and go to state 76


state 145

    (68) values -> VALUES LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 180


state 146

    (69) values -> VALUES LPARENT ID COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 181


state 147

    (70) values -> VALUES LPARENT ID COMA return_statement . RPARENT SEMICOLON

    RPARENT         shift and go to state 182


state 148

    (57) return_statement -> isTrue .

    RPARENT         reduce using rule 57 (return_statement -> isTrue .)


state 149

    (58) return_statement -> comparisson_maqequal .

    RPARENT         reduce using rule 58 (return_statement -> comparisson_maqequal .)


state 150

    (59) return_statement -> comparisson_meqequal .

    RPARENT         reduce using rule 59 (return_statement -> comparisson_meqequal .)


state 151

    (60) return_statement -> comparisson_dif .

    RPARENT         reduce using rule 60 (return_statement -> comparisson_dif .)


state 152

    (61) return_statement -> comparisson_equal .

    RPARENT         reduce using rule 61 (return_statement -> comparisson_equal .)


state 153

    (62) return_statement -> comparisson_meq .

    RPARENT         reduce using rule 62 (return_statement -> comparisson_meq .)


state 154

    (63) return_statement -> comparisson_maq .

    RPARENT         reduce using rule 63 (return_statement -> comparisson_maq .)


state 155

    (64) return_statement -> alterB .

    RPARENT         reduce using rule 64 (return_statement -> alterB .)


state 156

    (65) return_statement -> alter .

    RPARENT         reduce using rule 65 (return_statement -> alter .)


state 157

    (101) recursive_condition -> condition LPARENT sentences . RPARENT
    (39) sentences -> sentences . sentence
    (40) sentence -> . local_variable
    (41) sentence -> . values
    (42) sentence -> . case
    (43) sentence -> . call
    (44) sentence -> . print_values
    (45) sentence -> . alter
    (46) sentence -> . alterB
    (47) sentence -> . comparisson_maq
    (48) sentence -> . comparisson_meq
    (49) sentence -> . comparisson_equal
    (50) sentence -> . comparisson_dif
    (51) sentence -> . comparisson_meqequal
    (52) sentence -> . comparisson_maqequal
    (53) sentence -> . isTrue
    (54) sentence -> . signal
    (55) sentence -> . viewsignal
    (56) sentence -> . empty
    (66) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (67) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (68) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (69) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (70) values -> . VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON
    (97) case -> . CASE expression recursive_conditions SEMICOLON
    (71) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (72) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (85) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (86) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (87) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (88) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (89) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (90) comparisson_maq -> . ID MAQ INTEGER
    (91) comparisson_meq -> . ID MEQ INTEGER
    (92) comparisson_equal -> . ID EQUAL INTEGER
    (93) comparisson_dif -> . ID DIFFERENT INTEGER
    (94) comparisson_meqequal -> . ID MEQEQUAL INTEGER
    (95) comparisson_maqequal -> . ID MAQEQUAL INTEGER
    (96) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (104) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (105) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (106) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (107) empty -> .

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
    RPARENT         shift and go to state 183
    NEW             shift and go to state 71
    VALUES          shift and go to state 42
    CASE            shift and go to state 43
    CALL            shift and go to state 44
    PRINTVALUES     shift and go to state 45
    ALTER           shift and go to state 46
    ALTERB          shift and go to state 47
    ID              shift and go to state 41
    ISTRUE          shift and go to state 48
    SIGNAL          shift and go to state 49
    VIEWSIGNAL      shift and go to state 50

  ! RPARENT         [ reduce using rule 107 (empty -> .) ]
  ! NEW             [ reduce using rule 107 (empty -> .) ]
  ! VALUES          [ reduce using rule 107 (empty -> .) ]
  ! CASE            [ reduce using rule 107 (empty -> .) ]
  ! CALL            [ reduce using rule 107 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 107 (empty -> .) ]
  ! ALTER           [ reduce using rule 107 (empty -> .) ]
  ! ALTERB          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 107 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 107 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 107 (empty -> .) ]

    sentence                       shift and go to state 94
    local_variable                 shift and go to state 54
    values                         shift and go to state 55
    case                           shift and go to state 56
    call                           shift and go to state 57
    print_values                   shift and go to state 58
    alter                          shift and go to state 59
    alterB                         shift and go to state 60
    comparisson_maq                shift and go to state 61
    comparisson_meq                shift and go to state 62
    comparisson_equal              shift and go to state 63
    comparisson_dif                shift and go to state 64
    comparisson_meqequal           shift and go to state 65
    comparisson_maqequal           shift and go to state 66
    isTrue                         shift and go to state 67
    signal                         shift and go to state 68
    viewsignal                     shift and go to state 69
    empty                          shift and go to state 70

state 158

    (103) condition -> WHEN INTEGER THEN .

    LPARENT         reduce using rule 103 (condition -> WHEN INTEGER THEN .)


state 159

    (71) call -> CALL LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 71 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 71 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 71 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 71 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 71 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 71 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 71 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 71 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 71 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 71 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 71 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 71 (call -> CALL LPARENT ID RPARENT SEMICOLON .)


state 160

    (72) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .

    RPARENT         reduce using rule 72 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 72 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VALUES          reduce using rule 72 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CASE            reduce using rule 72 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CALL            reduce using rule 72 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 72 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTER           reduce using rule 72 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTERB          reduce using rule 72 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ID              reduce using rule 72 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 72 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 72 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 72 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)


state 161

    (79) printable_sentences -> printable_sentences COMA printable_sentence_var .

    RPARENT         reduce using rule 79 (printable_sentences -> printable_sentences COMA printable_sentence_var .)
    COMA            reduce using rule 79 (printable_sentences -> printable_sentences COMA printable_sentence_var .)


state 162

    (80) printable_sentences -> printable_sentences COMA printable_sentence_string .

    RPARENT         reduce using rule 80 (printable_sentences -> printable_sentences COMA printable_sentence_string .)
    COMA            reduce using rule 80 (printable_sentences -> printable_sentences COMA printable_sentence_string .)


state 163

    (75) printable_sentences -> printable_sentence_var COMA printable_sentence_var .

    RPARENT         reduce using rule 75 (printable_sentences -> printable_sentence_var COMA printable_sentence_var .)
    COMA            reduce using rule 75 (printable_sentences -> printable_sentence_var COMA printable_sentence_var .)


state 164

    (77) printable_sentences -> printable_sentence_var COMA printable_sentence_string .

    RPARENT         reduce using rule 77 (printable_sentences -> printable_sentence_var COMA printable_sentence_string .)
    COMA            reduce using rule 77 (printable_sentences -> printable_sentence_var COMA printable_sentence_string .)


state 165

    (76) printable_sentences -> printable_sentence_string COMA printable_sentence_string .

    RPARENT         reduce using rule 76 (printable_sentences -> printable_sentence_string COMA printable_sentence_string .)
    COMA            reduce using rule 76 (printable_sentences -> printable_sentence_string COMA printable_sentence_string .)


state 166

    (78) printable_sentences -> printable_sentence_string COMA printable_sentence_var .

    RPARENT         reduce using rule 78 (printable_sentences -> printable_sentence_string COMA printable_sentence_var .)
    COMA            reduce using rule 78 (printable_sentences -> printable_sentence_string COMA printable_sentence_var .)


state 167

    (81) printable_sentences -> COMA printable_sentences COMA . printable_sentence_var
    (82) printable_sentences -> COMA printable_sentences COMA . printable_sentence_string
    (79) printable_sentences -> printable_sentences COMA . printable_sentence_var
    (80) printable_sentences -> printable_sentences COMA . printable_sentence_string
    (83) printable_sentence_var -> . ID
    (84) printable_sentence_string -> . STRING

    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentence_var         shift and go to state 184
    printable_sentence_string      shift and go to state 185

state 168

    (85) alter -> ALTER LPARENT ID COMA ADD . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 186


state 169

    (86) alter -> ALTER LPARENT ID COMA SUB . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 187


state 170

    (87) alter -> ALTER LPARENT ID COMA MUL . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 188


state 171

    (88) alter -> ALTER LPARENT ID COMA DIV . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 189


state 172

    (89) alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 89 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 89 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 89 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 89 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 89 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 89 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 89 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 89 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 89 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 89 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 89 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 89 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)


state 173

    (96) isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 96 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 96 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 96 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 96 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 96 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 96 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 96 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 96 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 96 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 96 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 96 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 96 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)


state 174

    (104) signal -> SIGNAL LPARENT INTEGER COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 190


state 175

    (105) signal -> SIGNAL LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 191


state 176

    (106) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 106 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 106 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 106 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 106 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 106 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 106 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 106 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 106 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 106 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 106 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 106 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 106 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)


state 177

    (36) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 192


state 178

    (37) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 193


state 179

    (66) local_variable -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (67) local_variable -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 194


state 180

    (68) values -> VALUES LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 195


state 181

    (69) values -> VALUES LPARENT ID COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 196


state 182

    (70) values -> VALUES LPARENT ID COMA return_statement RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 197


state 183

    (101) recursive_condition -> condition LPARENT sentences RPARENT .

    SEMICOLON       reduce using rule 101 (recursive_condition -> condition LPARENT sentences RPARENT .)
    WHEN            reduce using rule 101 (recursive_condition -> condition LPARENT sentences RPARENT .)


state 184

    (81) printable_sentences -> COMA printable_sentences COMA printable_sentence_var .
    (79) printable_sentences -> printable_sentences COMA printable_sentence_var .

  ! reduce/reduce conflict for COMA resolved using rule 79 (printable_sentences -> printable_sentences COMA printable_sentence_var .)
    RPARENT         reduce using rule 81 (printable_sentences -> COMA printable_sentences COMA printable_sentence_var .)
    COMA            reduce using rule 79 (printable_sentences -> printable_sentences COMA printable_sentence_var .)

  ! COMA            [ reduce using rule 81 (printable_sentences -> COMA printable_sentences COMA printable_sentence_var .) ]


state 185

    (82) printable_sentences -> COMA printable_sentences COMA printable_sentence_string .
    (80) printable_sentences -> printable_sentences COMA printable_sentence_string .

  ! reduce/reduce conflict for COMA resolved using rule 80 (printable_sentences -> printable_sentences COMA printable_sentence_string .)
    RPARENT         reduce using rule 82 (printable_sentences -> COMA printable_sentences COMA printable_sentence_string .)
    COMA            reduce using rule 80 (printable_sentences -> printable_sentences COMA printable_sentence_string .)

  ! COMA            [ reduce using rule 82 (printable_sentences -> COMA printable_sentences COMA printable_sentence_string .) ]


state 186

    (85) alter -> ALTER LPARENT ID COMA ADD COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 198


state 187

    (86) alter -> ALTER LPARENT ID COMA SUB COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 199


state 188

    (87) alter -> ALTER LPARENT ID COMA MUL COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 200


state 189

    (88) alter -> ALTER LPARENT ID COMA DIV COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 201


state 190

    (104) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 202


state 191

    (105) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 203


state 192

    (36) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 204


state 193

    (37) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 205


state 194

    (66) local_variable -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (67) local_variable -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 206
    BOOL            shift and go to state 207


state 195

    (68) values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 68 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 68 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 68 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 68 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 68 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 68 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 68 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 68 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 68 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 68 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 68 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 68 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 196

    (69) values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 69 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 69 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 69 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 69 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 69 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 69 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 69 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 69 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 69 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 69 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 69 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 69 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)


state 197

    (70) values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .

    RPARENT         reduce using rule 70 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    NEW             reduce using rule 70 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    VALUES          reduce using rule 70 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    CASE            reduce using rule 70 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    CALL            reduce using rule 70 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 70 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    ALTER           reduce using rule 70 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    ALTERB          reduce using rule 70 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    ID              reduce using rule 70 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 70 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 70 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 70 (values -> VALUES LPARENT ID COMA return_statement RPARENT SEMICOLON .)


state 198

    (85) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 208


state 199

    (86) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 209


state 200

    (87) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 210


state 201

    (88) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 211


state 202

    (104) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 104 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 104 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 104 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 104 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 104 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 104 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 104 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 104 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 104 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 104 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 104 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 104 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)


state 203

    (105) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 105 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 105 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 105 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 105 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 105 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 105 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 105 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 105 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 105 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 105 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 105 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 105 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 204

    (36) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    MASTER          reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PROC            reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    $end            reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    RPARENT         reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 36 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 205

    (37) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    MASTER          reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PROC            reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    $end            reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    RPARENT         reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 37 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)


state 206

    (66) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 212


state 207

    (67) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 213


state 208

    (85) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 214


state 209

    (86) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 215


state 210

    (87) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 216


state 211

    (88) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 217


state 212

    (66) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 218


state 213

    (67) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 219


state 214

    (85) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 85 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 85 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 85 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 85 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 85 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 85 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 85 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 85 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 85 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 85 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 85 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 85 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)


state 215

    (86) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 86 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 86 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 86 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 86 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 86 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 86 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 86 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 86 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 86 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 86 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 86 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 86 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)


state 216

    (87) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 87 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 87 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 87 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 87 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 87 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 87 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 87 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 87 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 87 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 87 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 87 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 87 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)


state 217

    (88) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 88 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 88 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 88 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 88 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 88 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 88 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 88 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 88 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 88 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 88 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 88 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 88 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)


state 218

    (66) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 66 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 66 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 66 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 66 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 66 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 66 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 66 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 66 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 66 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 66 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 66 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 66 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 219

    (67) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 67 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 67 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 67 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 67 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 67 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 67 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 67 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 67 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 67 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 67 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 67 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 67 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEW in state 14 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 14 resolved as shift
WARNING: shift/reduce conflict for CASE in state 14 resolved as shift
WARNING: shift/reduce conflict for CALL in state 14 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 14 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 14 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 14 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 14 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 14 resolved as shift
WARNING: shift/reduce conflict for NEW in state 18 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 18 resolved as shift
WARNING: shift/reduce conflict for CASE in state 18 resolved as shift
WARNING: shift/reduce conflict for CALL in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 18 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 18 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 18 resolved as shift
WARNING: shift/reduce conflict for ID in state 18 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 18 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 18 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 18 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 22 resolved as shift
WARNING: shift/reduce conflict for NEW in state 22 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 22 resolved as shift
WARNING: shift/reduce conflict for CASE in state 22 resolved as shift
WARNING: shift/reduce conflict for CALL in state 22 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 22 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 22 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 22 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 22 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 22 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 52 resolved as shift
WARNING: shift/reduce conflict for NEW in state 52 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 52 resolved as shift
WARNING: shift/reduce conflict for CASE in state 52 resolved as shift
WARNING: shift/reduce conflict for CALL in state 52 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 52 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 52 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 52 resolved as shift
WARNING: shift/reduce conflict for ID in state 52 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 52 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 52 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 52 resolved as shift
WARNING: shift/reduce conflict for COMA in state 111 resolved as shift
WARNING: shift/reduce conflict for COMA in state 112 resolved as shift
WARNING: shift/reduce conflict for NEW in state 128 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 128 resolved as shift
WARNING: shift/reduce conflict for CASE in state 128 resolved as shift
WARNING: shift/reduce conflict for CALL in state 128 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 128 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 128 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 128 resolved as shift
WARNING: shift/reduce conflict for ID in state 128 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 128 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 128 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 128 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 157 resolved as shift
WARNING: shift/reduce conflict for NEW in state 157 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 157 resolved as shift
WARNING: shift/reduce conflict for CASE in state 157 resolved as shift
WARNING: shift/reduce conflict for CALL in state 157 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 157 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 157 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 157 resolved as shift
WARNING: shift/reduce conflict for ID in state 157 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 157 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 157 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 157 resolved as shift
WARNING: reduce/reduce conflict in state 184 resolved using rule (printable_sentences -> printable_sentences COMA printable_sentence_var)
WARNING: rejected rule (printable_sentences -> COMA printable_sentences COMA printable_sentence_var) in state 184
WARNING: reduce/reduce conflict in state 185 resolved using rule (printable_sentences -> printable_sentences COMA printable_sentence_string)
WARNING: rejected rule (printable_sentences -> COMA printable_sentences COMA printable_sentence_string) in state 185
