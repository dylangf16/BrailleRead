Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROBA
    COMMENT
    WHILE

Grammar

Rule 0     S' -> start
Rule 1     start -> master procedures
Rule 2     start -> master
Rule 3     declare_procedure -> PROC ID
Rule 4     procedures -> procedure
Rule 5     procedures -> procedures procedure
Rule 6     procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON
Rule 7     master -> MASTER LPARENT master_sentences RPARENT SEMICOLON
Rule 8     master_sentences -> master_sentence
Rule 9     master_sentences -> master_sentences master_sentence
Rule 10    master_sentence -> master_var
Rule 11    master_sentence -> values
Rule 12    master_sentence -> cases
Rule 13    master_sentence -> conditions
Rule 14    master_sentence -> call
Rule 15    master_sentence -> print_values
Rule 16    master_sentence -> alter
Rule 17    master_sentence -> alterB
Rule 18    master_sentence -> signal
Rule 19    master_sentence -> viewsignal
Rule 20    master_sentence -> sentence7
Rule 21    master_sentence -> sentence8
Rule 22    master_sentence -> sentence9
Rule 23    master_sentence -> sentence10
Rule 24    master_sentence -> sentence11
Rule 25    master_sentence -> sentence12
Rule 26    master_sentence -> isTrue
Rule 27    master_sentence -> sentence14
Rule 28    master_sentence -> sentence15
Rule 29    master_sentence -> empty
Rule 30    master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 31    master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 32    sentences -> sentence
Rule 33    sentences -> sentences sentence
Rule 34    sentence -> local_variable
Rule 35    sentence -> values
Rule 36    sentence -> cases
Rule 37    sentence -> conditions
Rule 38    sentence -> call
Rule 39    sentence -> print_values
Rule 40    sentence -> alter
Rule 41    sentence -> alterB
Rule 42    sentence -> signal
Rule 43    sentence -> viewsignal
Rule 44    sentence -> sentence7
Rule 45    sentence -> sentence8
Rule 46    sentence -> sentence9
Rule 47    sentence -> sentence10
Rule 48    sentence -> sentence11
Rule 49    sentence -> sentence12
Rule 50    sentence -> isTrue
Rule 51    sentence -> sentence14
Rule 52    sentence -> sentence15
Rule 53    sentence -> empty
Rule 54    local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
Rule 55    local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
Rule 56    values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 57    values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
Rule 58    call -> CALL LPARENT ID RPARENT SEMICOLON
Rule 59    print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
Rule 60    printable_sentences -> printable_sentence_var
Rule 61    printable_sentences -> printable_sentence_string
Rule 62    printable_sentences -> printable_sentence_var PLUS printable_sentence_var
Rule 63    printable_sentences -> printable_sentence_string PLUS printable_sentence_string
Rule 64    printable_sentences -> printable_sentence_var PLUS printable_sentence_string
Rule 65    printable_sentences -> printable_sentence_string PLUS printable_sentence_var
Rule 66    printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var
Rule 67    printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string
Rule 68    printable_sentence_var -> ID
Rule 69    printable_sentence_string -> STRING
Rule 70    alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
Rule 71    alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
Rule 72    alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
Rule 73    alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
Rule 74    alterB -> ALTERB LPARENT ID RPARENT SEMICOLON
Rule 75    sentence7 -> ID MAQ INTEGER
Rule 76    sentence8 -> ID MEQ INTEGER
Rule 77    sentence9 -> ID EQUAL INTEGER
Rule 78    sentence10 -> ID DIFFERENT INTEGER
Rule 79    sentence11 -> ID MEQEQUAL INTEGER
Rule 80    sentence12 -> ID MAQEQUAL INTEGER
Rule 81    isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON
Rule 82    sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
Rule 83    sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON
Rule 84    instructions -> sentence
Rule 85    instructions -> sentence sentences
Rule 86    case -> CASE expression NEWLINE conditions sentences
Rule 87    case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
Rule 88    cases -> case
Rule 89    cases -> cases case
Rule 90    expression -> ID
Rule 91    conditions -> conditions condition
Rule 92    conditions -> condition
Rule 93    condition -> WHEN INTEGER THEN NEWLINE
Rule 94    signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
Rule 95    signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
Rule 96    viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
Rule 97    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 70
ALTER                : 70 71 72 73
ALTERB               : 74
ARROBA               : 
BOOL                 : 31 55 57
BREAK                : 82
CALL                 : 58
CASE                 : 86 87
COMA                 : 30 30 31 31 54 54 55 55 56 57 70 70 71 71 72 72 73 73 94 95
COMMENT              : 
DIFFERENT            : 78
DIV                  : 73
ELSE                 : 87
EQUAL                : 77
ID                   : 3 30 31 54 55 56 57 58 68 70 71 72 73 74 75 76 77 78 79 80 81 90 95
INTEGER              : 30 54 56 70 71 72 73 75 76 77 78 79 80 93 94 94 95 96
ISTRUE               : 81
LPARENT              : 6 7 30 31 54 55 56 57 58 59 70 71 72 73 74 81 82 83 87 87 94 95 96
MAQ                  : 75
MAQEQUAL             : 80
MASTER               : 7
MEQ                  : 76
MEQEQUAL             : 79
MUL                  : 72
NEW                  : 30 31 54 55
NEWLINE              : 86 87 87 93
PLUS                 : 62 63 64 65 66 66 67 67
PRINTVALUES          : 59
PROC                 : 3
REPEAT               : 82
RPARENT              : 6 7 30 31 54 55 56 57 58 59 70 71 72 73 74 81 82 83 87 87 94 95 96
SEMICOLON            : 6 7 30 31 54 55 56 57 58 59 70 71 72 73 74 81 82 83 94 95 96
SIGNAL               : 94 95
STRING               : 69
SUB                  : 71
THEN                 : 93
TYPE                 : 30 31 54 55
UNTIL                : 83
VALUES               : 56 57
VIEWSIGNAL           : 96
WHEN                 : 93
WHILE                : 
error                : 

Nonterminals, with rules where they appear

alter                : 16 40
alterB               : 17 41
call                 : 14 38
case                 : 88 89
cases                : 12 36 89
condition            : 91 92
conditions           : 13 37 86 87 91
declare_procedure    : 6
empty                : 29 53
expression           : 86 87
instructions         : 83
isTrue               : 26 50
local_variable       : 34
master               : 1 2
master_sentence      : 8 9
master_sentences     : 7 9
master_var           : 10
print_values         : 15 39
printable_sentence_string : 61 63 63 64 65 67
printable_sentence_var : 60 62 62 64 65 66
printable_sentences  : 59 66 67
procedure            : 4 5
procedures           : 1 5
sentence             : 32 33 84 85
sentence10           : 23 47
sentence11           : 24 48
sentence12           : 25 49
sentence14           : 27 51
sentence15           : 28 52
sentence7            : 20 44
sentence8            : 21 45
sentence9            : 22 46
sentences            : 6 33 82 83 85 86 87 87
signal               : 18 42
start                : 0
values               : 11 35
viewsignal           : 19 43

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . master procedures
    (2) start -> . master
    (7) master -> . MASTER LPARENT master_sentences RPARENT SEMICOLON

    MASTER          shift and go to state 3

    start                          shift and go to state 1
    master                         shift and go to state 2

state 1

    (0) S' -> start .



state 2

    (1) start -> master . procedures
    (2) start -> master .
    (4) procedures -> . procedure
    (5) procedures -> . procedures procedure
    (6) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (3) declare_procedure -> . PROC ID

    $end            reduce using rule 2 (start -> master .)
    PROC            shift and go to state 7

    procedures                     shift and go to state 4
    procedure                      shift and go to state 5
    declare_procedure              shift and go to state 6

state 3

    (7) master -> MASTER . LPARENT master_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 8


state 4

    (1) start -> master procedures .
    (5) procedures -> procedures . procedure
    (6) procedure -> . declare_procedure LPARENT sentences RPARENT SEMICOLON
    (3) declare_procedure -> . PROC ID

    $end            reduce using rule 1 (start -> master procedures .)
    PROC            shift and go to state 7

    procedure                      shift and go to state 9
    declare_procedure              shift and go to state 6

state 5

    (4) procedures -> procedure .

    PROC            reduce using rule 4 (procedures -> procedure .)
    $end            reduce using rule 4 (procedures -> procedure .)


state 6

    (6) procedure -> declare_procedure . LPARENT sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 10


state 7

    (3) declare_procedure -> PROC . ID

    ID              shift and go to state 11


state 8

    (7) master -> MASTER LPARENT . master_sentences RPARENT SEMICOLON
    (8) master_sentences -> . master_sentence
    (9) master_sentences -> . master_sentences master_sentence
    (10) master_sentence -> . master_var
    (11) master_sentence -> . values
    (12) master_sentence -> . cases
    (13) master_sentence -> . conditions
    (14) master_sentence -> . call
    (15) master_sentence -> . print_values
    (16) master_sentence -> . alter
    (17) master_sentence -> . alterB
    (18) master_sentence -> . signal
    (19) master_sentence -> . viewsignal
    (20) master_sentence -> . sentence7
    (21) master_sentence -> . sentence8
    (22) master_sentence -> . sentence9
    (23) master_sentence -> . sentence10
    (24) master_sentence -> . sentence11
    (25) master_sentence -> . sentence12
    (26) master_sentence -> . isTrue
    (27) master_sentence -> . sentence14
    (28) master_sentence -> . sentence15
    (29) master_sentence -> . empty
    (30) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    NEW             shift and go to state 34
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    RPARENT         reduce using rule 97 (empty -> .)
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    master_sentences               shift and go to state 12
    master_sentence                shift and go to state 13
    master_var                     shift and go to state 14
    values                         shift and go to state 15
    cases                          shift and go to state 16
    conditions                     shift and go to state 17
    call                           shift and go to state 18
    print_values                   shift and go to state 19
    alter                          shift and go to state 20
    alterB                         shift and go to state 21
    signal                         shift and go to state 22
    viewsignal                     shift and go to state 23
    sentence7                      shift and go to state 24
    sentence8                      shift and go to state 25
    sentence9                      shift and go to state 26
    sentence10                     shift and go to state 27
    sentence11                     shift and go to state 28
    sentence12                     shift and go to state 29
    isTrue                         shift and go to state 30
    sentence14                     shift and go to state 31
    sentence15                     shift and go to state 32
    empty                          shift and go to state 33
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 9

    (5) procedures -> procedures procedure .

    PROC            reduce using rule 5 (procedures -> procedures procedure .)
    $end            reduce using rule 5 (procedures -> procedures procedure .)


state 10

    (6) procedure -> declare_procedure LPARENT . sentences RPARENT SEMICOLON
    (32) sentences -> . sentence
    (33) sentences -> . sentences sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    RPARENT         reduce using rule 97 (empty -> .)
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    sentences                      shift and go to state 50
    sentence                       shift and go to state 51
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    conditions                     shift and go to state 55
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 11

    (3) declare_procedure -> PROC ID .

    LPARENT         reduce using rule 3 (declare_procedure -> PROC ID .)


state 12

    (7) master -> MASTER LPARENT master_sentences . RPARENT SEMICOLON
    (9) master_sentences -> master_sentences . master_sentence
    (10) master_sentence -> . master_var
    (11) master_sentence -> . values
    (12) master_sentence -> . cases
    (13) master_sentence -> . conditions
    (14) master_sentence -> . call
    (15) master_sentence -> . print_values
    (16) master_sentence -> . alter
    (17) master_sentence -> . alterB
    (18) master_sentence -> . signal
    (19) master_sentence -> . viewsignal
    (20) master_sentence -> . sentence7
    (21) master_sentence -> . sentence8
    (22) master_sentence -> . sentence9
    (23) master_sentence -> . sentence10
    (24) master_sentence -> . sentence11
    (25) master_sentence -> . sentence12
    (26) master_sentence -> . isTrue
    (27) master_sentence -> . sentence14
    (28) master_sentence -> . sentence15
    (29) master_sentence -> . empty
    (30) master_var -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    RPARENT         shift and go to state 73
    NEW             shift and go to state 34
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! RPARENT         [ reduce using rule 97 (empty -> .) ]
  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    master_sentence                shift and go to state 74
    master_var                     shift and go to state 14
    values                         shift and go to state 15
    cases                          shift and go to state 16
    conditions                     shift and go to state 17
    call                           shift and go to state 18
    print_values                   shift and go to state 19
    alter                          shift and go to state 20
    alterB                         shift and go to state 21
    signal                         shift and go to state 22
    viewsignal                     shift and go to state 23
    sentence7                      shift and go to state 24
    sentence8                      shift and go to state 25
    sentence9                      shift and go to state 26
    sentence10                     shift and go to state 27
    sentence11                     shift and go to state 28
    sentence12                     shift and go to state 29
    isTrue                         shift and go to state 30
    sentence14                     shift and go to state 31
    sentence15                     shift and go to state 32
    empty                          shift and go to state 33
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 13

    (8) master_sentences -> master_sentence .

    RPARENT         reduce using rule 8 (master_sentences -> master_sentence .)
    NEW             reduce using rule 8 (master_sentences -> master_sentence .)
    VALUES          reduce using rule 8 (master_sentences -> master_sentence .)
    CALL            reduce using rule 8 (master_sentences -> master_sentence .)
    PRINTVALUES     reduce using rule 8 (master_sentences -> master_sentence .)
    ALTER           reduce using rule 8 (master_sentences -> master_sentence .)
    ALTERB          reduce using rule 8 (master_sentences -> master_sentence .)
    SIGNAL          reduce using rule 8 (master_sentences -> master_sentence .)
    VIEWSIGNAL      reduce using rule 8 (master_sentences -> master_sentence .)
    ID              reduce using rule 8 (master_sentences -> master_sentence .)
    ISTRUE          reduce using rule 8 (master_sentences -> master_sentence .)
    REPEAT          reduce using rule 8 (master_sentences -> master_sentence .)
    UNTIL           reduce using rule 8 (master_sentences -> master_sentence .)
    CASE            reduce using rule 8 (master_sentences -> master_sentence .)
    WHEN            reduce using rule 8 (master_sentences -> master_sentence .)


state 14

    (10) master_sentence -> master_var .

    RPARENT         reduce using rule 10 (master_sentence -> master_var .)
    NEW             reduce using rule 10 (master_sentence -> master_var .)
    VALUES          reduce using rule 10 (master_sentence -> master_var .)
    CALL            reduce using rule 10 (master_sentence -> master_var .)
    PRINTVALUES     reduce using rule 10 (master_sentence -> master_var .)
    ALTER           reduce using rule 10 (master_sentence -> master_var .)
    ALTERB          reduce using rule 10 (master_sentence -> master_var .)
    SIGNAL          reduce using rule 10 (master_sentence -> master_var .)
    VIEWSIGNAL      reduce using rule 10 (master_sentence -> master_var .)
    ID              reduce using rule 10 (master_sentence -> master_var .)
    ISTRUE          reduce using rule 10 (master_sentence -> master_var .)
    REPEAT          reduce using rule 10 (master_sentence -> master_var .)
    UNTIL           reduce using rule 10 (master_sentence -> master_var .)
    CASE            reduce using rule 10 (master_sentence -> master_var .)
    WHEN            reduce using rule 10 (master_sentence -> master_var .)


state 15

    (11) master_sentence -> values .

    RPARENT         reduce using rule 11 (master_sentence -> values .)
    NEW             reduce using rule 11 (master_sentence -> values .)
    VALUES          reduce using rule 11 (master_sentence -> values .)
    CALL            reduce using rule 11 (master_sentence -> values .)
    PRINTVALUES     reduce using rule 11 (master_sentence -> values .)
    ALTER           reduce using rule 11 (master_sentence -> values .)
    ALTERB          reduce using rule 11 (master_sentence -> values .)
    SIGNAL          reduce using rule 11 (master_sentence -> values .)
    VIEWSIGNAL      reduce using rule 11 (master_sentence -> values .)
    ID              reduce using rule 11 (master_sentence -> values .)
    ISTRUE          reduce using rule 11 (master_sentence -> values .)
    REPEAT          reduce using rule 11 (master_sentence -> values .)
    UNTIL           reduce using rule 11 (master_sentence -> values .)
    CASE            reduce using rule 11 (master_sentence -> values .)
    WHEN            reduce using rule 11 (master_sentence -> values .)


state 16

    (12) master_sentence -> cases .
    (89) cases -> cases . case
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT

  ! shift/reduce conflict for CASE resolved as shift
    RPARENT         reduce using rule 12 (master_sentence -> cases .)
    NEW             reduce using rule 12 (master_sentence -> cases .)
    VALUES          reduce using rule 12 (master_sentence -> cases .)
    CALL            reduce using rule 12 (master_sentence -> cases .)
    PRINTVALUES     reduce using rule 12 (master_sentence -> cases .)
    ALTER           reduce using rule 12 (master_sentence -> cases .)
    ALTERB          reduce using rule 12 (master_sentence -> cases .)
    SIGNAL          reduce using rule 12 (master_sentence -> cases .)
    VIEWSIGNAL      reduce using rule 12 (master_sentence -> cases .)
    ID              reduce using rule 12 (master_sentence -> cases .)
    ISTRUE          reduce using rule 12 (master_sentence -> cases .)
    REPEAT          reduce using rule 12 (master_sentence -> cases .)
    UNTIL           reduce using rule 12 (master_sentence -> cases .)
    WHEN            reduce using rule 12 (master_sentence -> cases .)
    CASE            shift and go to state 48

  ! CASE            [ reduce using rule 12 (master_sentence -> cases .) ]

    case                           shift and go to state 75

state 17

    (13) master_sentence -> conditions .
    (91) conditions -> conditions . condition
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for WHEN resolved as shift
    RPARENT         reduce using rule 13 (master_sentence -> conditions .)
    NEW             reduce using rule 13 (master_sentence -> conditions .)
    VALUES          reduce using rule 13 (master_sentence -> conditions .)
    CALL            reduce using rule 13 (master_sentence -> conditions .)
    PRINTVALUES     reduce using rule 13 (master_sentence -> conditions .)
    ALTER           reduce using rule 13 (master_sentence -> conditions .)
    ALTERB          reduce using rule 13 (master_sentence -> conditions .)
    SIGNAL          reduce using rule 13 (master_sentence -> conditions .)
    VIEWSIGNAL      reduce using rule 13 (master_sentence -> conditions .)
    ID              reduce using rule 13 (master_sentence -> conditions .)
    ISTRUE          reduce using rule 13 (master_sentence -> conditions .)
    REPEAT          reduce using rule 13 (master_sentence -> conditions .)
    UNTIL           reduce using rule 13 (master_sentence -> conditions .)
    CASE            reduce using rule 13 (master_sentence -> conditions .)
    WHEN            shift and go to state 49

  ! WHEN            [ reduce using rule 13 (master_sentence -> conditions .) ]

    condition                      shift and go to state 76

state 18

    (14) master_sentence -> call .

    RPARENT         reduce using rule 14 (master_sentence -> call .)
    NEW             reduce using rule 14 (master_sentence -> call .)
    VALUES          reduce using rule 14 (master_sentence -> call .)
    CALL            reduce using rule 14 (master_sentence -> call .)
    PRINTVALUES     reduce using rule 14 (master_sentence -> call .)
    ALTER           reduce using rule 14 (master_sentence -> call .)
    ALTERB          reduce using rule 14 (master_sentence -> call .)
    SIGNAL          reduce using rule 14 (master_sentence -> call .)
    VIEWSIGNAL      reduce using rule 14 (master_sentence -> call .)
    ID              reduce using rule 14 (master_sentence -> call .)
    ISTRUE          reduce using rule 14 (master_sentence -> call .)
    REPEAT          reduce using rule 14 (master_sentence -> call .)
    UNTIL           reduce using rule 14 (master_sentence -> call .)
    CASE            reduce using rule 14 (master_sentence -> call .)
    WHEN            reduce using rule 14 (master_sentence -> call .)


state 19

    (15) master_sentence -> print_values .

    RPARENT         reduce using rule 15 (master_sentence -> print_values .)
    NEW             reduce using rule 15 (master_sentence -> print_values .)
    VALUES          reduce using rule 15 (master_sentence -> print_values .)
    CALL            reduce using rule 15 (master_sentence -> print_values .)
    PRINTVALUES     reduce using rule 15 (master_sentence -> print_values .)
    ALTER           reduce using rule 15 (master_sentence -> print_values .)
    ALTERB          reduce using rule 15 (master_sentence -> print_values .)
    SIGNAL          reduce using rule 15 (master_sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 15 (master_sentence -> print_values .)
    ID              reduce using rule 15 (master_sentence -> print_values .)
    ISTRUE          reduce using rule 15 (master_sentence -> print_values .)
    REPEAT          reduce using rule 15 (master_sentence -> print_values .)
    UNTIL           reduce using rule 15 (master_sentence -> print_values .)
    CASE            reduce using rule 15 (master_sentence -> print_values .)
    WHEN            reduce using rule 15 (master_sentence -> print_values .)


state 20

    (16) master_sentence -> alter .

    RPARENT         reduce using rule 16 (master_sentence -> alter .)
    NEW             reduce using rule 16 (master_sentence -> alter .)
    VALUES          reduce using rule 16 (master_sentence -> alter .)
    CALL            reduce using rule 16 (master_sentence -> alter .)
    PRINTVALUES     reduce using rule 16 (master_sentence -> alter .)
    ALTER           reduce using rule 16 (master_sentence -> alter .)
    ALTERB          reduce using rule 16 (master_sentence -> alter .)
    SIGNAL          reduce using rule 16 (master_sentence -> alter .)
    VIEWSIGNAL      reduce using rule 16 (master_sentence -> alter .)
    ID              reduce using rule 16 (master_sentence -> alter .)
    ISTRUE          reduce using rule 16 (master_sentence -> alter .)
    REPEAT          reduce using rule 16 (master_sentence -> alter .)
    UNTIL           reduce using rule 16 (master_sentence -> alter .)
    CASE            reduce using rule 16 (master_sentence -> alter .)
    WHEN            reduce using rule 16 (master_sentence -> alter .)


state 21

    (17) master_sentence -> alterB .

    RPARENT         reduce using rule 17 (master_sentence -> alterB .)
    NEW             reduce using rule 17 (master_sentence -> alterB .)
    VALUES          reduce using rule 17 (master_sentence -> alterB .)
    CALL            reduce using rule 17 (master_sentence -> alterB .)
    PRINTVALUES     reduce using rule 17 (master_sentence -> alterB .)
    ALTER           reduce using rule 17 (master_sentence -> alterB .)
    ALTERB          reduce using rule 17 (master_sentence -> alterB .)
    SIGNAL          reduce using rule 17 (master_sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 17 (master_sentence -> alterB .)
    ID              reduce using rule 17 (master_sentence -> alterB .)
    ISTRUE          reduce using rule 17 (master_sentence -> alterB .)
    REPEAT          reduce using rule 17 (master_sentence -> alterB .)
    UNTIL           reduce using rule 17 (master_sentence -> alterB .)
    CASE            reduce using rule 17 (master_sentence -> alterB .)
    WHEN            reduce using rule 17 (master_sentence -> alterB .)


state 22

    (18) master_sentence -> signal .

    RPARENT         reduce using rule 18 (master_sentence -> signal .)
    NEW             reduce using rule 18 (master_sentence -> signal .)
    VALUES          reduce using rule 18 (master_sentence -> signal .)
    CALL            reduce using rule 18 (master_sentence -> signal .)
    PRINTVALUES     reduce using rule 18 (master_sentence -> signal .)
    ALTER           reduce using rule 18 (master_sentence -> signal .)
    ALTERB          reduce using rule 18 (master_sentence -> signal .)
    SIGNAL          reduce using rule 18 (master_sentence -> signal .)
    VIEWSIGNAL      reduce using rule 18 (master_sentence -> signal .)
    ID              reduce using rule 18 (master_sentence -> signal .)
    ISTRUE          reduce using rule 18 (master_sentence -> signal .)
    REPEAT          reduce using rule 18 (master_sentence -> signal .)
    UNTIL           reduce using rule 18 (master_sentence -> signal .)
    CASE            reduce using rule 18 (master_sentence -> signal .)
    WHEN            reduce using rule 18 (master_sentence -> signal .)


state 23

    (19) master_sentence -> viewsignal .

    RPARENT         reduce using rule 19 (master_sentence -> viewsignal .)
    NEW             reduce using rule 19 (master_sentence -> viewsignal .)
    VALUES          reduce using rule 19 (master_sentence -> viewsignal .)
    CALL            reduce using rule 19 (master_sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 19 (master_sentence -> viewsignal .)
    ALTER           reduce using rule 19 (master_sentence -> viewsignal .)
    ALTERB          reduce using rule 19 (master_sentence -> viewsignal .)
    SIGNAL          reduce using rule 19 (master_sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 19 (master_sentence -> viewsignal .)
    ID              reduce using rule 19 (master_sentence -> viewsignal .)
    ISTRUE          reduce using rule 19 (master_sentence -> viewsignal .)
    REPEAT          reduce using rule 19 (master_sentence -> viewsignal .)
    UNTIL           reduce using rule 19 (master_sentence -> viewsignal .)
    CASE            reduce using rule 19 (master_sentence -> viewsignal .)
    WHEN            reduce using rule 19 (master_sentence -> viewsignal .)


state 24

    (20) master_sentence -> sentence7 .

    RPARENT         reduce using rule 20 (master_sentence -> sentence7 .)
    NEW             reduce using rule 20 (master_sentence -> sentence7 .)
    VALUES          reduce using rule 20 (master_sentence -> sentence7 .)
    CALL            reduce using rule 20 (master_sentence -> sentence7 .)
    PRINTVALUES     reduce using rule 20 (master_sentence -> sentence7 .)
    ALTER           reduce using rule 20 (master_sentence -> sentence7 .)
    ALTERB          reduce using rule 20 (master_sentence -> sentence7 .)
    SIGNAL          reduce using rule 20 (master_sentence -> sentence7 .)
    VIEWSIGNAL      reduce using rule 20 (master_sentence -> sentence7 .)
    ID              reduce using rule 20 (master_sentence -> sentence7 .)
    ISTRUE          reduce using rule 20 (master_sentence -> sentence7 .)
    REPEAT          reduce using rule 20 (master_sentence -> sentence7 .)
    UNTIL           reduce using rule 20 (master_sentence -> sentence7 .)
    CASE            reduce using rule 20 (master_sentence -> sentence7 .)
    WHEN            reduce using rule 20 (master_sentence -> sentence7 .)


state 25

    (21) master_sentence -> sentence8 .

    RPARENT         reduce using rule 21 (master_sentence -> sentence8 .)
    NEW             reduce using rule 21 (master_sentence -> sentence8 .)
    VALUES          reduce using rule 21 (master_sentence -> sentence8 .)
    CALL            reduce using rule 21 (master_sentence -> sentence8 .)
    PRINTVALUES     reduce using rule 21 (master_sentence -> sentence8 .)
    ALTER           reduce using rule 21 (master_sentence -> sentence8 .)
    ALTERB          reduce using rule 21 (master_sentence -> sentence8 .)
    SIGNAL          reduce using rule 21 (master_sentence -> sentence8 .)
    VIEWSIGNAL      reduce using rule 21 (master_sentence -> sentence8 .)
    ID              reduce using rule 21 (master_sentence -> sentence8 .)
    ISTRUE          reduce using rule 21 (master_sentence -> sentence8 .)
    REPEAT          reduce using rule 21 (master_sentence -> sentence8 .)
    UNTIL           reduce using rule 21 (master_sentence -> sentence8 .)
    CASE            reduce using rule 21 (master_sentence -> sentence8 .)
    WHEN            reduce using rule 21 (master_sentence -> sentence8 .)


state 26

    (22) master_sentence -> sentence9 .

    RPARENT         reduce using rule 22 (master_sentence -> sentence9 .)
    NEW             reduce using rule 22 (master_sentence -> sentence9 .)
    VALUES          reduce using rule 22 (master_sentence -> sentence9 .)
    CALL            reduce using rule 22 (master_sentence -> sentence9 .)
    PRINTVALUES     reduce using rule 22 (master_sentence -> sentence9 .)
    ALTER           reduce using rule 22 (master_sentence -> sentence9 .)
    ALTERB          reduce using rule 22 (master_sentence -> sentence9 .)
    SIGNAL          reduce using rule 22 (master_sentence -> sentence9 .)
    VIEWSIGNAL      reduce using rule 22 (master_sentence -> sentence9 .)
    ID              reduce using rule 22 (master_sentence -> sentence9 .)
    ISTRUE          reduce using rule 22 (master_sentence -> sentence9 .)
    REPEAT          reduce using rule 22 (master_sentence -> sentence9 .)
    UNTIL           reduce using rule 22 (master_sentence -> sentence9 .)
    CASE            reduce using rule 22 (master_sentence -> sentence9 .)
    WHEN            reduce using rule 22 (master_sentence -> sentence9 .)


state 27

    (23) master_sentence -> sentence10 .

    RPARENT         reduce using rule 23 (master_sentence -> sentence10 .)
    NEW             reduce using rule 23 (master_sentence -> sentence10 .)
    VALUES          reduce using rule 23 (master_sentence -> sentence10 .)
    CALL            reduce using rule 23 (master_sentence -> sentence10 .)
    PRINTVALUES     reduce using rule 23 (master_sentence -> sentence10 .)
    ALTER           reduce using rule 23 (master_sentence -> sentence10 .)
    ALTERB          reduce using rule 23 (master_sentence -> sentence10 .)
    SIGNAL          reduce using rule 23 (master_sentence -> sentence10 .)
    VIEWSIGNAL      reduce using rule 23 (master_sentence -> sentence10 .)
    ID              reduce using rule 23 (master_sentence -> sentence10 .)
    ISTRUE          reduce using rule 23 (master_sentence -> sentence10 .)
    REPEAT          reduce using rule 23 (master_sentence -> sentence10 .)
    UNTIL           reduce using rule 23 (master_sentence -> sentence10 .)
    CASE            reduce using rule 23 (master_sentence -> sentence10 .)
    WHEN            reduce using rule 23 (master_sentence -> sentence10 .)


state 28

    (24) master_sentence -> sentence11 .

    RPARENT         reduce using rule 24 (master_sentence -> sentence11 .)
    NEW             reduce using rule 24 (master_sentence -> sentence11 .)
    VALUES          reduce using rule 24 (master_sentence -> sentence11 .)
    CALL            reduce using rule 24 (master_sentence -> sentence11 .)
    PRINTVALUES     reduce using rule 24 (master_sentence -> sentence11 .)
    ALTER           reduce using rule 24 (master_sentence -> sentence11 .)
    ALTERB          reduce using rule 24 (master_sentence -> sentence11 .)
    SIGNAL          reduce using rule 24 (master_sentence -> sentence11 .)
    VIEWSIGNAL      reduce using rule 24 (master_sentence -> sentence11 .)
    ID              reduce using rule 24 (master_sentence -> sentence11 .)
    ISTRUE          reduce using rule 24 (master_sentence -> sentence11 .)
    REPEAT          reduce using rule 24 (master_sentence -> sentence11 .)
    UNTIL           reduce using rule 24 (master_sentence -> sentence11 .)
    CASE            reduce using rule 24 (master_sentence -> sentence11 .)
    WHEN            reduce using rule 24 (master_sentence -> sentence11 .)


state 29

    (25) master_sentence -> sentence12 .

    RPARENT         reduce using rule 25 (master_sentence -> sentence12 .)
    NEW             reduce using rule 25 (master_sentence -> sentence12 .)
    VALUES          reduce using rule 25 (master_sentence -> sentence12 .)
    CALL            reduce using rule 25 (master_sentence -> sentence12 .)
    PRINTVALUES     reduce using rule 25 (master_sentence -> sentence12 .)
    ALTER           reduce using rule 25 (master_sentence -> sentence12 .)
    ALTERB          reduce using rule 25 (master_sentence -> sentence12 .)
    SIGNAL          reduce using rule 25 (master_sentence -> sentence12 .)
    VIEWSIGNAL      reduce using rule 25 (master_sentence -> sentence12 .)
    ID              reduce using rule 25 (master_sentence -> sentence12 .)
    ISTRUE          reduce using rule 25 (master_sentence -> sentence12 .)
    REPEAT          reduce using rule 25 (master_sentence -> sentence12 .)
    UNTIL           reduce using rule 25 (master_sentence -> sentence12 .)
    CASE            reduce using rule 25 (master_sentence -> sentence12 .)
    WHEN            reduce using rule 25 (master_sentence -> sentence12 .)


state 30

    (26) master_sentence -> isTrue .

    RPARENT         reduce using rule 26 (master_sentence -> isTrue .)
    NEW             reduce using rule 26 (master_sentence -> isTrue .)
    VALUES          reduce using rule 26 (master_sentence -> isTrue .)
    CALL            reduce using rule 26 (master_sentence -> isTrue .)
    PRINTVALUES     reduce using rule 26 (master_sentence -> isTrue .)
    ALTER           reduce using rule 26 (master_sentence -> isTrue .)
    ALTERB          reduce using rule 26 (master_sentence -> isTrue .)
    SIGNAL          reduce using rule 26 (master_sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 26 (master_sentence -> isTrue .)
    ID              reduce using rule 26 (master_sentence -> isTrue .)
    ISTRUE          reduce using rule 26 (master_sentence -> isTrue .)
    REPEAT          reduce using rule 26 (master_sentence -> isTrue .)
    UNTIL           reduce using rule 26 (master_sentence -> isTrue .)
    CASE            reduce using rule 26 (master_sentence -> isTrue .)
    WHEN            reduce using rule 26 (master_sentence -> isTrue .)


state 31

    (27) master_sentence -> sentence14 .

    RPARENT         reduce using rule 27 (master_sentence -> sentence14 .)
    NEW             reduce using rule 27 (master_sentence -> sentence14 .)
    VALUES          reduce using rule 27 (master_sentence -> sentence14 .)
    CALL            reduce using rule 27 (master_sentence -> sentence14 .)
    PRINTVALUES     reduce using rule 27 (master_sentence -> sentence14 .)
    ALTER           reduce using rule 27 (master_sentence -> sentence14 .)
    ALTERB          reduce using rule 27 (master_sentence -> sentence14 .)
    SIGNAL          reduce using rule 27 (master_sentence -> sentence14 .)
    VIEWSIGNAL      reduce using rule 27 (master_sentence -> sentence14 .)
    ID              reduce using rule 27 (master_sentence -> sentence14 .)
    ISTRUE          reduce using rule 27 (master_sentence -> sentence14 .)
    REPEAT          reduce using rule 27 (master_sentence -> sentence14 .)
    UNTIL           reduce using rule 27 (master_sentence -> sentence14 .)
    CASE            reduce using rule 27 (master_sentence -> sentence14 .)
    WHEN            reduce using rule 27 (master_sentence -> sentence14 .)


state 32

    (28) master_sentence -> sentence15 .

    RPARENT         reduce using rule 28 (master_sentence -> sentence15 .)
    NEW             reduce using rule 28 (master_sentence -> sentence15 .)
    VALUES          reduce using rule 28 (master_sentence -> sentence15 .)
    CALL            reduce using rule 28 (master_sentence -> sentence15 .)
    PRINTVALUES     reduce using rule 28 (master_sentence -> sentence15 .)
    ALTER           reduce using rule 28 (master_sentence -> sentence15 .)
    ALTERB          reduce using rule 28 (master_sentence -> sentence15 .)
    SIGNAL          reduce using rule 28 (master_sentence -> sentence15 .)
    VIEWSIGNAL      reduce using rule 28 (master_sentence -> sentence15 .)
    ID              reduce using rule 28 (master_sentence -> sentence15 .)
    ISTRUE          reduce using rule 28 (master_sentence -> sentence15 .)
    REPEAT          reduce using rule 28 (master_sentence -> sentence15 .)
    UNTIL           reduce using rule 28 (master_sentence -> sentence15 .)
    CASE            reduce using rule 28 (master_sentence -> sentence15 .)
    WHEN            reduce using rule 28 (master_sentence -> sentence15 .)


state 33

    (29) master_sentence -> empty .

    RPARENT         reduce using rule 29 (master_sentence -> empty .)
    NEW             reduce using rule 29 (master_sentence -> empty .)
    VALUES          reduce using rule 29 (master_sentence -> empty .)
    CALL            reduce using rule 29 (master_sentence -> empty .)
    PRINTVALUES     reduce using rule 29 (master_sentence -> empty .)
    ALTER           reduce using rule 29 (master_sentence -> empty .)
    ALTERB          reduce using rule 29 (master_sentence -> empty .)
    SIGNAL          reduce using rule 29 (master_sentence -> empty .)
    VIEWSIGNAL      reduce using rule 29 (master_sentence -> empty .)
    ID              reduce using rule 29 (master_sentence -> empty .)
    ISTRUE          reduce using rule 29 (master_sentence -> empty .)
    REPEAT          reduce using rule 29 (master_sentence -> empty .)
    UNTIL           reduce using rule 29 (master_sentence -> empty .)
    CASE            reduce using rule 29 (master_sentence -> empty .)
    WHEN            reduce using rule 29 (master_sentence -> empty .)


state 34

    (30) master_var -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 77


state 35

    (75) sentence7 -> ID . MAQ INTEGER
    (76) sentence8 -> ID . MEQ INTEGER
    (77) sentence9 -> ID . EQUAL INTEGER
    (78) sentence10 -> ID . DIFFERENT INTEGER
    (79) sentence11 -> ID . MEQEQUAL INTEGER
    (80) sentence12 -> ID . MAQEQUAL INTEGER

    MAQ             shift and go to state 78
    MEQ             shift and go to state 79
    EQUAL           shift and go to state 80
    DIFFERENT       shift and go to state 81
    MEQEQUAL        shift and go to state 82
    MAQEQUAL        shift and go to state 83


state 36

    (56) values -> VALUES . LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> VALUES . LPARENT ID COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 84


state 37

    (88) cases -> case .

    CASE            reduce using rule 88 (cases -> case .)
    RPARENT         reduce using rule 88 (cases -> case .)
    NEW             reduce using rule 88 (cases -> case .)
    VALUES          reduce using rule 88 (cases -> case .)
    CALL            reduce using rule 88 (cases -> case .)
    PRINTVALUES     reduce using rule 88 (cases -> case .)
    ALTER           reduce using rule 88 (cases -> case .)
    ALTERB          reduce using rule 88 (cases -> case .)
    SIGNAL          reduce using rule 88 (cases -> case .)
    VIEWSIGNAL      reduce using rule 88 (cases -> case .)
    ID              reduce using rule 88 (cases -> case .)
    ISTRUE          reduce using rule 88 (cases -> case .)
    REPEAT          reduce using rule 88 (cases -> case .)
    UNTIL           reduce using rule 88 (cases -> case .)
    WHEN            reduce using rule 88 (cases -> case .)
    BREAK           reduce using rule 88 (cases -> case .)
    SEMICOLON       reduce using rule 88 (cases -> case .)


state 38

    (92) conditions -> condition .

    WHEN            reduce using rule 92 (conditions -> condition .)
    RPARENT         reduce using rule 92 (conditions -> condition .)
    NEW             reduce using rule 92 (conditions -> condition .)
    VALUES          reduce using rule 92 (conditions -> condition .)
    CALL            reduce using rule 92 (conditions -> condition .)
    PRINTVALUES     reduce using rule 92 (conditions -> condition .)
    ALTER           reduce using rule 92 (conditions -> condition .)
    ALTERB          reduce using rule 92 (conditions -> condition .)
    SIGNAL          reduce using rule 92 (conditions -> condition .)
    VIEWSIGNAL      reduce using rule 92 (conditions -> condition .)
    ID              reduce using rule 92 (conditions -> condition .)
    ISTRUE          reduce using rule 92 (conditions -> condition .)
    REPEAT          reduce using rule 92 (conditions -> condition .)
    UNTIL           reduce using rule 92 (conditions -> condition .)
    CASE            reduce using rule 92 (conditions -> condition .)
    BREAK           reduce using rule 92 (conditions -> condition .)
    LPARENT         reduce using rule 92 (conditions -> condition .)
    SEMICOLON       reduce using rule 92 (conditions -> condition .)


state 39

    (58) call -> CALL . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 85


state 40

    (59) print_values -> PRINTVALUES . LPARENT printable_sentences RPARENT SEMICOLON

    LPARENT         shift and go to state 86


state 41

    (70) alter -> ALTER . LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> ALTER . LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> ALTER . LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> ALTER . LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 87


state 42

    (74) alterB -> ALTERB . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 88


state 43

    (94) signal -> SIGNAL . LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> SIGNAL . LPARENT ID COMA INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 89


state 44

    (96) viewsignal -> VIEWSIGNAL . LPARENT INTEGER RPARENT SEMICOLON

    LPARENT         shift and go to state 90


state 45

    (81) isTrue -> ISTRUE . LPARENT ID RPARENT SEMICOLON

    LPARENT         shift and go to state 91


state 46

    (82) sentence14 -> REPEAT . LPARENT sentences BREAK RPARENT SEMICOLON

    LPARENT         shift and go to state 92


state 47

    (83) sentence15 -> UNTIL . LPARENT instructions RPARENT sentences SEMICOLON

    LPARENT         shift and go to state 93


state 48

    (86) case -> CASE . expression NEWLINE conditions sentences
    (87) case -> CASE . expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (90) expression -> . ID

    ID              shift and go to state 95

    expression                     shift and go to state 94

state 49

    (93) condition -> WHEN . INTEGER THEN NEWLINE

    INTEGER         shift and go to state 96


state 50

    (6) procedure -> declare_procedure LPARENT sentences . RPARENT SEMICOLON
    (33) sentences -> sentences . sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    RPARENT         shift and go to state 97
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! RPARENT         [ reduce using rule 97 (empty -> .) ]
  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    sentence                       shift and go to state 98
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    conditions                     shift and go to state 55
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 51

    (32) sentences -> sentence .

    RPARENT         reduce using rule 32 (sentences -> sentence .)
    NEW             reduce using rule 32 (sentences -> sentence .)
    VALUES          reduce using rule 32 (sentences -> sentence .)
    CALL            reduce using rule 32 (sentences -> sentence .)
    PRINTVALUES     reduce using rule 32 (sentences -> sentence .)
    ALTER           reduce using rule 32 (sentences -> sentence .)
    ALTERB          reduce using rule 32 (sentences -> sentence .)
    SIGNAL          reduce using rule 32 (sentences -> sentence .)
    VIEWSIGNAL      reduce using rule 32 (sentences -> sentence .)
    ID              reduce using rule 32 (sentences -> sentence .)
    ISTRUE          reduce using rule 32 (sentences -> sentence .)
    REPEAT          reduce using rule 32 (sentences -> sentence .)
    UNTIL           reduce using rule 32 (sentences -> sentence .)
    CASE            reduce using rule 32 (sentences -> sentence .)
    WHEN            reduce using rule 32 (sentences -> sentence .)
    BREAK           reduce using rule 32 (sentences -> sentence .)
    SEMICOLON       reduce using rule 32 (sentences -> sentence .)


state 52

    (34) sentence -> local_variable .

    RPARENT         reduce using rule 34 (sentence -> local_variable .)
    NEW             reduce using rule 34 (sentence -> local_variable .)
    VALUES          reduce using rule 34 (sentence -> local_variable .)
    CALL            reduce using rule 34 (sentence -> local_variable .)
    PRINTVALUES     reduce using rule 34 (sentence -> local_variable .)
    ALTER           reduce using rule 34 (sentence -> local_variable .)
    ALTERB          reduce using rule 34 (sentence -> local_variable .)
    SIGNAL          reduce using rule 34 (sentence -> local_variable .)
    VIEWSIGNAL      reduce using rule 34 (sentence -> local_variable .)
    ID              reduce using rule 34 (sentence -> local_variable .)
    ISTRUE          reduce using rule 34 (sentence -> local_variable .)
    REPEAT          reduce using rule 34 (sentence -> local_variable .)
    UNTIL           reduce using rule 34 (sentence -> local_variable .)
    CASE            reduce using rule 34 (sentence -> local_variable .)
    WHEN            reduce using rule 34 (sentence -> local_variable .)
    BREAK           reduce using rule 34 (sentence -> local_variable .)
    SEMICOLON       reduce using rule 34 (sentence -> local_variable .)


state 53

    (35) sentence -> values .

    RPARENT         reduce using rule 35 (sentence -> values .)
    NEW             reduce using rule 35 (sentence -> values .)
    VALUES          reduce using rule 35 (sentence -> values .)
    CALL            reduce using rule 35 (sentence -> values .)
    PRINTVALUES     reduce using rule 35 (sentence -> values .)
    ALTER           reduce using rule 35 (sentence -> values .)
    ALTERB          reduce using rule 35 (sentence -> values .)
    SIGNAL          reduce using rule 35 (sentence -> values .)
    VIEWSIGNAL      reduce using rule 35 (sentence -> values .)
    ID              reduce using rule 35 (sentence -> values .)
    ISTRUE          reduce using rule 35 (sentence -> values .)
    REPEAT          reduce using rule 35 (sentence -> values .)
    UNTIL           reduce using rule 35 (sentence -> values .)
    CASE            reduce using rule 35 (sentence -> values .)
    WHEN            reduce using rule 35 (sentence -> values .)
    BREAK           reduce using rule 35 (sentence -> values .)
    SEMICOLON       reduce using rule 35 (sentence -> values .)


state 54

    (36) sentence -> cases .
    (89) cases -> cases . case
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT

  ! shift/reduce conflict for CASE resolved as shift
    RPARENT         reduce using rule 36 (sentence -> cases .)
    NEW             reduce using rule 36 (sentence -> cases .)
    VALUES          reduce using rule 36 (sentence -> cases .)
    CALL            reduce using rule 36 (sentence -> cases .)
    PRINTVALUES     reduce using rule 36 (sentence -> cases .)
    ALTER           reduce using rule 36 (sentence -> cases .)
    ALTERB          reduce using rule 36 (sentence -> cases .)
    SIGNAL          reduce using rule 36 (sentence -> cases .)
    VIEWSIGNAL      reduce using rule 36 (sentence -> cases .)
    ID              reduce using rule 36 (sentence -> cases .)
    ISTRUE          reduce using rule 36 (sentence -> cases .)
    REPEAT          reduce using rule 36 (sentence -> cases .)
    UNTIL           reduce using rule 36 (sentence -> cases .)
    WHEN            reduce using rule 36 (sentence -> cases .)
    BREAK           reduce using rule 36 (sentence -> cases .)
    SEMICOLON       reduce using rule 36 (sentence -> cases .)
    CASE            shift and go to state 48

  ! CASE            [ reduce using rule 36 (sentence -> cases .) ]

    case                           shift and go to state 75

state 55

    (37) sentence -> conditions .
    (91) conditions -> conditions . condition
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for WHEN resolved as shift
    RPARENT         reduce using rule 37 (sentence -> conditions .)
    NEW             reduce using rule 37 (sentence -> conditions .)
    VALUES          reduce using rule 37 (sentence -> conditions .)
    CALL            reduce using rule 37 (sentence -> conditions .)
    PRINTVALUES     reduce using rule 37 (sentence -> conditions .)
    ALTER           reduce using rule 37 (sentence -> conditions .)
    ALTERB          reduce using rule 37 (sentence -> conditions .)
    SIGNAL          reduce using rule 37 (sentence -> conditions .)
    VIEWSIGNAL      reduce using rule 37 (sentence -> conditions .)
    ID              reduce using rule 37 (sentence -> conditions .)
    ISTRUE          reduce using rule 37 (sentence -> conditions .)
    REPEAT          reduce using rule 37 (sentence -> conditions .)
    UNTIL           reduce using rule 37 (sentence -> conditions .)
    CASE            reduce using rule 37 (sentence -> conditions .)
    BREAK           reduce using rule 37 (sentence -> conditions .)
    SEMICOLON       reduce using rule 37 (sentence -> conditions .)
    WHEN            shift and go to state 49

  ! WHEN            [ reduce using rule 37 (sentence -> conditions .) ]

    condition                      shift and go to state 76

state 56

    (38) sentence -> call .

    RPARENT         reduce using rule 38 (sentence -> call .)
    NEW             reduce using rule 38 (sentence -> call .)
    VALUES          reduce using rule 38 (sentence -> call .)
    CALL            reduce using rule 38 (sentence -> call .)
    PRINTVALUES     reduce using rule 38 (sentence -> call .)
    ALTER           reduce using rule 38 (sentence -> call .)
    ALTERB          reduce using rule 38 (sentence -> call .)
    SIGNAL          reduce using rule 38 (sentence -> call .)
    VIEWSIGNAL      reduce using rule 38 (sentence -> call .)
    ID              reduce using rule 38 (sentence -> call .)
    ISTRUE          reduce using rule 38 (sentence -> call .)
    REPEAT          reduce using rule 38 (sentence -> call .)
    UNTIL           reduce using rule 38 (sentence -> call .)
    CASE            reduce using rule 38 (sentence -> call .)
    WHEN            reduce using rule 38 (sentence -> call .)
    BREAK           reduce using rule 38 (sentence -> call .)
    SEMICOLON       reduce using rule 38 (sentence -> call .)


state 57

    (39) sentence -> print_values .

    RPARENT         reduce using rule 39 (sentence -> print_values .)
    NEW             reduce using rule 39 (sentence -> print_values .)
    VALUES          reduce using rule 39 (sentence -> print_values .)
    CALL            reduce using rule 39 (sentence -> print_values .)
    PRINTVALUES     reduce using rule 39 (sentence -> print_values .)
    ALTER           reduce using rule 39 (sentence -> print_values .)
    ALTERB          reduce using rule 39 (sentence -> print_values .)
    SIGNAL          reduce using rule 39 (sentence -> print_values .)
    VIEWSIGNAL      reduce using rule 39 (sentence -> print_values .)
    ID              reduce using rule 39 (sentence -> print_values .)
    ISTRUE          reduce using rule 39 (sentence -> print_values .)
    REPEAT          reduce using rule 39 (sentence -> print_values .)
    UNTIL           reduce using rule 39 (sentence -> print_values .)
    CASE            reduce using rule 39 (sentence -> print_values .)
    WHEN            reduce using rule 39 (sentence -> print_values .)
    BREAK           reduce using rule 39 (sentence -> print_values .)
    SEMICOLON       reduce using rule 39 (sentence -> print_values .)


state 58

    (40) sentence -> alter .

    RPARENT         reduce using rule 40 (sentence -> alter .)
    NEW             reduce using rule 40 (sentence -> alter .)
    VALUES          reduce using rule 40 (sentence -> alter .)
    CALL            reduce using rule 40 (sentence -> alter .)
    PRINTVALUES     reduce using rule 40 (sentence -> alter .)
    ALTER           reduce using rule 40 (sentence -> alter .)
    ALTERB          reduce using rule 40 (sentence -> alter .)
    SIGNAL          reduce using rule 40 (sentence -> alter .)
    VIEWSIGNAL      reduce using rule 40 (sentence -> alter .)
    ID              reduce using rule 40 (sentence -> alter .)
    ISTRUE          reduce using rule 40 (sentence -> alter .)
    REPEAT          reduce using rule 40 (sentence -> alter .)
    UNTIL           reduce using rule 40 (sentence -> alter .)
    CASE            reduce using rule 40 (sentence -> alter .)
    WHEN            reduce using rule 40 (sentence -> alter .)
    BREAK           reduce using rule 40 (sentence -> alter .)
    SEMICOLON       reduce using rule 40 (sentence -> alter .)


state 59

    (41) sentence -> alterB .

    RPARENT         reduce using rule 41 (sentence -> alterB .)
    NEW             reduce using rule 41 (sentence -> alterB .)
    VALUES          reduce using rule 41 (sentence -> alterB .)
    CALL            reduce using rule 41 (sentence -> alterB .)
    PRINTVALUES     reduce using rule 41 (sentence -> alterB .)
    ALTER           reduce using rule 41 (sentence -> alterB .)
    ALTERB          reduce using rule 41 (sentence -> alterB .)
    SIGNAL          reduce using rule 41 (sentence -> alterB .)
    VIEWSIGNAL      reduce using rule 41 (sentence -> alterB .)
    ID              reduce using rule 41 (sentence -> alterB .)
    ISTRUE          reduce using rule 41 (sentence -> alterB .)
    REPEAT          reduce using rule 41 (sentence -> alterB .)
    UNTIL           reduce using rule 41 (sentence -> alterB .)
    CASE            reduce using rule 41 (sentence -> alterB .)
    WHEN            reduce using rule 41 (sentence -> alterB .)
    BREAK           reduce using rule 41 (sentence -> alterB .)
    SEMICOLON       reduce using rule 41 (sentence -> alterB .)


state 60

    (42) sentence -> signal .

    RPARENT         reduce using rule 42 (sentence -> signal .)
    NEW             reduce using rule 42 (sentence -> signal .)
    VALUES          reduce using rule 42 (sentence -> signal .)
    CALL            reduce using rule 42 (sentence -> signal .)
    PRINTVALUES     reduce using rule 42 (sentence -> signal .)
    ALTER           reduce using rule 42 (sentence -> signal .)
    ALTERB          reduce using rule 42 (sentence -> signal .)
    SIGNAL          reduce using rule 42 (sentence -> signal .)
    VIEWSIGNAL      reduce using rule 42 (sentence -> signal .)
    ID              reduce using rule 42 (sentence -> signal .)
    ISTRUE          reduce using rule 42 (sentence -> signal .)
    REPEAT          reduce using rule 42 (sentence -> signal .)
    UNTIL           reduce using rule 42 (sentence -> signal .)
    CASE            reduce using rule 42 (sentence -> signal .)
    WHEN            reduce using rule 42 (sentence -> signal .)
    BREAK           reduce using rule 42 (sentence -> signal .)
    SEMICOLON       reduce using rule 42 (sentence -> signal .)


state 61

    (43) sentence -> viewsignal .

    RPARENT         reduce using rule 43 (sentence -> viewsignal .)
    NEW             reduce using rule 43 (sentence -> viewsignal .)
    VALUES          reduce using rule 43 (sentence -> viewsignal .)
    CALL            reduce using rule 43 (sentence -> viewsignal .)
    PRINTVALUES     reduce using rule 43 (sentence -> viewsignal .)
    ALTER           reduce using rule 43 (sentence -> viewsignal .)
    ALTERB          reduce using rule 43 (sentence -> viewsignal .)
    SIGNAL          reduce using rule 43 (sentence -> viewsignal .)
    VIEWSIGNAL      reduce using rule 43 (sentence -> viewsignal .)
    ID              reduce using rule 43 (sentence -> viewsignal .)
    ISTRUE          reduce using rule 43 (sentence -> viewsignal .)
    REPEAT          reduce using rule 43 (sentence -> viewsignal .)
    UNTIL           reduce using rule 43 (sentence -> viewsignal .)
    CASE            reduce using rule 43 (sentence -> viewsignal .)
    WHEN            reduce using rule 43 (sentence -> viewsignal .)
    BREAK           reduce using rule 43 (sentence -> viewsignal .)
    SEMICOLON       reduce using rule 43 (sentence -> viewsignal .)


state 62

    (44) sentence -> sentence7 .

    RPARENT         reduce using rule 44 (sentence -> sentence7 .)
    NEW             reduce using rule 44 (sentence -> sentence7 .)
    VALUES          reduce using rule 44 (sentence -> sentence7 .)
    CALL            reduce using rule 44 (sentence -> sentence7 .)
    PRINTVALUES     reduce using rule 44 (sentence -> sentence7 .)
    ALTER           reduce using rule 44 (sentence -> sentence7 .)
    ALTERB          reduce using rule 44 (sentence -> sentence7 .)
    SIGNAL          reduce using rule 44 (sentence -> sentence7 .)
    VIEWSIGNAL      reduce using rule 44 (sentence -> sentence7 .)
    ID              reduce using rule 44 (sentence -> sentence7 .)
    ISTRUE          reduce using rule 44 (sentence -> sentence7 .)
    REPEAT          reduce using rule 44 (sentence -> sentence7 .)
    UNTIL           reduce using rule 44 (sentence -> sentence7 .)
    CASE            reduce using rule 44 (sentence -> sentence7 .)
    WHEN            reduce using rule 44 (sentence -> sentence7 .)
    BREAK           reduce using rule 44 (sentence -> sentence7 .)
    SEMICOLON       reduce using rule 44 (sentence -> sentence7 .)


state 63

    (45) sentence -> sentence8 .

    RPARENT         reduce using rule 45 (sentence -> sentence8 .)
    NEW             reduce using rule 45 (sentence -> sentence8 .)
    VALUES          reduce using rule 45 (sentence -> sentence8 .)
    CALL            reduce using rule 45 (sentence -> sentence8 .)
    PRINTVALUES     reduce using rule 45 (sentence -> sentence8 .)
    ALTER           reduce using rule 45 (sentence -> sentence8 .)
    ALTERB          reduce using rule 45 (sentence -> sentence8 .)
    SIGNAL          reduce using rule 45 (sentence -> sentence8 .)
    VIEWSIGNAL      reduce using rule 45 (sentence -> sentence8 .)
    ID              reduce using rule 45 (sentence -> sentence8 .)
    ISTRUE          reduce using rule 45 (sentence -> sentence8 .)
    REPEAT          reduce using rule 45 (sentence -> sentence8 .)
    UNTIL           reduce using rule 45 (sentence -> sentence8 .)
    CASE            reduce using rule 45 (sentence -> sentence8 .)
    WHEN            reduce using rule 45 (sentence -> sentence8 .)
    BREAK           reduce using rule 45 (sentence -> sentence8 .)
    SEMICOLON       reduce using rule 45 (sentence -> sentence8 .)


state 64

    (46) sentence -> sentence9 .

    RPARENT         reduce using rule 46 (sentence -> sentence9 .)
    NEW             reduce using rule 46 (sentence -> sentence9 .)
    VALUES          reduce using rule 46 (sentence -> sentence9 .)
    CALL            reduce using rule 46 (sentence -> sentence9 .)
    PRINTVALUES     reduce using rule 46 (sentence -> sentence9 .)
    ALTER           reduce using rule 46 (sentence -> sentence9 .)
    ALTERB          reduce using rule 46 (sentence -> sentence9 .)
    SIGNAL          reduce using rule 46 (sentence -> sentence9 .)
    VIEWSIGNAL      reduce using rule 46 (sentence -> sentence9 .)
    ID              reduce using rule 46 (sentence -> sentence9 .)
    ISTRUE          reduce using rule 46 (sentence -> sentence9 .)
    REPEAT          reduce using rule 46 (sentence -> sentence9 .)
    UNTIL           reduce using rule 46 (sentence -> sentence9 .)
    CASE            reduce using rule 46 (sentence -> sentence9 .)
    WHEN            reduce using rule 46 (sentence -> sentence9 .)
    BREAK           reduce using rule 46 (sentence -> sentence9 .)
    SEMICOLON       reduce using rule 46 (sentence -> sentence9 .)


state 65

    (47) sentence -> sentence10 .

    RPARENT         reduce using rule 47 (sentence -> sentence10 .)
    NEW             reduce using rule 47 (sentence -> sentence10 .)
    VALUES          reduce using rule 47 (sentence -> sentence10 .)
    CALL            reduce using rule 47 (sentence -> sentence10 .)
    PRINTVALUES     reduce using rule 47 (sentence -> sentence10 .)
    ALTER           reduce using rule 47 (sentence -> sentence10 .)
    ALTERB          reduce using rule 47 (sentence -> sentence10 .)
    SIGNAL          reduce using rule 47 (sentence -> sentence10 .)
    VIEWSIGNAL      reduce using rule 47 (sentence -> sentence10 .)
    ID              reduce using rule 47 (sentence -> sentence10 .)
    ISTRUE          reduce using rule 47 (sentence -> sentence10 .)
    REPEAT          reduce using rule 47 (sentence -> sentence10 .)
    UNTIL           reduce using rule 47 (sentence -> sentence10 .)
    CASE            reduce using rule 47 (sentence -> sentence10 .)
    WHEN            reduce using rule 47 (sentence -> sentence10 .)
    BREAK           reduce using rule 47 (sentence -> sentence10 .)
    SEMICOLON       reduce using rule 47 (sentence -> sentence10 .)


state 66

    (48) sentence -> sentence11 .

    RPARENT         reduce using rule 48 (sentence -> sentence11 .)
    NEW             reduce using rule 48 (sentence -> sentence11 .)
    VALUES          reduce using rule 48 (sentence -> sentence11 .)
    CALL            reduce using rule 48 (sentence -> sentence11 .)
    PRINTVALUES     reduce using rule 48 (sentence -> sentence11 .)
    ALTER           reduce using rule 48 (sentence -> sentence11 .)
    ALTERB          reduce using rule 48 (sentence -> sentence11 .)
    SIGNAL          reduce using rule 48 (sentence -> sentence11 .)
    VIEWSIGNAL      reduce using rule 48 (sentence -> sentence11 .)
    ID              reduce using rule 48 (sentence -> sentence11 .)
    ISTRUE          reduce using rule 48 (sentence -> sentence11 .)
    REPEAT          reduce using rule 48 (sentence -> sentence11 .)
    UNTIL           reduce using rule 48 (sentence -> sentence11 .)
    CASE            reduce using rule 48 (sentence -> sentence11 .)
    WHEN            reduce using rule 48 (sentence -> sentence11 .)
    BREAK           reduce using rule 48 (sentence -> sentence11 .)
    SEMICOLON       reduce using rule 48 (sentence -> sentence11 .)


state 67

    (49) sentence -> sentence12 .

    RPARENT         reduce using rule 49 (sentence -> sentence12 .)
    NEW             reduce using rule 49 (sentence -> sentence12 .)
    VALUES          reduce using rule 49 (sentence -> sentence12 .)
    CALL            reduce using rule 49 (sentence -> sentence12 .)
    PRINTVALUES     reduce using rule 49 (sentence -> sentence12 .)
    ALTER           reduce using rule 49 (sentence -> sentence12 .)
    ALTERB          reduce using rule 49 (sentence -> sentence12 .)
    SIGNAL          reduce using rule 49 (sentence -> sentence12 .)
    VIEWSIGNAL      reduce using rule 49 (sentence -> sentence12 .)
    ID              reduce using rule 49 (sentence -> sentence12 .)
    ISTRUE          reduce using rule 49 (sentence -> sentence12 .)
    REPEAT          reduce using rule 49 (sentence -> sentence12 .)
    UNTIL           reduce using rule 49 (sentence -> sentence12 .)
    CASE            reduce using rule 49 (sentence -> sentence12 .)
    WHEN            reduce using rule 49 (sentence -> sentence12 .)
    BREAK           reduce using rule 49 (sentence -> sentence12 .)
    SEMICOLON       reduce using rule 49 (sentence -> sentence12 .)


state 68

    (50) sentence -> isTrue .

    RPARENT         reduce using rule 50 (sentence -> isTrue .)
    NEW             reduce using rule 50 (sentence -> isTrue .)
    VALUES          reduce using rule 50 (sentence -> isTrue .)
    CALL            reduce using rule 50 (sentence -> isTrue .)
    PRINTVALUES     reduce using rule 50 (sentence -> isTrue .)
    ALTER           reduce using rule 50 (sentence -> isTrue .)
    ALTERB          reduce using rule 50 (sentence -> isTrue .)
    SIGNAL          reduce using rule 50 (sentence -> isTrue .)
    VIEWSIGNAL      reduce using rule 50 (sentence -> isTrue .)
    ID              reduce using rule 50 (sentence -> isTrue .)
    ISTRUE          reduce using rule 50 (sentence -> isTrue .)
    REPEAT          reduce using rule 50 (sentence -> isTrue .)
    UNTIL           reduce using rule 50 (sentence -> isTrue .)
    CASE            reduce using rule 50 (sentence -> isTrue .)
    WHEN            reduce using rule 50 (sentence -> isTrue .)
    BREAK           reduce using rule 50 (sentence -> isTrue .)
    SEMICOLON       reduce using rule 50 (sentence -> isTrue .)


state 69

    (51) sentence -> sentence14 .

    RPARENT         reduce using rule 51 (sentence -> sentence14 .)
    NEW             reduce using rule 51 (sentence -> sentence14 .)
    VALUES          reduce using rule 51 (sentence -> sentence14 .)
    CALL            reduce using rule 51 (sentence -> sentence14 .)
    PRINTVALUES     reduce using rule 51 (sentence -> sentence14 .)
    ALTER           reduce using rule 51 (sentence -> sentence14 .)
    ALTERB          reduce using rule 51 (sentence -> sentence14 .)
    SIGNAL          reduce using rule 51 (sentence -> sentence14 .)
    VIEWSIGNAL      reduce using rule 51 (sentence -> sentence14 .)
    ID              reduce using rule 51 (sentence -> sentence14 .)
    ISTRUE          reduce using rule 51 (sentence -> sentence14 .)
    REPEAT          reduce using rule 51 (sentence -> sentence14 .)
    UNTIL           reduce using rule 51 (sentence -> sentence14 .)
    CASE            reduce using rule 51 (sentence -> sentence14 .)
    WHEN            reduce using rule 51 (sentence -> sentence14 .)
    BREAK           reduce using rule 51 (sentence -> sentence14 .)
    SEMICOLON       reduce using rule 51 (sentence -> sentence14 .)


state 70

    (52) sentence -> sentence15 .

    RPARENT         reduce using rule 52 (sentence -> sentence15 .)
    NEW             reduce using rule 52 (sentence -> sentence15 .)
    VALUES          reduce using rule 52 (sentence -> sentence15 .)
    CALL            reduce using rule 52 (sentence -> sentence15 .)
    PRINTVALUES     reduce using rule 52 (sentence -> sentence15 .)
    ALTER           reduce using rule 52 (sentence -> sentence15 .)
    ALTERB          reduce using rule 52 (sentence -> sentence15 .)
    SIGNAL          reduce using rule 52 (sentence -> sentence15 .)
    VIEWSIGNAL      reduce using rule 52 (sentence -> sentence15 .)
    ID              reduce using rule 52 (sentence -> sentence15 .)
    ISTRUE          reduce using rule 52 (sentence -> sentence15 .)
    REPEAT          reduce using rule 52 (sentence -> sentence15 .)
    UNTIL           reduce using rule 52 (sentence -> sentence15 .)
    CASE            reduce using rule 52 (sentence -> sentence15 .)
    WHEN            reduce using rule 52 (sentence -> sentence15 .)
    BREAK           reduce using rule 52 (sentence -> sentence15 .)
    SEMICOLON       reduce using rule 52 (sentence -> sentence15 .)


state 71

    (53) sentence -> empty .

    RPARENT         reduce using rule 53 (sentence -> empty .)
    NEW             reduce using rule 53 (sentence -> empty .)
    VALUES          reduce using rule 53 (sentence -> empty .)
    CALL            reduce using rule 53 (sentence -> empty .)
    PRINTVALUES     reduce using rule 53 (sentence -> empty .)
    ALTER           reduce using rule 53 (sentence -> empty .)
    ALTERB          reduce using rule 53 (sentence -> empty .)
    SIGNAL          reduce using rule 53 (sentence -> empty .)
    VIEWSIGNAL      reduce using rule 53 (sentence -> empty .)
    ID              reduce using rule 53 (sentence -> empty .)
    ISTRUE          reduce using rule 53 (sentence -> empty .)
    REPEAT          reduce using rule 53 (sentence -> empty .)
    UNTIL           reduce using rule 53 (sentence -> empty .)
    CASE            reduce using rule 53 (sentence -> empty .)
    WHEN            reduce using rule 53 (sentence -> empty .)
    BREAK           reduce using rule 53 (sentence -> empty .)
    SEMICOLON       reduce using rule 53 (sentence -> empty .)


state 72

    (54) local_variable -> NEW . ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> NEW . ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 99


state 73

    (7) master -> MASTER LPARENT master_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 100


state 74

    (9) master_sentences -> master_sentences master_sentence .

    RPARENT         reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    NEW             reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    VALUES          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    CALL            reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    PRINTVALUES     reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ALTER           reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ALTERB          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    SIGNAL          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    VIEWSIGNAL      reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ID              reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    ISTRUE          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    REPEAT          reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    UNTIL           reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    CASE            reduce using rule 9 (master_sentences -> master_sentences master_sentence .)
    WHEN            reduce using rule 9 (master_sentences -> master_sentences master_sentence .)


state 75

    (89) cases -> cases case .

    CASE            reduce using rule 89 (cases -> cases case .)
    RPARENT         reduce using rule 89 (cases -> cases case .)
    NEW             reduce using rule 89 (cases -> cases case .)
    VALUES          reduce using rule 89 (cases -> cases case .)
    CALL            reduce using rule 89 (cases -> cases case .)
    PRINTVALUES     reduce using rule 89 (cases -> cases case .)
    ALTER           reduce using rule 89 (cases -> cases case .)
    ALTERB          reduce using rule 89 (cases -> cases case .)
    SIGNAL          reduce using rule 89 (cases -> cases case .)
    VIEWSIGNAL      reduce using rule 89 (cases -> cases case .)
    ID              reduce using rule 89 (cases -> cases case .)
    ISTRUE          reduce using rule 89 (cases -> cases case .)
    REPEAT          reduce using rule 89 (cases -> cases case .)
    UNTIL           reduce using rule 89 (cases -> cases case .)
    WHEN            reduce using rule 89 (cases -> cases case .)
    BREAK           reduce using rule 89 (cases -> cases case .)
    SEMICOLON       reduce using rule 89 (cases -> cases case .)


state 76

    (91) conditions -> conditions condition .

    WHEN            reduce using rule 91 (conditions -> conditions condition .)
    RPARENT         reduce using rule 91 (conditions -> conditions condition .)
    NEW             reduce using rule 91 (conditions -> conditions condition .)
    VALUES          reduce using rule 91 (conditions -> conditions condition .)
    CALL            reduce using rule 91 (conditions -> conditions condition .)
    PRINTVALUES     reduce using rule 91 (conditions -> conditions condition .)
    ALTER           reduce using rule 91 (conditions -> conditions condition .)
    ALTERB          reduce using rule 91 (conditions -> conditions condition .)
    SIGNAL          reduce using rule 91 (conditions -> conditions condition .)
    VIEWSIGNAL      reduce using rule 91 (conditions -> conditions condition .)
    ID              reduce using rule 91 (conditions -> conditions condition .)
    ISTRUE          reduce using rule 91 (conditions -> conditions condition .)
    REPEAT          reduce using rule 91 (conditions -> conditions condition .)
    UNTIL           reduce using rule 91 (conditions -> conditions condition .)
    CASE            reduce using rule 91 (conditions -> conditions condition .)
    BREAK           reduce using rule 91 (conditions -> conditions condition .)
    SEMICOLON       reduce using rule 91 (conditions -> conditions condition .)


state 77

    (30) master_var -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 101


state 78

    (75) sentence7 -> ID MAQ . INTEGER

    INTEGER         shift and go to state 102


state 79

    (76) sentence8 -> ID MEQ . INTEGER

    INTEGER         shift and go to state 103


state 80

    (77) sentence9 -> ID EQUAL . INTEGER

    INTEGER         shift and go to state 104


state 81

    (78) sentence10 -> ID DIFFERENT . INTEGER

    INTEGER         shift and go to state 105


state 82

    (79) sentence11 -> ID MEQEQUAL . INTEGER

    INTEGER         shift and go to state 106


state 83

    (80) sentence12 -> ID MAQEQUAL . INTEGER

    INTEGER         shift and go to state 107


state 84

    (56) values -> VALUES LPARENT . ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> VALUES LPARENT . ID COMA BOOL RPARENT SEMICOLON

    ID              shift and go to state 108


state 85

    (58) call -> CALL LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 109


state 86

    (59) print_values -> PRINTVALUES LPARENT . printable_sentences RPARENT SEMICOLON
    (60) printable_sentences -> . printable_sentence_var
    (61) printable_sentences -> . printable_sentence_string
    (62) printable_sentences -> . printable_sentence_var PLUS printable_sentence_var
    (63) printable_sentences -> . printable_sentence_string PLUS printable_sentence_string
    (64) printable_sentences -> . printable_sentence_var PLUS printable_sentence_string
    (65) printable_sentences -> . printable_sentence_string PLUS printable_sentence_var
    (66) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_var
    (67) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_string
    (68) printable_sentence_var -> . ID
    (69) printable_sentence_string -> . STRING

    PLUS            shift and go to state 113
    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentences            shift and go to state 110
    printable_sentence_var         shift and go to state 111
    printable_sentence_string      shift and go to state 112

state 87

    (70) alter -> ALTER LPARENT . ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> ALTER LPARENT . ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> ALTER LPARENT . ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> ALTER LPARENT . ID COMA DIV COMA INTEGER RPARENT SEMICOLON

    ID              shift and go to state 116


state 88

    (74) alterB -> ALTERB LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 117


state 89

    (94) signal -> SIGNAL LPARENT . INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> SIGNAL LPARENT . ID COMA INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 118
    ID              shift and go to state 119


state 90

    (96) viewsignal -> VIEWSIGNAL LPARENT . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 120


state 91

    (81) isTrue -> ISTRUE LPARENT . ID RPARENT SEMICOLON

    ID              shift and go to state 121


state 92

    (82) sentence14 -> REPEAT LPARENT . sentences BREAK RPARENT SEMICOLON
    (32) sentences -> . sentence
    (33) sentences -> . sentences sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    BREAK           reduce using rule 97 (empty -> .)
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    sentences                      shift and go to state 122
    sentence                       shift and go to state 51
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    conditions                     shift and go to state 55
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 93

    (83) sentence15 -> UNTIL LPARENT . instructions RPARENT sentences SEMICOLON
    (84) instructions -> . sentence
    (85) instructions -> . sentence sentences
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    RPARENT         reduce using rule 97 (empty -> .)
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    instructions                   shift and go to state 123
    sentence                       shift and go to state 124
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    conditions                     shift and go to state 55
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 94

    (86) case -> CASE expression . NEWLINE conditions sentences
    (87) case -> CASE expression . NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT

    NEWLINE         shift and go to state 125


state 95

    (90) expression -> ID .

    NEWLINE         reduce using rule 90 (expression -> ID .)


state 96

    (93) condition -> WHEN INTEGER . THEN NEWLINE

    THEN            shift and go to state 126


state 97

    (6) procedure -> declare_procedure LPARENT sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 127


state 98

    (33) sentences -> sentences sentence .

    RPARENT         reduce using rule 33 (sentences -> sentences sentence .)
    NEW             reduce using rule 33 (sentences -> sentences sentence .)
    VALUES          reduce using rule 33 (sentences -> sentences sentence .)
    CALL            reduce using rule 33 (sentences -> sentences sentence .)
    PRINTVALUES     reduce using rule 33 (sentences -> sentences sentence .)
    ALTER           reduce using rule 33 (sentences -> sentences sentence .)
    ALTERB          reduce using rule 33 (sentences -> sentences sentence .)
    SIGNAL          reduce using rule 33 (sentences -> sentences sentence .)
    VIEWSIGNAL      reduce using rule 33 (sentences -> sentences sentence .)
    ID              reduce using rule 33 (sentences -> sentences sentence .)
    ISTRUE          reduce using rule 33 (sentences -> sentences sentence .)
    REPEAT          reduce using rule 33 (sentences -> sentences sentence .)
    UNTIL           reduce using rule 33 (sentences -> sentences sentence .)
    CASE            reduce using rule 33 (sentences -> sentences sentence .)
    WHEN            reduce using rule 33 (sentences -> sentences sentence .)
    BREAK           reduce using rule 33 (sentences -> sentences sentence .)
    SEMICOLON       reduce using rule 33 (sentences -> sentences sentence .)


state 99

    (54) local_variable -> NEW ID . COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> NEW ID . COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 128


state 100

    (7) master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .

    PROC            reduce using rule 7 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)
    $end            reduce using rule 7 (master -> MASTER LPARENT master_sentences RPARENT SEMICOLON .)


state 101

    (30) master_var -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 129


state 102

    (75) sentence7 -> ID MAQ INTEGER .

    RPARENT         reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    NEW             reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    VALUES          reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    CALL            reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    PRINTVALUES     reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    ALTER           reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    ALTERB          reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    SIGNAL          reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    VIEWSIGNAL      reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    ID              reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    ISTRUE          reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    REPEAT          reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    UNTIL           reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    CASE            reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    WHEN            reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    BREAK           reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)
    SEMICOLON       reduce using rule 75 (sentence7 -> ID MAQ INTEGER .)


state 103

    (76) sentence8 -> ID MEQ INTEGER .

    RPARENT         reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    NEW             reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    VALUES          reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    CALL            reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    PRINTVALUES     reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    ALTER           reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    ALTERB          reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    SIGNAL          reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    VIEWSIGNAL      reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    ID              reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    ISTRUE          reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    REPEAT          reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    UNTIL           reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    CASE            reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    WHEN            reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    BREAK           reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)
    SEMICOLON       reduce using rule 76 (sentence8 -> ID MEQ INTEGER .)


state 104

    (77) sentence9 -> ID EQUAL INTEGER .

    RPARENT         reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    NEW             reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    VALUES          reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    CALL            reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    PRINTVALUES     reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    ALTER           reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    ALTERB          reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    SIGNAL          reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    ID              reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    ISTRUE          reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    REPEAT          reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    UNTIL           reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    CASE            reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    WHEN            reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    BREAK           reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)
    SEMICOLON       reduce using rule 77 (sentence9 -> ID EQUAL INTEGER .)


state 105

    (78) sentence10 -> ID DIFFERENT INTEGER .

    RPARENT         reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    NEW             reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    VALUES          reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    CALL            reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    PRINTVALUES     reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    ALTER           reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    ALTERB          reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    SIGNAL          reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    VIEWSIGNAL      reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    ID              reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    ISTRUE          reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    REPEAT          reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    UNTIL           reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    CASE            reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    WHEN            reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    BREAK           reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)
    SEMICOLON       reduce using rule 78 (sentence10 -> ID DIFFERENT INTEGER .)


state 106

    (79) sentence11 -> ID MEQEQUAL INTEGER .

    RPARENT         reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    NEW             reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    VALUES          reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    CALL            reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    ALTER           reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    ALTERB          reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    SIGNAL          reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    ID              reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    ISTRUE          reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    REPEAT          reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    UNTIL           reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    CASE            reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    WHEN            reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    BREAK           reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)
    SEMICOLON       reduce using rule 79 (sentence11 -> ID MEQEQUAL INTEGER .)


state 107

    (80) sentence12 -> ID MAQEQUAL INTEGER .

    RPARENT         reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    NEW             reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    VALUES          reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    CALL            reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    PRINTVALUES     reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    ALTER           reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    ALTERB          reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    SIGNAL          reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    VIEWSIGNAL      reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    ID              reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    ISTRUE          reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    REPEAT          reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    UNTIL           reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    CASE            reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    WHEN            reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    BREAK           reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)
    SEMICOLON       reduce using rule 80 (sentence12 -> ID MAQEQUAL INTEGER .)


state 108

    (56) values -> VALUES LPARENT ID . COMA INTEGER RPARENT SEMICOLON
    (57) values -> VALUES LPARENT ID . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 130


state 109

    (58) call -> CALL LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 131


state 110

    (59) print_values -> PRINTVALUES LPARENT printable_sentences . RPARENT SEMICOLON

    RPARENT         shift and go to state 132


state 111

    (60) printable_sentences -> printable_sentence_var .
    (62) printable_sentences -> printable_sentence_var . PLUS printable_sentence_var
    (64) printable_sentences -> printable_sentence_var . PLUS printable_sentence_string

  ! shift/reduce conflict for PLUS resolved as shift
    RPARENT         reduce using rule 60 (printable_sentences -> printable_sentence_var .)
    PLUS            shift and go to state 133

  ! PLUS            [ reduce using rule 60 (printable_sentences -> printable_sentence_var .) ]


state 112

    (61) printable_sentences -> printable_sentence_string .
    (63) printable_sentences -> printable_sentence_string . PLUS printable_sentence_string
    (65) printable_sentences -> printable_sentence_string . PLUS printable_sentence_var

  ! shift/reduce conflict for PLUS resolved as shift
    RPARENT         reduce using rule 61 (printable_sentences -> printable_sentence_string .)
    PLUS            shift and go to state 134

  ! PLUS            [ reduce using rule 61 (printable_sentences -> printable_sentence_string .) ]


state 113

    (66) printable_sentences -> PLUS . printable_sentences PLUS printable_sentence_var
    (67) printable_sentences -> PLUS . printable_sentences PLUS printable_sentence_string
    (60) printable_sentences -> . printable_sentence_var
    (61) printable_sentences -> . printable_sentence_string
    (62) printable_sentences -> . printable_sentence_var PLUS printable_sentence_var
    (63) printable_sentences -> . printable_sentence_string PLUS printable_sentence_string
    (64) printable_sentences -> . printable_sentence_var PLUS printable_sentence_string
    (65) printable_sentences -> . printable_sentence_string PLUS printable_sentence_var
    (66) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_var
    (67) printable_sentences -> . PLUS printable_sentences PLUS printable_sentence_string
    (68) printable_sentence_var -> . ID
    (69) printable_sentence_string -> . STRING

    PLUS            shift and go to state 113
    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentences            shift and go to state 135
    printable_sentence_var         shift and go to state 111
    printable_sentence_string      shift and go to state 112

state 114

    (68) printable_sentence_var -> ID .

    PLUS            reduce using rule 68 (printable_sentence_var -> ID .)
    RPARENT         reduce using rule 68 (printable_sentence_var -> ID .)


state 115

    (69) printable_sentence_string -> STRING .

    PLUS            reduce using rule 69 (printable_sentence_string -> STRING .)
    RPARENT         reduce using rule 69 (printable_sentence_string -> STRING .)


state 116

    (70) alter -> ALTER LPARENT ID . COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> ALTER LPARENT ID . COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> ALTER LPARENT ID . COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> ALTER LPARENT ID . COMA DIV COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 136


state 117

    (74) alterB -> ALTERB LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 137


state 118

    (94) signal -> SIGNAL LPARENT INTEGER . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 138


state 119

    (95) signal -> SIGNAL LPARENT ID . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 139


state 120

    (96) viewsignal -> VIEWSIGNAL LPARENT INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 140


state 121

    (81) isTrue -> ISTRUE LPARENT ID . RPARENT SEMICOLON

    RPARENT         shift and go to state 141


state 122

    (82) sentence14 -> REPEAT LPARENT sentences . BREAK RPARENT SEMICOLON
    (33) sentences -> sentences . sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    BREAK           shift and go to state 142
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! BREAK           [ reduce using rule 97 (empty -> .) ]
  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    sentence                       shift and go to state 98
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    conditions                     shift and go to state 55
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 123

    (83) sentence15 -> UNTIL LPARENT instructions . RPARENT sentences SEMICOLON

    RPARENT         shift and go to state 143


state 124

    (84) instructions -> sentence .
    (85) instructions -> sentence . sentences
    (32) sentences -> . sentence
    (33) sentences -> . sentences sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! reduce/reduce conflict for RPARENT resolved using rule 84 (instructions -> sentence .)
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    RPARENT         reduce using rule 84 (instructions -> sentence .)
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]
  ! RPARENT         [ reduce using rule 97 (empty -> .) ]

    sentence                       shift and go to state 51
    sentences                      shift and go to state 144
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    conditions                     shift and go to state 55
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 125

    (86) case -> CASE expression NEWLINE . conditions sentences
    (87) case -> CASE expression NEWLINE . conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (93) condition -> . WHEN INTEGER THEN NEWLINE

    WHEN            shift and go to state 49

    conditions                     shift and go to state 145
    condition                      shift and go to state 38

state 126

    (93) condition -> WHEN INTEGER THEN . NEWLINE

    NEWLINE         shift and go to state 146


state 127

    (6) procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .

    PROC            reduce using rule 6 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)
    $end            reduce using rule 6 (procedure -> declare_procedure LPARENT sentences RPARENT SEMICOLON .)


state 128

    (54) local_variable -> NEW ID COMA . LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> NEW ID COMA . LPARENT TYPE COMA BOOL RPARENT SEMICOLON

    LPARENT         shift and go to state 147


state 129

    (30) master_var -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON

    TYPE            shift and go to state 148


state 130

    (56) values -> VALUES LPARENT ID COMA . INTEGER RPARENT SEMICOLON
    (57) values -> VALUES LPARENT ID COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 149
    BOOL            shift and go to state 150


state 131

    (58) call -> CALL LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 151


state 132

    (59) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 152


state 133

    (62) printable_sentences -> printable_sentence_var PLUS . printable_sentence_var
    (64) printable_sentences -> printable_sentence_var PLUS . printable_sentence_string
    (68) printable_sentence_var -> . ID
    (69) printable_sentence_string -> . STRING

    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentence_var         shift and go to state 153
    printable_sentence_string      shift and go to state 154

state 134

    (63) printable_sentences -> printable_sentence_string PLUS . printable_sentence_string
    (65) printable_sentences -> printable_sentence_string PLUS . printable_sentence_var
    (69) printable_sentence_string -> . STRING
    (68) printable_sentence_var -> . ID

    STRING          shift and go to state 115
    ID              shift and go to state 114

    printable_sentence_string      shift and go to state 155
    printable_sentence_var         shift and go to state 156

state 135

    (66) printable_sentences -> PLUS printable_sentences . PLUS printable_sentence_var
    (67) printable_sentences -> PLUS printable_sentences . PLUS printable_sentence_string

    PLUS            shift and go to state 157


state 136

    (70) alter -> ALTER LPARENT ID COMA . ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> ALTER LPARENT ID COMA . SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> ALTER LPARENT ID COMA . MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> ALTER LPARENT ID COMA . DIV COMA INTEGER RPARENT SEMICOLON

    ADD             shift and go to state 158
    SUB             shift and go to state 159
    MUL             shift and go to state 160
    DIV             shift and go to state 161


state 137

    (74) alterB -> ALTERB LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 162


state 138

    (94) signal -> SIGNAL LPARENT INTEGER COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 163


state 139

    (95) signal -> SIGNAL LPARENT ID COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 164


state 140

    (96) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 165


state 141

    (81) isTrue -> ISTRUE LPARENT ID RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 166


state 142

    (82) sentence14 -> REPEAT LPARENT sentences BREAK . RPARENT SEMICOLON

    RPARENT         shift and go to state 167


state 143

    (83) sentence15 -> UNTIL LPARENT instructions RPARENT . sentences SEMICOLON
    (32) sentences -> . sentence
    (33) sentences -> . sentences sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    SEMICOLON       reduce using rule 97 (empty -> .)
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    sentences                      shift and go to state 168
    sentence                       shift and go to state 51
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    conditions                     shift and go to state 55
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 144

    (85) instructions -> sentence sentences .
    (33) sentences -> sentences . sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! reduce/reduce conflict for RPARENT resolved using rule 85 (instructions -> sentence sentences .)
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    RPARENT         reduce using rule 85 (instructions -> sentence sentences .)
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]
  ! RPARENT         [ reduce using rule 97 (empty -> .) ]

    sentence                       shift and go to state 98
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    conditions                     shift and go to state 55
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 145

    (86) case -> CASE expression NEWLINE conditions . sentences
    (87) case -> CASE expression NEWLINE conditions . LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (91) conditions -> conditions . condition
    (32) sentences -> . sentence
    (33) sentences -> . sentences sentence
    (93) condition -> . WHEN INTEGER THEN NEWLINE
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
    LPARENT         shift and go to state 170
    WHEN            shift and go to state 49
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    RPARENT         reduce using rule 97 (empty -> .)
    BREAK           reduce using rule 97 (empty -> .)
    SEMICOLON       reduce using rule 97 (empty -> .)
    CASE            shift and go to state 48

  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    conditions                     shift and go to state 55
    sentences                      shift and go to state 169
    condition                      shift and go to state 171
    sentence                       shift and go to state 51
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37

state 146

    (93) condition -> WHEN INTEGER THEN NEWLINE .

    WHEN            reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    RPARENT         reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    NEW             reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    VALUES          reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    CALL            reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    PRINTVALUES     reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    ALTER           reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    ALTERB          reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    SIGNAL          reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    VIEWSIGNAL      reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    ID              reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    ISTRUE          reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    REPEAT          reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    UNTIL           reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    CASE            reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    BREAK           reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    SEMICOLON       reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)
    LPARENT         reduce using rule 93 (condition -> WHEN INTEGER THEN NEWLINE .)


state 147

    (54) local_variable -> NEW ID COMA LPARENT . TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> NEW ID COMA LPARENT . TYPE COMA BOOL RPARENT SEMICOLON

    TYPE            shift and go to state 172


state 148

    (30) master_var -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (31) master_var -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 173


state 149

    (56) values -> VALUES LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 174


state 150

    (57) values -> VALUES LPARENT ID COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 175


state 151

    (58) call -> CALL LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    REPEAT          reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    UNTIL           reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    WHEN            reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    BREAK           reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 58 (call -> CALL LPARENT ID RPARENT SEMICOLON .)


state 152

    (59) print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .

    RPARENT         reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    NEW             reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VALUES          reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CALL            reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTER           reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ALTERB          reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ID              reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    REPEAT          reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    UNTIL           reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    CASE            reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    WHEN            reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    BREAK           reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 59 (print_values -> PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON .)


state 153

    (62) printable_sentences -> printable_sentence_var PLUS printable_sentence_var .

    RPARENT         reduce using rule 62 (printable_sentences -> printable_sentence_var PLUS printable_sentence_var .)
    PLUS            reduce using rule 62 (printable_sentences -> printable_sentence_var PLUS printable_sentence_var .)


state 154

    (64) printable_sentences -> printable_sentence_var PLUS printable_sentence_string .

    RPARENT         reduce using rule 64 (printable_sentences -> printable_sentence_var PLUS printable_sentence_string .)
    PLUS            reduce using rule 64 (printable_sentences -> printable_sentence_var PLUS printable_sentence_string .)


state 155

    (63) printable_sentences -> printable_sentence_string PLUS printable_sentence_string .

    RPARENT         reduce using rule 63 (printable_sentences -> printable_sentence_string PLUS printable_sentence_string .)
    PLUS            reduce using rule 63 (printable_sentences -> printable_sentence_string PLUS printable_sentence_string .)


state 156

    (65) printable_sentences -> printable_sentence_string PLUS printable_sentence_var .

    RPARENT         reduce using rule 65 (printable_sentences -> printable_sentence_string PLUS printable_sentence_var .)
    PLUS            reduce using rule 65 (printable_sentences -> printable_sentence_string PLUS printable_sentence_var .)


state 157

    (66) printable_sentences -> PLUS printable_sentences PLUS . printable_sentence_var
    (67) printable_sentences -> PLUS printable_sentences PLUS . printable_sentence_string
    (68) printable_sentence_var -> . ID
    (69) printable_sentence_string -> . STRING

    ID              shift and go to state 114
    STRING          shift and go to state 115

    printable_sentence_var         shift and go to state 176
    printable_sentence_string      shift and go to state 177

state 158

    (70) alter -> ALTER LPARENT ID COMA ADD . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 178


state 159

    (71) alter -> ALTER LPARENT ID COMA SUB . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 179


state 160

    (72) alter -> ALTER LPARENT ID COMA MUL . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 180


state 161

    (73) alter -> ALTER LPARENT ID COMA DIV . COMA INTEGER RPARENT SEMICOLON

    COMA            shift and go to state 181


state 162

    (74) alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    REPEAT          reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    UNTIL           reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    WHEN            reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    BREAK           reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 74 (alterB -> ALTERB LPARENT ID RPARENT SEMICOLON .)


state 163

    (94) signal -> SIGNAL LPARENT INTEGER COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 182


state 164

    (95) signal -> SIGNAL LPARENT ID COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 183


state 165

    (96) viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    WHEN            reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 96 (viewsignal -> VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON .)


state 166

    (81) isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .

    RPARENT         reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    NEW             reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VALUES          reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CALL            reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTER           reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ALTERB          reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ID              reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    REPEAT          reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    UNTIL           reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    CASE            reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    WHEN            reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    BREAK           reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 81 (isTrue -> ISTRUE LPARENT ID RPARENT SEMICOLON .)


state 167

    (82) sentence14 -> REPEAT LPARENT sentences BREAK RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 184


state 168

    (83) sentence15 -> UNTIL LPARENT instructions RPARENT sentences . SEMICOLON
    (33) sentences -> sentences . sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    SEMICOLON       shift and go to state 185
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! SEMICOLON       [ reduce using rule 97 (empty -> .) ]
  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    sentence                       shift and go to state 98
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    conditions                     shift and go to state 55
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 169

    (86) case -> CASE expression NEWLINE conditions sentences .
    (33) sentences -> sentences . sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! reduce/reduce conflict for CASE resolved using rule 86 (case -> CASE expression NEWLINE conditions sentences .)
  ! reduce/reduce conflict for RPARENT resolved using rule 86 (case -> CASE expression NEWLINE conditions sentences .)
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! reduce/reduce conflict for WHEN resolved using rule 86 (case -> CASE expression NEWLINE conditions sentences .)
  ! reduce/reduce conflict for BREAK resolved using rule 86 (case -> CASE expression NEWLINE conditions sentences .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 86 (case -> CASE expression NEWLINE conditions sentences .)
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    RPARENT         reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .)
    BREAK           reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .)
    SEMICOLON       reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .)
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! CASE            [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! NEW             [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! VALUES          [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! CALL            [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! PRINTVALUES     [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! ALTER           [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! ALTERB          [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! SIGNAL          [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! VIEWSIGNAL      [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! ID              [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! ISTRUE          [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! REPEAT          [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! UNTIL           [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! WHEN            [ reduce using rule 86 (case -> CASE expression NEWLINE conditions sentences .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! RPARENT         [ reduce using rule 97 (empty -> .) ]
  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]
  ! BREAK           [ reduce using rule 97 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 97 (empty -> .) ]

    conditions                     shift and go to state 55
    sentence                       shift and go to state 98
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 170

    (87) case -> CASE expression NEWLINE conditions LPARENT . sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (32) sentences -> . sentence
    (33) sentences -> . sentences sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    RPARENT         reduce using rule 97 (empty -> .)
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    conditions                     shift and go to state 55
    sentences                      shift and go to state 186
    sentence                       shift and go to state 51
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 171

    (91) conditions -> conditions condition .
    (92) conditions -> condition .

  ! reduce/reduce conflict for WHEN resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for CASE resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for RPARENT resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for NEW resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for VALUES resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for CALL resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for PRINTVALUES resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for ALTER resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for ALTERB resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for SIGNAL resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for VIEWSIGNAL resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for ID resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for ISTRUE resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for REPEAT resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for UNTIL resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for BREAK resolved using rule 91 (conditions -> conditions condition .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 91 (conditions -> conditions condition .)
    LPARENT         reduce using rule 91 (conditions -> conditions condition .)
    WHEN            reduce using rule 91 (conditions -> conditions condition .)
    NEW             reduce using rule 91 (conditions -> conditions condition .)
    VALUES          reduce using rule 91 (conditions -> conditions condition .)
    CALL            reduce using rule 91 (conditions -> conditions condition .)
    PRINTVALUES     reduce using rule 91 (conditions -> conditions condition .)
    ALTER           reduce using rule 91 (conditions -> conditions condition .)
    ALTERB          reduce using rule 91 (conditions -> conditions condition .)
    SIGNAL          reduce using rule 91 (conditions -> conditions condition .)
    VIEWSIGNAL      reduce using rule 91 (conditions -> conditions condition .)
    ID              reduce using rule 91 (conditions -> conditions condition .)
    ISTRUE          reduce using rule 91 (conditions -> conditions condition .)
    REPEAT          reduce using rule 91 (conditions -> conditions condition .)
    UNTIL           reduce using rule 91 (conditions -> conditions condition .)
    CASE            reduce using rule 91 (conditions -> conditions condition .)
    RPARENT         reduce using rule 91 (conditions -> conditions condition .)
    BREAK           reduce using rule 91 (conditions -> conditions condition .)
    SEMICOLON       reduce using rule 91 (conditions -> conditions condition .)

  ! WHEN            [ reduce using rule 92 (conditions -> condition .) ]
  ! CASE            [ reduce using rule 92 (conditions -> condition .) ]
  ! RPARENT         [ reduce using rule 92 (conditions -> condition .) ]
  ! NEW             [ reduce using rule 92 (conditions -> condition .) ]
  ! VALUES          [ reduce using rule 92 (conditions -> condition .) ]
  ! CALL            [ reduce using rule 92 (conditions -> condition .) ]
  ! PRINTVALUES     [ reduce using rule 92 (conditions -> condition .) ]
  ! ALTER           [ reduce using rule 92 (conditions -> condition .) ]
  ! ALTERB          [ reduce using rule 92 (conditions -> condition .) ]
  ! SIGNAL          [ reduce using rule 92 (conditions -> condition .) ]
  ! VIEWSIGNAL      [ reduce using rule 92 (conditions -> condition .) ]
  ! ID              [ reduce using rule 92 (conditions -> condition .) ]
  ! ISTRUE          [ reduce using rule 92 (conditions -> condition .) ]
  ! REPEAT          [ reduce using rule 92 (conditions -> condition .) ]
  ! UNTIL           [ reduce using rule 92 (conditions -> condition .) ]
  ! BREAK           [ reduce using rule 92 (conditions -> condition .) ]
  ! SEMICOLON       [ reduce using rule 92 (conditions -> condition .) ]


state 172

    (54) local_variable -> NEW ID COMA LPARENT TYPE . COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> NEW ID COMA LPARENT TYPE . COMA BOOL RPARENT SEMICOLON

    COMA            shift and go to state 187


state 173

    (30) master_var -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (31) master_var -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 188
    BOOL            shift and go to state 189


state 174

    (56) values -> VALUES LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 190


state 175

    (57) values -> VALUES LPARENT ID COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 191


state 176

    (66) printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var .

    RPARENT         reduce using rule 66 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var .)
    PLUS            reduce using rule 66 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_var .)


state 177

    (67) printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string .

    RPARENT         reduce using rule 67 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string .)
    PLUS            reduce using rule 67 (printable_sentences -> PLUS printable_sentences PLUS printable_sentence_string .)


state 178

    (70) alter -> ALTER LPARENT ID COMA ADD COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 192


state 179

    (71) alter -> ALTER LPARENT ID COMA SUB COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 193


state 180

    (72) alter -> ALTER LPARENT ID COMA MUL COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 194


state 181

    (73) alter -> ALTER LPARENT ID COMA DIV COMA . INTEGER RPARENT SEMICOLON

    INTEGER         shift and go to state 195


state 182

    (94) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 196


state 183

    (95) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 197


state 184

    (82) sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .

    RPARENT         reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    NEW             reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    VALUES          reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    CALL            reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    ALTER           reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    ALTERB          reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    ID              reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    REPEAT          reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    UNTIL           reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    CASE            reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    WHEN            reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    BREAK           reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 82 (sentence14 -> REPEAT LPARENT sentences BREAK RPARENT SEMICOLON .)


state 185

    (83) sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .

    RPARENT         reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    NEW             reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    VALUES          reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    CALL            reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    PRINTVALUES     reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    ALTER           reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    ALTERB          reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    SIGNAL          reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    VIEWSIGNAL      reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    ID              reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    ISTRUE          reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    REPEAT          reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    UNTIL           reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    CASE            reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    WHEN            reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    BREAK           reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)
    SEMICOLON       reduce using rule 83 (sentence15 -> UNTIL LPARENT instructions RPARENT sentences SEMICOLON .)


state 186

    (87) case -> CASE expression NEWLINE conditions LPARENT sentences . RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (33) sentences -> sentences . sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    RPARENT         shift and go to state 198
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! RPARENT         [ reduce using rule 97 (empty -> .) ]
  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    conditions                     shift and go to state 55
    sentence                       shift and go to state 98
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 187

    (54) local_variable -> NEW ID COMA LPARENT TYPE COMA . INTEGER RPARENT SEMICOLON
    (55) local_variable -> NEW ID COMA LPARENT TYPE COMA . BOOL RPARENT SEMICOLON

    INTEGER         shift and go to state 199
    BOOL            shift and go to state 200


state 188

    (30) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 201


state 189

    (31) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 202


state 190

    (56) values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    WHEN            reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 56 (values -> VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 191

    (57) values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    REPEAT          reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    UNTIL           reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    WHEN            reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    BREAK           reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 57 (values -> VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON .)


state 192

    (70) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 203


state 193

    (71) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 204


state 194

    (72) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 205


state 195

    (73) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 206


state 196

    (94) signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    WHEN            reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 94 (signal -> SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON .)


state 197

    (95) signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    WHEN            reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 95 (signal -> SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON .)


state 198

    (87) case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT . ELSE NEWLINE LPARENT sentences RPARENT

    ELSE            shift and go to state 207


state 199

    (54) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER . RPARENT SEMICOLON

    RPARENT         shift and go to state 208


state 200

    (55) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL . RPARENT SEMICOLON

    RPARENT         shift and go to state 209


state 201

    (30) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 210


state 202

    (31) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 211


state 203

    (70) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 212


state 204

    (71) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 213


state 205

    (72) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 214


state 206

    (73) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 215


state 207

    (87) case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE . NEWLINE LPARENT sentences RPARENT

    NEWLINE         shift and go to state 216


state 208

    (54) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 217


state 209

    (55) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT . SEMICOLON

    SEMICOLON       shift and go to state 218


state 210

    (30) master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    WHEN            reduce using rule 30 (master_var -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 211

    (31) master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    REPEAT          reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    UNTIL           reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    WHEN            reduce using rule 31 (master_var -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)


state 212

    (70) alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    WHEN            reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 70 (alter -> ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON .)


state 213

    (71) alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    WHEN            reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 71 (alter -> ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON .)


state 214

    (72) alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    WHEN            reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 72 (alter -> ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON .)


state 215

    (73) alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    WHEN            reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 73 (alter -> ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON .)


state 216

    (87) case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE . LPARENT sentences RPARENT

    LPARENT         shift and go to state 219


state 217

    (54) local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .

    RPARENT         reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    NEW             reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VALUES          reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CALL            reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTER           reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ALTERB          reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ID              reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    REPEAT          reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    UNTIL           reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    CASE            reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    WHEN            reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    BREAK           reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 54 (local_variable -> NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON .)


state 218

    (55) local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .

    RPARENT         reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    NEW             reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VALUES          reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CALL            reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    PRINTVALUES     reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTER           reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ALTERB          reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SIGNAL          reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    VIEWSIGNAL      reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ID              reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    ISTRUE          reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    REPEAT          reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    UNTIL           reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    CASE            reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    WHEN            reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    BREAK           reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)
    SEMICOLON       reduce using rule 55 (local_variable -> NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON .)


state 219

    (87) case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT . sentences RPARENT
    (32) sentences -> . sentence
    (33) sentences -> . sentences sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    RPARENT         reduce using rule 97 (empty -> .)
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    conditions                     shift and go to state 55
    sentences                      shift and go to state 220
    sentence                       shift and go to state 51
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 220

    (87) case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences . RPARENT
    (33) sentences -> sentences . sentence
    (34) sentence -> . local_variable
    (35) sentence -> . values
    (36) sentence -> . cases
    (37) sentence -> . conditions
    (38) sentence -> . call
    (39) sentence -> . print_values
    (40) sentence -> . alter
    (41) sentence -> . alterB
    (42) sentence -> . signal
    (43) sentence -> . viewsignal
    (44) sentence -> . sentence7
    (45) sentence -> . sentence8
    (46) sentence -> . sentence9
    (47) sentence -> . sentence10
    (48) sentence -> . sentence11
    (49) sentence -> . sentence12
    (50) sentence -> . isTrue
    (51) sentence -> . sentence14
    (52) sentence -> . sentence15
    (53) sentence -> . empty
    (54) local_variable -> . NEW ID COMA LPARENT TYPE COMA INTEGER RPARENT SEMICOLON
    (55) local_variable -> . NEW ID COMA LPARENT TYPE COMA BOOL RPARENT SEMICOLON
    (56) values -> . VALUES LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (57) values -> . VALUES LPARENT ID COMA BOOL RPARENT SEMICOLON
    (88) cases -> . case
    (89) cases -> . cases case
    (91) conditions -> . conditions condition
    (92) conditions -> . condition
    (58) call -> . CALL LPARENT ID RPARENT SEMICOLON
    (59) print_values -> . PRINTVALUES LPARENT printable_sentences RPARENT SEMICOLON
    (70) alter -> . ALTER LPARENT ID COMA ADD COMA INTEGER RPARENT SEMICOLON
    (71) alter -> . ALTER LPARENT ID COMA SUB COMA INTEGER RPARENT SEMICOLON
    (72) alter -> . ALTER LPARENT ID COMA MUL COMA INTEGER RPARENT SEMICOLON
    (73) alter -> . ALTER LPARENT ID COMA DIV COMA INTEGER RPARENT SEMICOLON
    (74) alterB -> . ALTERB LPARENT ID RPARENT SEMICOLON
    (94) signal -> . SIGNAL LPARENT INTEGER COMA INTEGER RPARENT SEMICOLON
    (95) signal -> . SIGNAL LPARENT ID COMA INTEGER RPARENT SEMICOLON
    (96) viewsignal -> . VIEWSIGNAL LPARENT INTEGER RPARENT SEMICOLON
    (75) sentence7 -> . ID MAQ INTEGER
    (76) sentence8 -> . ID MEQ INTEGER
    (77) sentence9 -> . ID EQUAL INTEGER
    (78) sentence10 -> . ID DIFFERENT INTEGER
    (79) sentence11 -> . ID MEQEQUAL INTEGER
    (80) sentence12 -> . ID MAQEQUAL INTEGER
    (81) isTrue -> . ISTRUE LPARENT ID RPARENT SEMICOLON
    (82) sentence14 -> . REPEAT LPARENT sentences BREAK RPARENT SEMICOLON
    (83) sentence15 -> . UNTIL LPARENT instructions RPARENT sentences SEMICOLON
    (97) empty -> .
    (86) case -> . CASE expression NEWLINE conditions sentences
    (87) case -> . CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT
    (93) condition -> . WHEN INTEGER THEN NEWLINE

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for VALUES resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for PRINTVALUES resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for ALTERB resolved as shift
  ! shift/reduce conflict for SIGNAL resolved as shift
  ! shift/reduce conflict for VIEWSIGNAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
    RPARENT         shift and go to state 221
    NEW             shift and go to state 72
    VALUES          shift and go to state 36
    CALL            shift and go to state 39
    PRINTVALUES     shift and go to state 40
    ALTER           shift and go to state 41
    ALTERB          shift and go to state 42
    SIGNAL          shift and go to state 43
    VIEWSIGNAL      shift and go to state 44
    ID              shift and go to state 35
    ISTRUE          shift and go to state 45
    REPEAT          shift and go to state 46
    UNTIL           shift and go to state 47
    CASE            shift and go to state 48
    WHEN            shift and go to state 49

  ! RPARENT         [ reduce using rule 97 (empty -> .) ]
  ! NEW             [ reduce using rule 97 (empty -> .) ]
  ! VALUES          [ reduce using rule 97 (empty -> .) ]
  ! CALL            [ reduce using rule 97 (empty -> .) ]
  ! PRINTVALUES     [ reduce using rule 97 (empty -> .) ]
  ! ALTER           [ reduce using rule 97 (empty -> .) ]
  ! ALTERB          [ reduce using rule 97 (empty -> .) ]
  ! SIGNAL          [ reduce using rule 97 (empty -> .) ]
  ! VIEWSIGNAL      [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! ISTRUE          [ reduce using rule 97 (empty -> .) ]
  ! REPEAT          [ reduce using rule 97 (empty -> .) ]
  ! UNTIL           [ reduce using rule 97 (empty -> .) ]
  ! CASE            [ reduce using rule 97 (empty -> .) ]
  ! WHEN            [ reduce using rule 97 (empty -> .) ]

    conditions                     shift and go to state 55
    sentence                       shift and go to state 98
    local_variable                 shift and go to state 52
    values                         shift and go to state 53
    cases                          shift and go to state 54
    call                           shift and go to state 56
    print_values                   shift and go to state 57
    alter                          shift and go to state 58
    alterB                         shift and go to state 59
    signal                         shift and go to state 60
    viewsignal                     shift and go to state 61
    sentence7                      shift and go to state 62
    sentence8                      shift and go to state 63
    sentence9                      shift and go to state 64
    sentence10                     shift and go to state 65
    sentence11                     shift and go to state 66
    sentence12                     shift and go to state 67
    isTrue                         shift and go to state 68
    sentence14                     shift and go to state 69
    sentence15                     shift and go to state 70
    empty                          shift and go to state 71
    case                           shift and go to state 37
    condition                      shift and go to state 38

state 221

    (87) case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .

    CASE            reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    RPARENT         reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    NEW             reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    VALUES          reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    CALL            reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    PRINTVALUES     reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    ALTER           reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    ALTERB          reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    SIGNAL          reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    VIEWSIGNAL      reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    ID              reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    ISTRUE          reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    REPEAT          reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    UNTIL           reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    WHEN            reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    BREAK           reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)
    SEMICOLON       reduce using rule 87 (case -> CASE expression NEWLINE conditions LPARENT sentences RPARENT ELSE NEWLINE LPARENT sentences RPARENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEW in state 8 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 8 resolved as shift
WARNING: shift/reduce conflict for CALL in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 8 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 8 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 8 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 8 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 8 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 8 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 8 resolved as shift
WARNING: shift/reduce conflict for CASE in state 8 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 8 resolved as shift
WARNING: shift/reduce conflict for NEW in state 10 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 10 resolved as shift
WARNING: shift/reduce conflict for CALL in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 10 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 10 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 10 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 10 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 10 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 10 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 10 resolved as shift
WARNING: shift/reduce conflict for CASE in state 10 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 10 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 12 resolved as shift
WARNING: shift/reduce conflict for NEW in state 12 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 12 resolved as shift
WARNING: shift/reduce conflict for CALL in state 12 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 12 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 12 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 12 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 12 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 12 resolved as shift
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 12 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 12 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 12 resolved as shift
WARNING: shift/reduce conflict for CASE in state 12 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 12 resolved as shift
WARNING: shift/reduce conflict for CASE in state 16 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 17 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 50 resolved as shift
WARNING: shift/reduce conflict for NEW in state 50 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 50 resolved as shift
WARNING: shift/reduce conflict for CALL in state 50 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 50 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 50 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 50 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 50 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 50 resolved as shift
WARNING: shift/reduce conflict for ID in state 50 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 50 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 50 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 50 resolved as shift
WARNING: shift/reduce conflict for CASE in state 50 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 50 resolved as shift
WARNING: shift/reduce conflict for CASE in state 54 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 55 resolved as shift
WARNING: shift/reduce conflict for NEW in state 92 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 92 resolved as shift
WARNING: shift/reduce conflict for CALL in state 92 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 92 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 92 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 92 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 92 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 92 resolved as shift
WARNING: shift/reduce conflict for ID in state 92 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 92 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 92 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 92 resolved as shift
WARNING: shift/reduce conflict for CASE in state 92 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 92 resolved as shift
WARNING: shift/reduce conflict for NEW in state 93 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 93 resolved as shift
WARNING: shift/reduce conflict for CALL in state 93 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 93 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 93 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 93 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 93 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 93 resolved as shift
WARNING: shift/reduce conflict for ID in state 93 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 93 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 93 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 93 resolved as shift
WARNING: shift/reduce conflict for CASE in state 93 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 112 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 122 resolved as shift
WARNING: shift/reduce conflict for NEW in state 122 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 122 resolved as shift
WARNING: shift/reduce conflict for CALL in state 122 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 122 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 122 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 122 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 122 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 122 resolved as shift
WARNING: shift/reduce conflict for ID in state 122 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 122 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 122 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 122 resolved as shift
WARNING: shift/reduce conflict for CASE in state 122 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 122 resolved as shift
WARNING: shift/reduce conflict for NEW in state 124 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 124 resolved as shift
WARNING: shift/reduce conflict for CALL in state 124 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 124 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 124 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 124 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 124 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 124 resolved as shift
WARNING: shift/reduce conflict for ID in state 124 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 124 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 124 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 124 resolved as shift
WARNING: shift/reduce conflict for CASE in state 124 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 124 resolved as shift
WARNING: shift/reduce conflict for NEW in state 143 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 143 resolved as shift
WARNING: shift/reduce conflict for CALL in state 143 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 143 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 143 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 143 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 143 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 143 resolved as shift
WARNING: shift/reduce conflict for ID in state 143 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 143 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 143 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 143 resolved as shift
WARNING: shift/reduce conflict for CASE in state 143 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 143 resolved as shift
WARNING: shift/reduce conflict for NEW in state 144 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 144 resolved as shift
WARNING: shift/reduce conflict for CALL in state 144 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 144 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 144 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 144 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 144 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 144 resolved as shift
WARNING: shift/reduce conflict for ID in state 144 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 144 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 144 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 144 resolved as shift
WARNING: shift/reduce conflict for CASE in state 144 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 144 resolved as shift
WARNING: shift/reduce conflict for NEW in state 145 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 145 resolved as shift
WARNING: shift/reduce conflict for CALL in state 145 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 145 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 145 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 145 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 145 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 145 resolved as shift
WARNING: shift/reduce conflict for ID in state 145 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 145 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 145 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 145 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 145 resolved as shift
WARNING: shift/reduce conflict for CASE in state 145 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 168 resolved as shift
WARNING: shift/reduce conflict for NEW in state 168 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 168 resolved as shift
WARNING: shift/reduce conflict for CALL in state 168 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 168 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 168 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 168 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 168 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 168 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 168 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 168 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 168 resolved as shift
WARNING: shift/reduce conflict for CASE in state 168 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 168 resolved as shift
WARNING: shift/reduce conflict for NEW in state 169 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 169 resolved as shift
WARNING: shift/reduce conflict for CALL in state 169 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 169 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 169 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 169 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 169 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 169 resolved as shift
WARNING: shift/reduce conflict for ID in state 169 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 169 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 169 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 169 resolved as shift
WARNING: shift/reduce conflict for NEW in state 169 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 169 resolved as shift
WARNING: shift/reduce conflict for CALL in state 169 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 169 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 169 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 169 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 169 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 169 resolved as shift
WARNING: shift/reduce conflict for ID in state 169 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 169 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 169 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 169 resolved as shift
WARNING: shift/reduce conflict for CASE in state 169 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 169 resolved as shift
WARNING: shift/reduce conflict for NEW in state 170 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 170 resolved as shift
WARNING: shift/reduce conflict for CALL in state 170 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 170 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 170 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 170 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 170 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 170 resolved as shift
WARNING: shift/reduce conflict for ID in state 170 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 170 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 170 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 170 resolved as shift
WARNING: shift/reduce conflict for CASE in state 170 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 170 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 186 resolved as shift
WARNING: shift/reduce conflict for NEW in state 186 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 186 resolved as shift
WARNING: shift/reduce conflict for CALL in state 186 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 186 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 186 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 186 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 186 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 186 resolved as shift
WARNING: shift/reduce conflict for ID in state 186 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 186 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 186 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 186 resolved as shift
WARNING: shift/reduce conflict for CASE in state 186 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 186 resolved as shift
WARNING: shift/reduce conflict for NEW in state 219 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 219 resolved as shift
WARNING: shift/reduce conflict for CALL in state 219 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 219 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 219 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 219 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 219 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 219 resolved as shift
WARNING: shift/reduce conflict for ID in state 219 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 219 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 219 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 219 resolved as shift
WARNING: shift/reduce conflict for CASE in state 219 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 219 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 220 resolved as shift
WARNING: shift/reduce conflict for NEW in state 220 resolved as shift
WARNING: shift/reduce conflict for VALUES in state 220 resolved as shift
WARNING: shift/reduce conflict for CALL in state 220 resolved as shift
WARNING: shift/reduce conflict for PRINTVALUES in state 220 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 220 resolved as shift
WARNING: shift/reduce conflict for ALTERB in state 220 resolved as shift
WARNING: shift/reduce conflict for SIGNAL in state 220 resolved as shift
WARNING: shift/reduce conflict for VIEWSIGNAL in state 220 resolved as shift
WARNING: shift/reduce conflict for ID in state 220 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 220 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 220 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 220 resolved as shift
WARNING: shift/reduce conflict for CASE in state 220 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 220 resolved as shift
WARNING: reduce/reduce conflict in state 124 resolved using rule (instructions -> sentence)
WARNING: rejected rule (empty -> <empty>) in state 124
WARNING: reduce/reduce conflict in state 144 resolved using rule (instructions -> sentence sentences)
WARNING: rejected rule (empty -> <empty>) in state 144
WARNING: reduce/reduce conflict in state 169 resolved using rule (case -> CASE expression NEWLINE conditions sentences)
WARNING: rejected rule (empty -> <empty>) in state 169
WARNING: reduce/reduce conflict in state 171 resolved using rule (conditions -> conditions condition)
WARNING: rejected rule (conditions -> condition) in state 171
